ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hash_sha1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HASH_SHA1,"ax",%progbits
  18              		.align	1
  19              		.global	HASH_SHA1
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HASH_SHA1:
  27              	.LVL0:
  28              	.LFB123:
  29              		.file 1 "STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c"
   1:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** /**
   2:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   ******************************************************************************
   3:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @file    stm32f4xx_hash_sha1.c
   4:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @author  MCD Application Team
   5:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @version V1.8.1
   6:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @date    27-January-2022
   7:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @brief   This file provides high level functions to compute the HASH SHA1 and
   8:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   *          HMAC SHA1 Digest of an input message.
   9:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   *          It uses the stm32f4xx_hash.c/.h drivers to access the STM32F4xx HASH
  10:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   *          peripheral.
  11:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   *
  12:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** @verbatim
  13:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****  ===================================================================
  14:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****                  ##### How to use this driver #####
  15:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****  ===================================================================
  16:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****  [..]
  17:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****    (#) Enable The HASH controller clock using 
  18:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****        RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_HASH, ENABLE); function.
  19:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   
  20:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****    (#) Calculate the HASH SHA1 Digest using HASH_SHA1() function.
  21:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   
  22:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****    (#) Calculate the HMAC SHA1 Digest using HMAC_SHA1() function.
  23:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   
  24:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** @endverbatim
  25:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   *
  26:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   ******************************************************************************
  27:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @attention
  28:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   *
  29:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * Copyright (c) 2016 STMicroelectronics.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 2


  30:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * All rights reserved.
  31:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   *
  32:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * This software is licensed under terms that can be found in the LICENSE file
  33:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * in the root directory of this software component.
  34:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  35:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   *
  36:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   ******************************************************************************
  37:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   */
  38:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
  39:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** /* Includes ------------------------------------------------------------------*/
  40:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** #include "stm32f4xx_hash.h"
  41:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
  42:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  43:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @{
  44:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   */
  45:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
  46:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** /** @defgroup HASH 
  47:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @brief HASH driver modules
  48:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @{
  49:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   */
  50:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
  51:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** /* Private typedef -----------------------------------------------------------*/
  52:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** /* Private define ------------------------------------------------------------*/
  53:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** #define SHA1BUSY_TIMEOUT    ((uint32_t) 0x00010000)
  54:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
  55:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** /* Private macro -------------------------------------------------------------*/
  56:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** /* Private variables ---------------------------------------------------------*/
  57:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** /* Private function prototypes -----------------------------------------------*/
  58:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** /* Private functions ---------------------------------------------------------*/
  59:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
  60:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** /** @defgroup HASH_Private_Functions
  61:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @{
  62:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   */ 
  63:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
  64:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** /** @defgroup HASH_Group6 High Level SHA1 functions
  65:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****  *  @brief   High Level SHA1 Hash and HMAC functions 
  66:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****  *
  67:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** @verbatim   
  68:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****  ===============================================================================
  69:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****                ##### High Level SHA1 Hash and HMAC functions #####
  70:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****  ===============================================================================
  71:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
  72:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
  73:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** @endverbatim
  74:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @{
  75:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   */
  76:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
  77:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** /**
  78:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @brief  Compute the HASH SHA1 digest.
  79:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @param  Input: pointer to the Input buffer to be treated.
  80:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @param  Ilen: length of the Input buffer.
  81:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @param  Output: the returned digest
  82:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @retval An ErrorStatus enumeration value:
  83:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   *          - SUCCESS: digest computation done
  84:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   *          - ERROR: digest computation failed
  85:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   */
  86:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** ErrorStatus HASH_SHA1(uint8_t *Input, uint32_t Ilen, uint8_t Output[20])
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 3


  87:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** {
  30              		.loc 1 87 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 56
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 87 1 is_stmt 0 view .LVU1
  35 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 20
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8FB0     		sub	sp, sp, #60
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 80
  46 0004 0F46     		mov	r7, r1
  47 0006 1646     		mov	r6, r2
  88:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   HASH_InitTypeDef SHA1_HASH_InitStructure;
  48              		.loc 1 88 3 is_stmt 1 view .LVU2
  89:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   HASH_MsgDigest SHA1_MessageDigest;
  49              		.loc 1 89 3 view .LVU3
  90:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   __IO uint16_t nbvalidbitsdata = 0;
  50              		.loc 1 90 3 view .LVU4
  51              		.loc 1 90 17 is_stmt 0 view .LVU5
  52 0008 0024     		movs	r4, #0
  53 000a ADF80640 		strh	r4, [sp, #6]	@ movhi
  91:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   uint32_t i = 0;
  54              		.loc 1 91 3 is_stmt 1 view .LVU6
  55              	.LVL1:
  92:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   __IO uint32_t counter = 0;
  56              		.loc 1 92 3 view .LVU7
  57              		.loc 1 92 17 is_stmt 0 view .LVU8
  58 000e 0094     		str	r4, [sp]
  93:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   uint32_t busystatus = 0;
  59              		.loc 1 93 3 is_stmt 1 view .LVU9
  60              	.LVL2:
  94:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   ErrorStatus status = SUCCESS;
  61              		.loc 1 94 3 view .LVU10
  95:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   uint32_t inputaddr  = (uint32_t)Input;
  62              		.loc 1 95 3 view .LVU11
  63              		.loc 1 95 12 is_stmt 0 view .LVU12
  64 0010 0546     		mov	r5, r0
  65              	.LVL3:
  96:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   uint32_t outputaddr = (uint32_t)Output;
  66              		.loc 1 96 3 is_stmt 1 view .LVU13
  97:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
  98:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* Number of valid bits in last word of the Input data */
  99:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   nbvalidbitsdata = 8 * (Ilen % 4);
  67              		.loc 1 99 3 view .LVU14
  68              		.loc 1 99 19 is_stmt 0 view .LVU15
  69 0012 01F00303 		and	r3, r1, #3
  70 0016 DB00     		lsls	r3, r3, #3
  71 0018 ADF80630 		strh	r3, [sp, #6]	@ movhi
 100:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 101:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* HASH peripheral initialization */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 4


 102:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   HASH_DeInit();
  72              		.loc 1 102 3 is_stmt 1 view .LVU16
  73 001c FFF7FEFF 		bl	HASH_DeInit
  74              	.LVL4:
 103:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 104:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* HASH Configuration */
 105:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
  75              		.loc 1 105 3 view .LVU17
  76              		.loc 1 105 46 is_stmt 0 view .LVU18
  77 0020 0A94     		str	r4, [sp, #40]
 106:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HASH;
  78              		.loc 1 106 3 is_stmt 1 view .LVU19
  79              		.loc 1 106 41 is_stmt 0 view .LVU20
  80 0022 0B94     		str	r4, [sp, #44]
 107:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
  81              		.loc 1 107 3 is_stmt 1 view .LVU21
  82              		.loc 1 107 41 is_stmt 0 view .LVU22
  83 0024 2023     		movs	r3, #32
  84 0026 0C93     		str	r3, [sp, #48]
 108:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   HASH_Init(&SHA1_HASH_InitStructure);
  85              		.loc 1 108 3 is_stmt 1 view .LVU23
  86 0028 0AA8     		add	r0, sp, #40
  87 002a FFF7FEFF 		bl	HASH_Init
  88              	.LVL5:
 109:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 110:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* Configure the number of valid bits in last word of the data */
 111:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   HASH_SetLastWordValidBitsNbr(nbvalidbitsdata);
  89              		.loc 1 111 3 view .LVU24
  90 002e BDF80600 		ldrh	r0, [sp, #6]
  91 0032 80B2     		uxth	r0, r0
  92 0034 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
  93              	.LVL6:
 112:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 113:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* Write the Input block in the IN FIFO */
 114:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Ilen; i+=4)
  94              		.loc 1 114 3 view .LVU25
  95              	.L2:
  96              		.loc 1 114 12 discriminator 1 view .LVU26
  97              		.loc 1 114 3 is_stmt 0 discriminator 1 view .LVU27
  98 0038 BC42     		cmp	r4, r7
  99 003a 05D2     		bcs	.L9
 115:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 116:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     HASH_DataIn(*(uint32_t*)inputaddr);
 100              		.loc 1 116 5 is_stmt 1 discriminator 3 view .LVU28
 101 003c 55F8040B 		ldr	r0, [r5], #4
 102              	.LVL7:
 103              		.loc 1 116 5 is_stmt 0 discriminator 3 view .LVU29
 104 0040 FFF7FEFF 		bl	HASH_DataIn
 105              	.LVL8:
 117:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     inputaddr+=4;
 106              		.loc 1 117 5 is_stmt 1 discriminator 3 view .LVU30
 114:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 107              		.loc 1 114 20 discriminator 3 view .LVU31
 114:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 108              		.loc 1 114 21 is_stmt 0 discriminator 3 view .LVU32
 109 0044 0434     		adds	r4, r4, #4
 110              	.LVL9:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 5


 114:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 111              		.loc 1 114 21 discriminator 3 view .LVU33
 112 0046 F7E7     		b	.L2
 113              	.L9:
 118:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }
 119:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 120:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* Start the HASH processor */
 121:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   HASH_StartDigest();
 114              		.loc 1 121 3 is_stmt 1 view .LVU34
 115 0048 FFF7FEFF 		bl	HASH_StartDigest
 116              	.LVL10:
 117              	.L5:
 122:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 123:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* wait until the Busy flag is RESET */
 124:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   do
 118              		.loc 1 124 3 discriminator 2 view .LVU35
 125:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 126:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 119              		.loc 1 126 5 discriminator 2 view .LVU36
 120              		.loc 1 126 18 is_stmt 0 discriminator 2 view .LVU37
 121 004c 0820     		movs	r0, #8
 122 004e FFF7FEFF 		bl	HASH_GetFlagStatus
 123              	.LVL11:
 124              		.loc 1 126 16 discriminator 2 view .LVU38
 125 0052 0246     		mov	r2, r0
 126              	.LVL12:
 127:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     counter++;
 127              		.loc 1 127 5 is_stmt 1 discriminator 2 view .LVU39
 128              		.loc 1 127 12 is_stmt 0 discriminator 2 view .LVU40
 129 0054 009B     		ldr	r3, [sp]
 130 0056 0133     		adds	r3, r3, #1
 131 0058 0093     		str	r3, [sp]
 128:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 132              		.loc 1 128 10 is_stmt 1 discriminator 2 view .LVU41
 133              		.loc 1 128 20 is_stmt 0 discriminator 2 view .LVU42
 134 005a 009B     		ldr	r3, [sp]
 135              		.loc 1 128 3 discriminator 2 view .LVU43
 136 005c B3F5803F 		cmp	r3, #65536
 137 0060 01D0     		beq	.L4
 138              		.loc 1 128 41 discriminator 1 view .LVU44
 139 0062 0028     		cmp	r0, #0
 140 0064 F2D1     		bne	.L5
 141              	.L4:
 129:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 130:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   if (busystatus != RESET)
 142              		.loc 1 130 3 is_stmt 1 view .LVU45
 143              		.loc 1 130 6 is_stmt 0 view .LVU46
 144 0066 12B1     		cbz	r2, .L10
 131:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 132:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****      status = ERROR;
 145              		.loc 1 132 13 view .LVU47
 146 0068 0020     		movs	r0, #0
 147              	.LVL13:
 148              	.L6:
 133:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }
 134:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   else
 135:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 6


 136:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     /* Read the message digest */
 137:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     HASH_GetDigest(&SHA1_MessageDigest);
 138:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[0]);
 139:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 140:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[1]);
 141:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 142:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[2]);
 143:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 144:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[3]);
 145:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 146:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[4]);
 147:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }
 148:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   return status;
 149              		.loc 1 148 3 is_stmt 1 view .LVU48
 149:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** }
 150              		.loc 1 149 1 is_stmt 0 view .LVU49
 151 006a 0FB0     		add	sp, sp, #60
 152              	.LCFI2:
 153              		.cfi_remember_state
 154              		.cfi_def_cfa_offset 20
 155              		@ sp needed
 156 006c F0BD     		pop	{r4, r5, r6, r7, pc}
 157              	.LVL14:
 158              	.L10:
 159              	.LCFI3:
 160              		.cfi_restore_state
 137:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[0]);
 161              		.loc 1 137 5 is_stmt 1 view .LVU50
 162 006e 02A8     		add	r0, sp, #8
 163              	.LVL15:
 137:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[0]);
 164              		.loc 1 137 5 is_stmt 0 view .LVU51
 165 0070 FFF7FEFF 		bl	HASH_GetDigest
 166              	.LVL16:
 138:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 167              		.loc 1 138 5 is_stmt 1 view .LVU52
 138:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 168              		.loc 1 138 33 is_stmt 0 view .LVU53
 169 0074 029B     		ldr	r3, [sp, #8]
 170              	.LVL17:
 171              	.LBB22:
 172              	.LBI22:
 173              		.file 2 "STM32F4xx_LIB/core/core_cmInstr.h"
   1:STM32F4xx_LIB/core/core_cmInstr.h **** /**************************************************************************//**
   2:STM32F4xx_LIB/core/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:STM32F4xx_LIB/core/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:STM32F4xx_LIB/core/core_cmInstr.h ****  * @version  V4.10
   5:STM32F4xx_LIB/core/core_cmInstr.h ****  * @date     18. March 2015
   6:STM32F4xx_LIB/core/core_cmInstr.h ****  *
   7:STM32F4xx_LIB/core/core_cmInstr.h ****  * @note
   8:STM32F4xx_LIB/core/core_cmInstr.h ****  *
   9:STM32F4xx_LIB/core/core_cmInstr.h ****  ******************************************************************************/
  10:STM32F4xx_LIB/core/core_cmInstr.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:STM32F4xx_LIB/core/core_cmInstr.h **** 
  12:STM32F4xx_LIB/core/core_cmInstr.h ****    All rights reserved.
  13:STM32F4xx_LIB/core/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:STM32F4xx_LIB/core/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 7


  15:STM32F4xx_LIB/core/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:STM32F4xx_LIB/core/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:STM32F4xx_LIB/core/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:STM32F4xx_LIB/core/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:STM32F4xx_LIB/core/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:STM32F4xx_LIB/core/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:STM32F4xx_LIB/core/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:STM32F4xx_LIB/core/core_cmInstr.h ****      specific prior written permission.
  23:STM32F4xx_LIB/core/core_cmInstr.h ****    *
  24:STM32F4xx_LIB/core/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:STM32F4xx_LIB/core/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:STM32F4xx_LIB/core/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:STM32F4xx_LIB/core/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:STM32F4xx_LIB/core/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:STM32F4xx_LIB/core/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:STM32F4xx_LIB/core/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:STM32F4xx_LIB/core/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:STM32F4xx_LIB/core/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:STM32F4xx_LIB/core/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:STM32F4xx_LIB/core/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:STM32F4xx_LIB/core/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:STM32F4xx_LIB/core/core_cmInstr.h **** 
  37:STM32F4xx_LIB/core/core_cmInstr.h **** 
  38:STM32F4xx_LIB/core/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:STM32F4xx_LIB/core/core_cmInstr.h **** 
  41:STM32F4xx_LIB/core/core_cmInstr.h **** 
  42:STM32F4xx_LIB/core/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:STM32F4xx_LIB/core/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:STM32F4xx_LIB/core/core_cmInstr.h ****   Access to dedicated instructions
  45:STM32F4xx_LIB/core/core_cmInstr.h ****   @{
  46:STM32F4xx_LIB/core/core_cmInstr.h **** */
  47:STM32F4xx_LIB/core/core_cmInstr.h **** 
  48:STM32F4xx_LIB/core/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:STM32F4xx_LIB/core/core_cmInstr.h **** /* ARM armcc specific functions */
  50:STM32F4xx_LIB/core/core_cmInstr.h **** 
  51:STM32F4xx_LIB/core/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:STM32F4xx_LIB/core/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
  54:STM32F4xx_LIB/core/core_cmInstr.h **** 
  55:STM32F4xx_LIB/core/core_cmInstr.h **** 
  56:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  No Operation
  57:STM32F4xx_LIB/core/core_cmInstr.h **** 
  58:STM32F4xx_LIB/core/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  60:STM32F4xx_LIB/core/core_cmInstr.h **** #define __NOP                             __nop
  61:STM32F4xx_LIB/core/core_cmInstr.h **** 
  62:STM32F4xx_LIB/core/core_cmInstr.h **** 
  63:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:STM32F4xx_LIB/core/core_cmInstr.h **** 
  65:STM32F4xx_LIB/core/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:STM32F4xx_LIB/core/core_cmInstr.h ****     until one of a number of events occurs.
  67:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  68:STM32F4xx_LIB/core/core_cmInstr.h **** #define __WFI                             __wfi
  69:STM32F4xx_LIB/core/core_cmInstr.h **** 
  70:STM32F4xx_LIB/core/core_cmInstr.h **** 
  71:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Wait For Event
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 8


  72:STM32F4xx_LIB/core/core_cmInstr.h **** 
  73:STM32F4xx_LIB/core/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:STM32F4xx_LIB/core/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  76:STM32F4xx_LIB/core/core_cmInstr.h **** #define __WFE                             __wfe
  77:STM32F4xx_LIB/core/core_cmInstr.h **** 
  78:STM32F4xx_LIB/core/core_cmInstr.h **** 
  79:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Send Event
  80:STM32F4xx_LIB/core/core_cmInstr.h **** 
  81:STM32F4xx_LIB/core/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  83:STM32F4xx_LIB/core/core_cmInstr.h **** #define __SEV                             __sev
  84:STM32F4xx_LIB/core/core_cmInstr.h **** 
  85:STM32F4xx_LIB/core/core_cmInstr.h **** 
  86:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:STM32F4xx_LIB/core/core_cmInstr.h **** 
  88:STM32F4xx_LIB/core/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:STM32F4xx_LIB/core/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:STM32F4xx_LIB/core/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  92:STM32F4xx_LIB/core/core_cmInstr.h **** #define __ISB() do {\
  93:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
  94:STM32F4xx_LIB/core/core_cmInstr.h ****                    __isb(0xF);\
  95:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
  96:STM32F4xx_LIB/core/core_cmInstr.h ****                 } while (0)
  97:STM32F4xx_LIB/core/core_cmInstr.h **** 
  98:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  99:STM32F4xx_LIB/core/core_cmInstr.h **** 
 100:STM32F4xx_LIB/core/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 101:STM32F4xx_LIB/core/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 102:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 103:STM32F4xx_LIB/core/core_cmInstr.h **** #define __DSB() do {\
 104:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
 105:STM32F4xx_LIB/core/core_cmInstr.h ****                    __dsb(0xF);\
 106:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
 107:STM32F4xx_LIB/core/core_cmInstr.h ****                 } while (0)
 108:STM32F4xx_LIB/core/core_cmInstr.h **** 
 109:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Data Memory Barrier
 110:STM32F4xx_LIB/core/core_cmInstr.h **** 
 111:STM32F4xx_LIB/core/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 112:STM32F4xx_LIB/core/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 113:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 114:STM32F4xx_LIB/core/core_cmInstr.h **** #define __DMB() do {\
 115:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
 116:STM32F4xx_LIB/core/core_cmInstr.h ****                    __dmb(0xF);\
 117:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
 118:STM32F4xx_LIB/core/core_cmInstr.h ****                 } while (0)
 119:STM32F4xx_LIB/core/core_cmInstr.h **** 
 120:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 121:STM32F4xx_LIB/core/core_cmInstr.h **** 
 122:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the byte order in integer value.
 123:STM32F4xx_LIB/core/core_cmInstr.h **** 
 124:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 125:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 126:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 127:STM32F4xx_LIB/core/core_cmInstr.h **** #define __REV                             __rev
 128:STM32F4xx_LIB/core/core_cmInstr.h **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 9


 129:STM32F4xx_LIB/core/core_cmInstr.h **** 
 130:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 131:STM32F4xx_LIB/core/core_cmInstr.h **** 
 132:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 133:STM32F4xx_LIB/core/core_cmInstr.h **** 
 134:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 135:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 136:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 137:STM32F4xx_LIB/core/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 138:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 139:STM32F4xx_LIB/core/core_cmInstr.h **** {
 140:STM32F4xx_LIB/core/core_cmInstr.h ****   rev16 r0, r0
 141:STM32F4xx_LIB/core/core_cmInstr.h ****   bx lr
 142:STM32F4xx_LIB/core/core_cmInstr.h **** }
 143:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 144:STM32F4xx_LIB/core/core_cmInstr.h **** 
 145:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 146:STM32F4xx_LIB/core/core_cmInstr.h **** 
 147:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 148:STM32F4xx_LIB/core/core_cmInstr.h **** 
 149:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 150:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 151:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 152:STM32F4xx_LIB/core/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 153:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 154:STM32F4xx_LIB/core/core_cmInstr.h **** {
 155:STM32F4xx_LIB/core/core_cmInstr.h ****   revsh r0, r0
 156:STM32F4xx_LIB/core/core_cmInstr.h ****   bx lr
 157:STM32F4xx_LIB/core/core_cmInstr.h **** }
 158:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 159:STM32F4xx_LIB/core/core_cmInstr.h **** 
 160:STM32F4xx_LIB/core/core_cmInstr.h **** 
 161:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 162:STM32F4xx_LIB/core/core_cmInstr.h **** 
 163:STM32F4xx_LIB/core/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 164:STM32F4xx_LIB/core/core_cmInstr.h **** 
 165:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to rotate
 166:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 167:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Rotated value
 168:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 169:STM32F4xx_LIB/core/core_cmInstr.h **** #define __ROR                             __ror
 170:STM32F4xx_LIB/core/core_cmInstr.h **** 
 171:STM32F4xx_LIB/core/core_cmInstr.h **** 
 172:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Breakpoint
 173:STM32F4xx_LIB/core/core_cmInstr.h **** 
 174:STM32F4xx_LIB/core/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 175:STM32F4xx_LIB/core/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 176:STM32F4xx_LIB/core/core_cmInstr.h **** 
 177:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 178:STM32F4xx_LIB/core/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 179:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 180:STM32F4xx_LIB/core/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 181:STM32F4xx_LIB/core/core_cmInstr.h **** 
 182:STM32F4xx_LIB/core/core_cmInstr.h **** 
 183:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse bit order of value
 184:STM32F4xx_LIB/core/core_cmInstr.h **** 
 185:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the bit order of the given value.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 10


 186:STM32F4xx_LIB/core/core_cmInstr.h **** 
 187:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 188:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 189:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 190:STM32F4xx_LIB/core/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 191:STM32F4xx_LIB/core/core_cmInstr.h ****   #define __RBIT                          __rbit
 192:STM32F4xx_LIB/core/core_cmInstr.h **** #else
 193:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 194:STM32F4xx_LIB/core/core_cmInstr.h **** {
 195:STM32F4xx_LIB/core/core_cmInstr.h ****   uint32_t result;
 196:STM32F4xx_LIB/core/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 197:STM32F4xx_LIB/core/core_cmInstr.h **** 
 198:STM32F4xx_LIB/core/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
 199:STM32F4xx_LIB/core/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 200:STM32F4xx_LIB/core/core_cmInstr.h ****   {
 201:STM32F4xx_LIB/core/core_cmInstr.h ****     result <<= 1;
 202:STM32F4xx_LIB/core/core_cmInstr.h ****     result |= value & 1;
 203:STM32F4xx_LIB/core/core_cmInstr.h ****     s--;
 204:STM32F4xx_LIB/core/core_cmInstr.h ****   }
 205:STM32F4xx_LIB/core/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 206:STM32F4xx_LIB/core/core_cmInstr.h ****   return(result);
 207:STM32F4xx_LIB/core/core_cmInstr.h **** }
 208:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 209:STM32F4xx_LIB/core/core_cmInstr.h **** 
 210:STM32F4xx_LIB/core/core_cmInstr.h **** 
 211:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Count leading zeros
 212:STM32F4xx_LIB/core/core_cmInstr.h **** 
 213:STM32F4xx_LIB/core/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 214:STM32F4xx_LIB/core/core_cmInstr.h **** 
 215:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 216:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             number of leading zeros in value
 217:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 218:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CLZ                             __clz
 219:STM32F4xx_LIB/core/core_cmInstr.h **** 
 220:STM32F4xx_LIB/core/core_cmInstr.h **** 
 221:STM32F4xx_LIB/core/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 222:STM32F4xx_LIB/core/core_cmInstr.h **** 
 223:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 224:STM32F4xx_LIB/core/core_cmInstr.h **** 
 225:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 8 bit value.
 226:STM32F4xx_LIB/core/core_cmInstr.h **** 
 227:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 228:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 229:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 230:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 231:STM32F4xx_LIB/core/core_cmInstr.h **** 
 232:STM32F4xx_LIB/core/core_cmInstr.h **** 
 233:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 234:STM32F4xx_LIB/core/core_cmInstr.h **** 
 235:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 16 bit values.
 236:STM32F4xx_LIB/core/core_cmInstr.h **** 
 237:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 238:STM32F4xx_LIB/core/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 239:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 240:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 241:STM32F4xx_LIB/core/core_cmInstr.h **** 
 242:STM32F4xx_LIB/core/core_cmInstr.h **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 11


 243:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 244:STM32F4xx_LIB/core/core_cmInstr.h **** 
 245:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 32 bit values.
 246:STM32F4xx_LIB/core/core_cmInstr.h **** 
 247:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 248:STM32F4xx_LIB/core/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 249:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 250:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 251:STM32F4xx_LIB/core/core_cmInstr.h **** 
 252:STM32F4xx_LIB/core/core_cmInstr.h **** 
 253:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 254:STM32F4xx_LIB/core/core_cmInstr.h **** 
 255:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive STR instruction for 8 bit values.
 256:STM32F4xx_LIB/core/core_cmInstr.h **** 
 257:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 258:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 259:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          0  Function succeeded
 260:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          1  Function failed
 261:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 262:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 263:STM32F4xx_LIB/core/core_cmInstr.h **** 
 264:STM32F4xx_LIB/core/core_cmInstr.h **** 
 265:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 266:STM32F4xx_LIB/core/core_cmInstr.h **** 
 267:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive STR instruction for 16 bit values.
 268:STM32F4xx_LIB/core/core_cmInstr.h **** 
 269:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 270:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 271:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          0  Function succeeded
 272:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          1  Function failed
 273:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 274:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 275:STM32F4xx_LIB/core/core_cmInstr.h **** 
 276:STM32F4xx_LIB/core/core_cmInstr.h **** 
 277:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 278:STM32F4xx_LIB/core/core_cmInstr.h **** 
 279:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive STR instruction for 32 bit values.
 280:STM32F4xx_LIB/core/core_cmInstr.h **** 
 281:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 282:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 283:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          0  Function succeeded
 284:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          1  Function failed
 285:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 286:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 287:STM32F4xx_LIB/core/core_cmInstr.h **** 
 288:STM32F4xx_LIB/core/core_cmInstr.h **** 
 289:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 290:STM32F4xx_LIB/core/core_cmInstr.h **** 
 291:STM32F4xx_LIB/core/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 292:STM32F4xx_LIB/core/core_cmInstr.h **** 
 293:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 294:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CLREX                           __clrex
 295:STM32F4xx_LIB/core/core_cmInstr.h **** 
 296:STM32F4xx_LIB/core/core_cmInstr.h **** 
 297:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Signed Saturate
 298:STM32F4xx_LIB/core/core_cmInstr.h **** 
 299:STM32F4xx_LIB/core/core_cmInstr.h ****     This function saturates a signed value.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 12


 300:STM32F4xx_LIB/core/core_cmInstr.h **** 
 301:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 302:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 303:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             Saturated value
 304:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 305:STM32F4xx_LIB/core/core_cmInstr.h **** #define __SSAT                            __ssat
 306:STM32F4xx_LIB/core/core_cmInstr.h **** 
 307:STM32F4xx_LIB/core/core_cmInstr.h **** 
 308:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Unsigned Saturate
 309:STM32F4xx_LIB/core/core_cmInstr.h **** 
 310:STM32F4xx_LIB/core/core_cmInstr.h ****     This function saturates an unsigned value.
 311:STM32F4xx_LIB/core/core_cmInstr.h **** 
 312:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 313:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 314:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             Saturated value
 315:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 316:STM32F4xx_LIB/core/core_cmInstr.h **** #define __USAT                            __usat
 317:STM32F4xx_LIB/core/core_cmInstr.h **** 
 318:STM32F4xx_LIB/core/core_cmInstr.h **** 
 319:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Rotate Right with Extend (32 bit)
 320:STM32F4xx_LIB/core/core_cmInstr.h **** 
 321:STM32F4xx_LIB/core/core_cmInstr.h ****     This function moves each bit of a bitstring right by one bit.
 322:STM32F4xx_LIB/core/core_cmInstr.h ****     The carry input is shifted in at the left end of the bitstring.
 323:STM32F4xx_LIB/core/core_cmInstr.h **** 
 324:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to rotate
 325:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Rotated value
 326:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 327:STM32F4xx_LIB/core/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 328:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((section(".rrx_text"))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)
 329:STM32F4xx_LIB/core/core_cmInstr.h **** {
 330:STM32F4xx_LIB/core/core_cmInstr.h ****   rrx r0, r0
 331:STM32F4xx_LIB/core/core_cmInstr.h ****   bx lr
 332:STM32F4xx_LIB/core/core_cmInstr.h **** }
 333:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 334:STM32F4xx_LIB/core/core_cmInstr.h **** 
 335:STM32F4xx_LIB/core/core_cmInstr.h **** 
 336:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDRT Unprivileged (8 bit)
 337:STM32F4xx_LIB/core/core_cmInstr.h **** 
 338:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 8 bit value.
 339:STM32F4xx_LIB/core/core_cmInstr.h **** 
 340:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 341:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 342:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 343:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDRBT(ptr)                      ((uint8_t )  __ldrt(ptr))
 344:STM32F4xx_LIB/core/core_cmInstr.h **** 
 345:STM32F4xx_LIB/core/core_cmInstr.h **** 
 346:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDRT Unprivileged (16 bit)
 347:STM32F4xx_LIB/core/core_cmInstr.h **** 
 348:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 16 bit values.
 349:STM32F4xx_LIB/core/core_cmInstr.h **** 
 350:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 351:STM32F4xx_LIB/core/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 352:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 353:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDRHT(ptr)                      ((uint16_t)  __ldrt(ptr))
 354:STM32F4xx_LIB/core/core_cmInstr.h **** 
 355:STM32F4xx_LIB/core/core_cmInstr.h **** 
 356:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDRT Unprivileged (32 bit)
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 13


 357:STM32F4xx_LIB/core/core_cmInstr.h **** 
 358:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 32 bit values.
 359:STM32F4xx_LIB/core/core_cmInstr.h **** 
 360:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 361:STM32F4xx_LIB/core/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 362:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 363:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDRT(ptr)                       ((uint32_t ) __ldrt(ptr))
 364:STM32F4xx_LIB/core/core_cmInstr.h **** 
 365:STM32F4xx_LIB/core/core_cmInstr.h **** 
 366:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STRT Unprivileged (8 bit)
 367:STM32F4xx_LIB/core/core_cmInstr.h **** 
 368:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 8 bit values.
 369:STM32F4xx_LIB/core/core_cmInstr.h **** 
 370:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 371:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 372:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 373:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STRBT(value, ptr)               __strt(value, ptr)
 374:STM32F4xx_LIB/core/core_cmInstr.h **** 
 375:STM32F4xx_LIB/core/core_cmInstr.h **** 
 376:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STRT Unprivileged (16 bit)
 377:STM32F4xx_LIB/core/core_cmInstr.h **** 
 378:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 16 bit values.
 379:STM32F4xx_LIB/core/core_cmInstr.h **** 
 380:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 381:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 382:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 383:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STRHT(value, ptr)               __strt(value, ptr)
 384:STM32F4xx_LIB/core/core_cmInstr.h **** 
 385:STM32F4xx_LIB/core/core_cmInstr.h **** 
 386:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STRT Unprivileged (32 bit)
 387:STM32F4xx_LIB/core/core_cmInstr.h **** 
 388:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 32 bit values.
 389:STM32F4xx_LIB/core/core_cmInstr.h **** 
 390:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 391:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 392:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 393:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STRT(value, ptr)                __strt(value, ptr)
 394:STM32F4xx_LIB/core/core_cmInstr.h **** 
 395:STM32F4xx_LIB/core/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 396:STM32F4xx_LIB/core/core_cmInstr.h **** 
 397:STM32F4xx_LIB/core/core_cmInstr.h **** 
 398:STM32F4xx_LIB/core/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 399:STM32F4xx_LIB/core/core_cmInstr.h **** /* GNU gcc specific functions */
 400:STM32F4xx_LIB/core/core_cmInstr.h **** 
 401:STM32F4xx_LIB/core/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 402:STM32F4xx_LIB/core/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 403:STM32F4xx_LIB/core/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 404:STM32F4xx_LIB/core/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 405:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 406:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 407:STM32F4xx_LIB/core/core_cmInstr.h **** #else
 408:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 409:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 410:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 411:STM32F4xx_LIB/core/core_cmInstr.h **** 
 412:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  No Operation
 413:STM32F4xx_LIB/core/core_cmInstr.h **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 14


 414:STM32F4xx_LIB/core/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 415:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 416:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 417:STM32F4xx_LIB/core/core_cmInstr.h **** {
 418:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("nop");
 419:STM32F4xx_LIB/core/core_cmInstr.h **** }
 420:STM32F4xx_LIB/core/core_cmInstr.h **** 
 421:STM32F4xx_LIB/core/core_cmInstr.h **** 
 422:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Wait For Interrupt
 423:STM32F4xx_LIB/core/core_cmInstr.h **** 
 424:STM32F4xx_LIB/core/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 425:STM32F4xx_LIB/core/core_cmInstr.h ****     until one of a number of events occurs.
 426:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 427:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 428:STM32F4xx_LIB/core/core_cmInstr.h **** {
 429:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("wfi");
 430:STM32F4xx_LIB/core/core_cmInstr.h **** }
 431:STM32F4xx_LIB/core/core_cmInstr.h **** 
 432:STM32F4xx_LIB/core/core_cmInstr.h **** 
 433:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Wait For Event
 434:STM32F4xx_LIB/core/core_cmInstr.h **** 
 435:STM32F4xx_LIB/core/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 436:STM32F4xx_LIB/core/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 437:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 438:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 439:STM32F4xx_LIB/core/core_cmInstr.h **** {
 440:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("wfe");
 441:STM32F4xx_LIB/core/core_cmInstr.h **** }
 442:STM32F4xx_LIB/core/core_cmInstr.h **** 
 443:STM32F4xx_LIB/core/core_cmInstr.h **** 
 444:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Send Event
 445:STM32F4xx_LIB/core/core_cmInstr.h **** 
 446:STM32F4xx_LIB/core/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 447:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 448:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 449:STM32F4xx_LIB/core/core_cmInstr.h **** {
 450:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("sev");
 451:STM32F4xx_LIB/core/core_cmInstr.h **** }
 452:STM32F4xx_LIB/core/core_cmInstr.h **** 
 453:STM32F4xx_LIB/core/core_cmInstr.h **** 
 454:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 455:STM32F4xx_LIB/core/core_cmInstr.h **** 
 456:STM32F4xx_LIB/core/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 457:STM32F4xx_LIB/core/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 458:STM32F4xx_LIB/core/core_cmInstr.h ****     memory, after the instruction has been completed.
 459:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 460:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 461:STM32F4xx_LIB/core/core_cmInstr.h **** {
 462:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("isb 0xF":::"memory");
 463:STM32F4xx_LIB/core/core_cmInstr.h **** }
 464:STM32F4xx_LIB/core/core_cmInstr.h **** 
 465:STM32F4xx_LIB/core/core_cmInstr.h **** 
 466:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 467:STM32F4xx_LIB/core/core_cmInstr.h **** 
 468:STM32F4xx_LIB/core/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 469:STM32F4xx_LIB/core/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 470:STM32F4xx_LIB/core/core_cmInstr.h ****  */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 15


 471:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 472:STM32F4xx_LIB/core/core_cmInstr.h **** {
 473:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("dsb 0xF":::"memory");
 474:STM32F4xx_LIB/core/core_cmInstr.h **** }
 475:STM32F4xx_LIB/core/core_cmInstr.h **** 
 476:STM32F4xx_LIB/core/core_cmInstr.h **** 
 477:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Data Memory Barrier
 478:STM32F4xx_LIB/core/core_cmInstr.h **** 
 479:STM32F4xx_LIB/core/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 480:STM32F4xx_LIB/core/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 481:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 482:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 483:STM32F4xx_LIB/core/core_cmInstr.h **** {
 484:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("dmb 0xF":::"memory");
 485:STM32F4xx_LIB/core/core_cmInstr.h **** }
 486:STM32F4xx_LIB/core/core_cmInstr.h **** 
 487:STM32F4xx_LIB/core/core_cmInstr.h **** 
 488:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 489:STM32F4xx_LIB/core/core_cmInstr.h **** 
 490:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the byte order in integer value.
 491:STM32F4xx_LIB/core/core_cmInstr.h **** 
 492:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 493:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 494:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 495:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 174              		.loc 2 495 57 is_stmt 1 view .LVU54
 175              	.LBB23:
 496:STM32F4xx_LIB/core/core_cmInstr.h **** {
 497:STM32F4xx_LIB/core/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 498:STM32F4xx_LIB/core/core_cmInstr.h ****   return __builtin_bswap32(value);
 176              		.loc 2 498 3 view .LVU55
 177              		.loc 2 498 10 is_stmt 0 view .LVU56
 178 0076 1BBA     		rev	r3, r3
 179              	.LVL18:
 180              		.loc 2 498 10 view .LVU57
 181              	.LBE23:
 182              	.LBE22:
 138:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 183              		.loc 1 138 31 view .LVU58
 184 0078 3360     		str	r3, [r6]
 139:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[1]);
 185              		.loc 1 139 5 is_stmt 1 view .LVU59
 186              	.LVL19:
 140:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 187              		.loc 1 140 5 view .LVU60
 140:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 188              		.loc 1 140 33 is_stmt 0 view .LVU61
 189 007a 039B     		ldr	r3, [sp, #12]
 190              	.LVL20:
 191              	.LBB24:
 192              	.LBI24:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 193              		.loc 2 495 57 is_stmt 1 view .LVU62
 194              	.LBB25:
 195              		.loc 2 498 3 view .LVU63
 196              		.loc 2 498 10 is_stmt 0 view .LVU64
 197 007c 1BBA     		rev	r3, r3
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 16


 198              	.LVL21:
 199              		.loc 2 498 10 view .LVU65
 200              	.LBE25:
 201              	.LBE24:
 140:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 202              		.loc 1 140 31 view .LVU66
 203 007e 7360     		str	r3, [r6, #4]
 141:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[2]);
 204              		.loc 1 141 5 is_stmt 1 view .LVU67
 205              	.LVL22:
 142:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 206              		.loc 1 142 5 view .LVU68
 142:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 207              		.loc 1 142 33 is_stmt 0 view .LVU69
 208 0080 049B     		ldr	r3, [sp, #16]
 209              	.LVL23:
 210              	.LBB26:
 211              	.LBI26:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 212              		.loc 2 495 57 is_stmt 1 view .LVU70
 213              	.LBB27:
 214              		.loc 2 498 3 view .LVU71
 215              		.loc 2 498 10 is_stmt 0 view .LVU72
 216 0082 1BBA     		rev	r3, r3
 217              	.LVL24:
 218              		.loc 2 498 10 view .LVU73
 219              	.LBE27:
 220              	.LBE26:
 142:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 221              		.loc 1 142 31 view .LVU74
 222 0084 B360     		str	r3, [r6, #8]
 143:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[3]);
 223              		.loc 1 143 5 is_stmt 1 view .LVU75
 224              	.LVL25:
 144:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 225              		.loc 1 144 5 view .LVU76
 144:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 226              		.loc 1 144 33 is_stmt 0 view .LVU77
 227 0086 059B     		ldr	r3, [sp, #20]
 228              	.LVL26:
 229              	.LBB28:
 230              	.LBI28:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 231              		.loc 2 495 57 is_stmt 1 view .LVU78
 232              	.LBB29:
 233              		.loc 2 498 3 view .LVU79
 234              		.loc 2 498 10 is_stmt 0 view .LVU80
 235 0088 1BBA     		rev	r3, r3
 236              	.LVL27:
 237              		.loc 2 498 10 view .LVU81
 238              	.LBE29:
 239              	.LBE28:
 144:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 240              		.loc 1 144 31 view .LVU82
 241 008a F360     		str	r3, [r6, #12]
 145:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[4]);
 242              		.loc 1 145 5 is_stmt 1 view .LVU83
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 17


 243              	.LVL28:
 146:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }
 244              		.loc 1 146 5 view .LVU84
 146:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }
 245              		.loc 1 146 33 is_stmt 0 view .LVU85
 246 008c 069B     		ldr	r3, [sp, #24]
 247              	.LVL29:
 248              	.LBB30:
 249              	.LBI30:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 250              		.loc 2 495 57 is_stmt 1 view .LVU86
 251              	.LBB31:
 252              		.loc 2 498 3 view .LVU87
 253              		.loc 2 498 10 is_stmt 0 view .LVU88
 254 008e 1BBA     		rev	r3, r3
 255              	.LVL30:
 256              		.loc 2 498 10 view .LVU89
 257              	.LBE31:
 258              	.LBE30:
 146:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }
 259              		.loc 1 146 31 view .LVU90
 260 0090 3361     		str	r3, [r6, #16]
  94:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   uint32_t inputaddr  = (uint32_t)Input;
 261              		.loc 1 94 15 view .LVU91
 262 0092 0120     		movs	r0, #1
 263 0094 E9E7     		b	.L6
 264              		.cfi_endproc
 265              	.LFE123:
 267              		.section	.text.HMAC_SHA1,"ax",%progbits
 268              		.align	1
 269              		.global	HMAC_SHA1
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv4-sp-d16
 275              	HMAC_SHA1:
 276              	.LVL31:
 277              	.LFB124:
 150:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 151:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** /**
 152:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @brief  Compute the HMAC SHA1 digest.
 153:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @param  Key: pointer to the Key used for HMAC.
 154:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @param  Keylen: length of the Key used for HMAC.  
 155:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @param  Input: pointer to the Input buffer to be treated.
 156:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @param  Ilen: length of the Input buffer.
 157:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @param  Output: the returned digest
 158:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   * @retval An ErrorStatus enumeration value:
 159:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   *          - SUCCESS: digest computation done
 160:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   *          - ERROR: digest computation failed
 161:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   */
 162:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** ErrorStatus HMAC_SHA1(uint8_t *Key, uint32_t Keylen, uint8_t *Input,
 163:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****                       uint32_t Ilen, uint8_t Output[20])
 164:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** {
 278              		.loc 1 164 1 is_stmt 1 view -0
 279              		.cfi_startproc
 280              		@ args = 4, pretend = 0, frame = 56
 281              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 18


 282              		.loc 1 164 1 is_stmt 0 view .LVU93
 283 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 284              	.LCFI4:
 285              		.cfi_def_cfa_offset 28
 286              		.cfi_offset 4, -28
 287              		.cfi_offset 5, -24
 288              		.cfi_offset 6, -20
 289              		.cfi_offset 7, -16
 290              		.cfi_offset 8, -12
 291              		.cfi_offset 9, -8
 292              		.cfi_offset 14, -4
 293 0004 8FB0     		sub	sp, sp, #60
 294              	.LCFI5:
 295              		.cfi_def_cfa_offset 88
 296 0006 8146     		mov	r9, r0
 297 0008 0D46     		mov	r5, r1
 298 000a 1F46     		mov	r7, r3
 165:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   HASH_InitTypeDef SHA1_HASH_InitStructure;
 299              		.loc 1 165 3 is_stmt 1 view .LVU94
 166:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   HASH_MsgDigest SHA1_MessageDigest;
 300              		.loc 1 166 3 view .LVU95
 167:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   __IO uint16_t nbvalidbitsdata = 0;
 301              		.loc 1 167 3 view .LVU96
 302              		.loc 1 167 17 is_stmt 0 view .LVU97
 303 000c 0024     		movs	r4, #0
 304 000e ADF80640 		strh	r4, [sp, #6]	@ movhi
 168:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   __IO uint16_t nbvalidbitskey = 0;
 305              		.loc 1 168 3 is_stmt 1 view .LVU98
 306              		.loc 1 168 17 is_stmt 0 view .LVU99
 307 0012 ADF80440 		strh	r4, [sp, #4]	@ movhi
 169:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   uint32_t i = 0;
 308              		.loc 1 169 3 is_stmt 1 view .LVU100
 309              	.LVL32:
 170:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   __IO uint32_t counter = 0;
 310              		.loc 1 170 3 view .LVU101
 311              		.loc 1 170 17 is_stmt 0 view .LVU102
 312 0016 0094     		str	r4, [sp]
 171:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   uint32_t busystatus = 0;
 313              		.loc 1 171 3 is_stmt 1 view .LVU103
 314              	.LVL33:
 172:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   ErrorStatus status = SUCCESS;
 315              		.loc 1 172 3 view .LVU104
 173:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   uint32_t keyaddr    = (uint32_t)Key;
 316              		.loc 1 173 3 view .LVU105
 317              		.loc 1 173 12 is_stmt 0 view .LVU106
 318 0018 8046     		mov	r8, r0
 319              	.LVL34:
 174:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   uint32_t inputaddr  = (uint32_t)Input;
 320              		.loc 1 174 3 is_stmt 1 view .LVU107
 321              		.loc 1 174 12 is_stmt 0 view .LVU108
 322 001a 1646     		mov	r6, r2
 323              	.LVL35:
 175:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   uint32_t outputaddr = (uint32_t)Output;
 324              		.loc 1 175 3 is_stmt 1 view .LVU109
 176:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 177:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* Number of valid bits in last word of the Input data */
 178:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   nbvalidbitsdata = 8 * (Ilen % 4);
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 19


 325              		.loc 1 178 3 view .LVU110
 326              		.loc 1 178 19 is_stmt 0 view .LVU111
 327 001c 03F00303 		and	r3, r3, #3
 328              	.LVL36:
 329              		.loc 1 178 19 view .LVU112
 330 0020 DB00     		lsls	r3, r3, #3
 331 0022 ADF80630 		strh	r3, [sp, #6]	@ movhi
 179:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 180:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* Number of valid bits in last word of the Key */
 181:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   nbvalidbitskey = 8 * (Keylen % 4);
 332              		.loc 1 181 3 is_stmt 1 view .LVU113
 333              		.loc 1 181 18 is_stmt 0 view .LVU114
 334 0026 01F00303 		and	r3, r1, #3
 335 002a DB00     		lsls	r3, r3, #3
 336 002c ADF80430 		strh	r3, [sp, #4]	@ movhi
 182:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 183:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* HASH peripheral initialization */
 184:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   HASH_DeInit();
 337              		.loc 1 184 3 is_stmt 1 view .LVU115
 338 0030 FFF7FEFF 		bl	HASH_DeInit
 339              	.LVL37:
 185:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 186:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* HASH Configuration */
 187:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
 340              		.loc 1 187 3 view .LVU116
 341              		.loc 1 187 46 is_stmt 0 view .LVU117
 342 0034 0A94     		str	r4, [sp, #40]
 188:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HMAC;
 343              		.loc 1 188 3 is_stmt 1 view .LVU118
 344              		.loc 1 188 41 is_stmt 0 view .LVU119
 345 0036 4023     		movs	r3, #64
 346 0038 0B93     		str	r3, [sp, #44]
 189:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
 347              		.loc 1 189 3 is_stmt 1 view .LVU120
 348              		.loc 1 189 41 is_stmt 0 view .LVU121
 349 003a 2023     		movs	r3, #32
 350 003c 0C93     		str	r3, [sp, #48]
 190:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   if(Keylen > 64)
 351              		.loc 1 190 3 is_stmt 1 view .LVU122
 352              		.loc 1 190 5 is_stmt 0 view .LVU123
 353 003e 402D     		cmp	r5, #64
 354 0040 13D9     		bls	.L12
 191:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 192:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     /* HMAC long Key */
 193:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     SHA1_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_LongKey;
 355              		.loc 1 193 5 is_stmt 1 view .LVU124
 356              		.loc 1 193 46 is_stmt 0 view .LVU125
 357 0042 4FF48033 		mov	r3, #65536
 358 0046 0D93     		str	r3, [sp, #52]
 359              	.L13:
 194:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }
 195:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   else
 196:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 197:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     /* HMAC short Key */
 198:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     SHA1_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
 199:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }
 200:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   HASH_Init(&SHA1_HASH_InitStructure);
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 20


 360              		.loc 1 200 3 is_stmt 1 view .LVU126
 361 0048 0AA8     		add	r0, sp, #40
 362 004a FFF7FEFF 		bl	HASH_Init
 363              	.LVL38:
 201:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 202:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* Configure the number of valid bits in last word of the Key */
 203:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   HASH_SetLastWordValidBitsNbr(nbvalidbitskey);
 364              		.loc 1 203 3 view .LVU127
 365 004e BDF80400 		ldrh	r0, [sp, #4]
 366 0052 80B2     		uxth	r0, r0
 367 0054 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 368              	.LVL39:
 204:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 205:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* Write the Key */
 206:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Keylen; i+=4)
 369              		.loc 1 206 3 view .LVU128
 370              		.loc 1 206 8 is_stmt 0 view .LVU129
 371 0058 0024     		movs	r4, #0
 372              	.LVL40:
 373              	.L14:
 374              		.loc 1 206 12 is_stmt 1 discriminator 1 view .LVU130
 375              		.loc 1 206 3 is_stmt 0 discriminator 1 view .LVU131
 376 005a AC42     		cmp	r4, r5
 377 005c 08D2     		bcs	.L31
 207:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 208:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     HASH_DataIn(*(uint32_t*)keyaddr);
 378              		.loc 1 208 5 is_stmt 1 discriminator 3 view .LVU132
 379 005e 59F8040B 		ldr	r0, [r9], #4
 380              	.LVL41:
 381              		.loc 1 208 5 is_stmt 0 discriminator 3 view .LVU133
 382 0062 FFF7FEFF 		bl	HASH_DataIn
 383              	.LVL42:
 209:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     keyaddr+=4;
 384              		.loc 1 209 5 is_stmt 1 discriminator 3 view .LVU134
 206:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 385              		.loc 1 206 22 discriminator 3 view .LVU135
 206:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 386              		.loc 1 206 23 is_stmt 0 discriminator 3 view .LVU136
 387 0066 0434     		adds	r4, r4, #4
 388              	.LVL43:
 206:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 389              		.loc 1 206 23 discriminator 3 view .LVU137
 390 0068 F7E7     		b	.L14
 391              	.LVL44:
 392              	.L12:
 198:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }
 393              		.loc 1 198 5 is_stmt 1 view .LVU138
 198:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }
 394              		.loc 1 198 46 is_stmt 0 view .LVU139
 395 006a 0023     		movs	r3, #0
 396 006c 0D93     		str	r3, [sp, #52]
 397 006e EBE7     		b	.L13
 398              	.LVL45:
 399              	.L31:
 210:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }
 211:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 212:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* Start the HASH processor */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 21


 213:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   HASH_StartDigest();
 400              		.loc 1 213 3 is_stmt 1 view .LVU140
 401 0070 FFF7FEFF 		bl	HASH_StartDigest
 402              	.LVL46:
 403              	.L17:
 214:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 215:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   /* wait until the Busy flag is RESET */
 216:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   do
 404              		.loc 1 216 3 discriminator 2 view .LVU141
 217:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 218:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 405              		.loc 1 218 5 discriminator 2 view .LVU142
 406              		.loc 1 218 18 is_stmt 0 discriminator 2 view .LVU143
 407 0074 0820     		movs	r0, #8
 408 0076 FFF7FEFF 		bl	HASH_GetFlagStatus
 409              	.LVL47:
 410              		.loc 1 218 16 discriminator 2 view .LVU144
 411 007a 8146     		mov	r9, r0
 412              	.LVL48:
 219:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     counter++;
 413              		.loc 1 219 5 is_stmt 1 discriminator 2 view .LVU145
 414              		.loc 1 219 12 is_stmt 0 discriminator 2 view .LVU146
 415 007c 009C     		ldr	r4, [sp]
 416 007e 0134     		adds	r4, r4, #1
 417 0080 0094     		str	r4, [sp]
 220:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 418              		.loc 1 220 10 is_stmt 1 discriminator 2 view .LVU147
 419              		.loc 1 220 20 is_stmt 0 discriminator 2 view .LVU148
 420 0082 009B     		ldr	r3, [sp]
 421              		.loc 1 220 3 discriminator 2 view .LVU149
 422 0084 B3F5803F 		cmp	r3, #65536
 423 0088 01D0     		beq	.L16
 424              		.loc 1 220 41 discriminator 1 view .LVU150
 425 008a 0028     		cmp	r0, #0
 426 008c F2D1     		bne	.L17
 427              	.L16:
 221:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 222:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   if (busystatus != RESET)
 428              		.loc 1 222 3 is_stmt 1 view .LVU151
 429              		.loc 1 222 6 is_stmt 0 view .LVU152
 430 008e B9F1000F 		cmp	r9, #0
 431 0092 03D0     		beq	.L32
 223:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 224:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****      status = ERROR;
 432              		.loc 1 224 13 view .LVU153
 433 0094 0020     		movs	r0, #0
 434              	.LVL49:
 435              	.L18:
 225:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }
 226:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   else
 227:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   {
 228:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     /* Configure the number of valid bits in last word of the Input data */
 229:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     HASH_SetLastWordValidBitsNbr(nbvalidbitsdata);
 230:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 231:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     /* Write the Input block in the IN FIFO */
 232:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     for(i=0; i<Ilen; i+=4)
 233:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     {
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 22


 234:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       HASH_DataIn(*(uint32_t*)inputaddr);
 235:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       inputaddr+=4;
 236:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     }
 237:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 238:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     /* Start the HASH processor */
 239:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     HASH_StartDigest();
 240:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 241:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 242:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     /* wait until the Busy flag is RESET */
 243:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     counter =0;
 244:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     do
 245:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     {
 246:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 247:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       counter++;
 248:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 249:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 250:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     if (busystatus != RESET)
 251:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     {
 252:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       status = ERROR;
 253:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     }
 254:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     else
 255:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     {  
 256:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       /* Configure the number of valid bits in last word of the Key */
 257:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       HASH_SetLastWordValidBitsNbr(nbvalidbitskey);
 258:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 259:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       /* Write the Key */
 260:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       keyaddr = (uint32_t)Key;
 261:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       for(i=0; i<Keylen; i+=4)
 262:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       {
 263:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         HASH_DataIn(*(uint32_t*)keyaddr);
 264:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         keyaddr+=4;
 265:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       }
 266:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 267:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       /* Start the HASH processor */
 268:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       HASH_StartDigest();
 269:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 270:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       /* wait until the Busy flag is RESET */
 271:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       counter =0;
 272:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       do
 273:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       {
 274:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 275:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         counter++;
 276:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 277:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 278:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       if (busystatus != RESET)
 279:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       {
 280:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         status = ERROR;
 281:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       }
 282:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       else
 283:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       {
 284:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         /* Read the message digest */
 285:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         HASH_GetDigest(&SHA1_MessageDigest);
 286:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[0]);
 287:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 288:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[1]);
 289:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 290:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[2]);
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 23


 291:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 292:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[3]);
 293:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 294:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[4]);
 295:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       }
 296:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     }  
 297:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   }
 298:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   return status;  
 436              		.loc 1 298 3 is_stmt 1 view .LVU154
 299:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** }
 437              		.loc 1 299 1 is_stmt 0 view .LVU155
 438 0096 0FB0     		add	sp, sp, #60
 439              	.LCFI6:
 440              		.cfi_remember_state
 441              		.cfi_def_cfa_offset 28
 442              		@ sp needed
 443 0098 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 444              	.LVL50:
 445              	.L32:
 446              	.LCFI7:
 447              		.cfi_restore_state
 229:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 448              		.loc 1 229 5 is_stmt 1 view .LVU156
 449 009c BDF80600 		ldrh	r0, [sp, #6]
 450              	.LVL51:
 229:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 451              		.loc 1 229 5 is_stmt 0 view .LVU157
 452 00a0 80B2     		uxth	r0, r0
 453 00a2 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 454              	.LVL52:
 232:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     {
 455              		.loc 1 232 5 is_stmt 1 view .LVU158
 456              	.L19:
 232:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     {
 457              		.loc 1 232 14 discriminator 1 view .LVU159
 232:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     {
 458              		.loc 1 232 5 is_stmt 0 discriminator 1 view .LVU160
 459 00a6 B945     		cmp	r9, r7
 460 00a8 06D2     		bcs	.L33
 234:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       inputaddr+=4;
 461              		.loc 1 234 7 is_stmt 1 discriminator 3 view .LVU161
 462 00aa 56F8040B 		ldr	r0, [r6], #4
 463              	.LVL53:
 234:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       inputaddr+=4;
 464              		.loc 1 234 7 is_stmt 0 discriminator 3 view .LVU162
 465 00ae FFF7FEFF 		bl	HASH_DataIn
 466              	.LVL54:
 235:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     }
 467              		.loc 1 235 7 is_stmt 1 discriminator 3 view .LVU163
 232:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     {
 468              		.loc 1 232 22 discriminator 3 view .LVU164
 232:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     {
 469              		.loc 1 232 23 is_stmt 0 discriminator 3 view .LVU165
 470 00b2 09F10409 		add	r9, r9, #4
 471              	.LVL55:
 232:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     {
 472              		.loc 1 232 23 discriminator 3 view .LVU166
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 24


 473 00b6 F6E7     		b	.L19
 474              	.L33:
 239:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 475              		.loc 1 239 5 is_stmt 1 view .LVU167
 476 00b8 FFF7FEFF 		bl	HASH_StartDigest
 477              	.LVL56:
 243:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     do
 478              		.loc 1 243 5 view .LVU168
 243:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     do
 479              		.loc 1 243 13 is_stmt 0 view .LVU169
 480 00bc 0023     		movs	r3, #0
 481 00be 0093     		str	r3, [sp]
 482              	.L22:
 244:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     {
 483              		.loc 1 244 5 is_stmt 1 discriminator 2 view .LVU170
 246:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       counter++;
 484              		.loc 1 246 7 discriminator 2 view .LVU171
 246:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       counter++;
 485              		.loc 1 246 20 is_stmt 0 discriminator 2 view .LVU172
 486 00c0 0820     		movs	r0, #8
 487 00c2 FFF7FEFF 		bl	HASH_GetFlagStatus
 488              	.LVL57:
 246:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       counter++;
 489              		.loc 1 246 18 discriminator 2 view .LVU173
 490 00c6 0446     		mov	r4, r0
 491              	.LVL58:
 247:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 492              		.loc 1 247 7 is_stmt 1 discriminator 2 view .LVU174
 247:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 493              		.loc 1 247 14 is_stmt 0 discriminator 2 view .LVU175
 494 00c8 009B     		ldr	r3, [sp]
 495 00ca 0133     		adds	r3, r3, #1
 496 00cc 0093     		str	r3, [sp]
 248:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 497              		.loc 1 248 12 is_stmt 1 discriminator 2 view .LVU176
 248:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 498              		.loc 1 248 22 is_stmt 0 discriminator 2 view .LVU177
 499 00ce 009B     		ldr	r3, [sp]
 248:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 500              		.loc 1 248 5 discriminator 2 view .LVU178
 501 00d0 B3F5803F 		cmp	r3, #65536
 502 00d4 01D0     		beq	.L21
 248:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 503              		.loc 1 248 43 discriminator 1 view .LVU179
 504 00d6 0028     		cmp	r0, #0
 505 00d8 F2D1     		bne	.L22
 506              	.L21:
 250:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     {
 507              		.loc 1 250 5 is_stmt 1 view .LVU180
 250:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     {
 508              		.loc 1 250 8 is_stmt 0 view .LVU181
 509 00da 0CB1     		cbz	r4, .L34
 252:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     }
 510              		.loc 1 252 14 view .LVU182
 511 00dc 0020     		movs	r0, #0
 512              	.LVL59:
 252:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****     }
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 25


 513              		.loc 1 252 14 view .LVU183
 514 00de DAE7     		b	.L18
 515              	.LVL60:
 516              	.L34:
 257:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 517              		.loc 1 257 7 is_stmt 1 view .LVU184
 518 00e0 BDF80400 		ldrh	r0, [sp, #4]
 519              	.LVL61:
 257:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 520              		.loc 1 257 7 is_stmt 0 view .LVU185
 521 00e4 80B2     		uxth	r0, r0
 522 00e6 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 523              	.LVL62:
 260:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       for(i=0; i<Keylen; i+=4)
 524              		.loc 1 260 7 is_stmt 1 view .LVU186
 261:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       {
 525              		.loc 1 261 7 view .LVU187
 261:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       {
 526              		.loc 1 261 7 is_stmt 0 view .LVU188
 527 00ea 04E0     		b	.L23
 528              	.LVL63:
 529              	.L24:
 263:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         keyaddr+=4;
 530              		.loc 1 263 9 is_stmt 1 discriminator 3 view .LVU189
 531 00ec 58F8040B 		ldr	r0, [r8], #4
 532              	.LVL64:
 263:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         keyaddr+=4;
 533              		.loc 1 263 9 is_stmt 0 discriminator 3 view .LVU190
 534 00f0 FFF7FEFF 		bl	HASH_DataIn
 535              	.LVL65:
 264:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       }
 536              		.loc 1 264 9 is_stmt 1 discriminator 3 view .LVU191
 261:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       {
 537              		.loc 1 261 26 discriminator 3 view .LVU192
 261:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       {
 538              		.loc 1 261 27 is_stmt 0 discriminator 3 view .LVU193
 539 00f4 0434     		adds	r4, r4, #4
 540              	.LVL66:
 541              	.L23:
 261:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       {
 542              		.loc 1 261 16 is_stmt 1 discriminator 1 view .LVU194
 261:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       {
 543              		.loc 1 261 7 is_stmt 0 discriminator 1 view .LVU195
 544 00f6 AC42     		cmp	r4, r5
 545 00f8 F8D3     		bcc	.L24
 268:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 546              		.loc 1 268 7 is_stmt 1 view .LVU196
 547 00fa FFF7FEFF 		bl	HASH_StartDigest
 548              	.LVL67:
 271:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       do
 549              		.loc 1 271 7 view .LVU197
 271:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       do
 550              		.loc 1 271 15 is_stmt 0 view .LVU198
 551 00fe 0023     		movs	r3, #0
 552 0100 0093     		str	r3, [sp]
 553              	.L26:
 272:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       {
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 26


 554              		.loc 1 272 7 is_stmt 1 discriminator 2 view .LVU199
 274:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         counter++;
 555              		.loc 1 274 9 discriminator 2 view .LVU200
 274:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         counter++;
 556              		.loc 1 274 22 is_stmt 0 discriminator 2 view .LVU201
 557 0102 0820     		movs	r0, #8
 558 0104 FFF7FEFF 		bl	HASH_GetFlagStatus
 559              	.LVL68:
 274:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         counter++;
 560              		.loc 1 274 20 discriminator 2 view .LVU202
 561 0108 0246     		mov	r2, r0
 562              	.LVL69:
 275:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 563              		.loc 1 275 9 is_stmt 1 discriminator 2 view .LVU203
 275:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 564              		.loc 1 275 16 is_stmt 0 discriminator 2 view .LVU204
 565 010a 009B     		ldr	r3, [sp]
 566 010c 0133     		adds	r3, r3, #1
 567 010e 0093     		str	r3, [sp]
 276:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 568              		.loc 1 276 14 is_stmt 1 discriminator 2 view .LVU205
 276:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 569              		.loc 1 276 24 is_stmt 0 discriminator 2 view .LVU206
 570 0110 009B     		ldr	r3, [sp]
 276:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 571              		.loc 1 276 7 discriminator 2 view .LVU207
 572 0112 B3F5803F 		cmp	r3, #65536
 573 0116 01D0     		beq	.L25
 276:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c **** 
 574              		.loc 1 276 45 discriminator 1 view .LVU208
 575 0118 0028     		cmp	r0, #0
 576 011a F2D1     		bne	.L26
 577              	.L25:
 278:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       {
 578              		.loc 1 278 7 is_stmt 1 view .LVU209
 278:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       {
 579              		.loc 1 278 10 is_stmt 0 view .LVU210
 580 011c 0AB1     		cbz	r2, .L35
 280:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       }
 581              		.loc 1 280 16 view .LVU211
 582 011e 0020     		movs	r0, #0
 583              	.LVL70:
 280:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       }
 584              		.loc 1 280 16 view .LVU212
 585 0120 B9E7     		b	.L18
 586              	.LVL71:
 587              	.L35:
 285:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[0]);
 588              		.loc 1 285 9 is_stmt 1 view .LVU213
 589 0122 02A8     		add	r0, sp, #8
 590              	.LVL72:
 285:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[0]);
 591              		.loc 1 285 9 is_stmt 0 view .LVU214
 592 0124 FFF7FEFF 		bl	HASH_GetDigest
 593              	.LVL73:
 286:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 594              		.loc 1 286 9 is_stmt 1 view .LVU215
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 27


 286:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 595              		.loc 1 286 37 is_stmt 0 view .LVU216
 596 0128 029B     		ldr	r3, [sp, #8]
 597              	.LVL74:
 598              	.LBB32:
 599              	.LBI32:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 600              		.loc 2 495 57 is_stmt 1 view .LVU217
 601              	.LBB33:
 602              		.loc 2 498 3 view .LVU218
 603              		.loc 2 498 10 is_stmt 0 view .LVU219
 604 012a 1BBA     		rev	r3, r3
 605              	.LVL75:
 606              		.loc 2 498 10 view .LVU220
 607              	.LBE33:
 608              	.LBE32:
 286:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 609              		.loc 1 286 35 view .LVU221
 610 012c 169A     		ldr	r2, [sp, #88]
 611 012e 1360     		str	r3, [r2]
 287:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[1]);
 612              		.loc 1 287 9 is_stmt 1 view .LVU222
 613              	.LVL76:
 288:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 614              		.loc 1 288 9 view .LVU223
 288:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 615              		.loc 1 288 37 is_stmt 0 view .LVU224
 616 0130 039B     		ldr	r3, [sp, #12]
 617              	.LVL77:
 618              	.LBB34:
 619              	.LBI34:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 620              		.loc 2 495 57 is_stmt 1 view .LVU225
 621              	.LBB35:
 622              		.loc 2 498 3 view .LVU226
 623              		.loc 2 498 10 is_stmt 0 view .LVU227
 624 0132 1BBA     		rev	r3, r3
 625              	.LVL78:
 626              		.loc 2 498 10 view .LVU228
 627              	.LBE35:
 628              	.LBE34:
 288:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 629              		.loc 1 288 35 view .LVU229
 630 0134 5360     		str	r3, [r2, #4]
 289:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[2]);
 631              		.loc 1 289 9 is_stmt 1 view .LVU230
 632              	.LVL79:
 290:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 633              		.loc 1 290 9 view .LVU231
 290:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 634              		.loc 1 290 37 is_stmt 0 view .LVU232
 635 0136 049B     		ldr	r3, [sp, #16]
 636              	.LVL80:
 637              	.LBB36:
 638              	.LBI36:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 639              		.loc 2 495 57 is_stmt 1 view .LVU233
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 28


 640              	.LBB37:
 641              		.loc 2 498 3 view .LVU234
 642              		.loc 2 498 10 is_stmt 0 view .LVU235
 643 0138 1BBA     		rev	r3, r3
 644              	.LVL81:
 645              		.loc 2 498 10 view .LVU236
 646              	.LBE37:
 647              	.LBE36:
 290:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 648              		.loc 1 290 35 view .LVU237
 649 013a 9360     		str	r3, [r2, #8]
 291:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[3]);
 650              		.loc 1 291 9 is_stmt 1 view .LVU238
 651              	.LVL82:
 292:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 652              		.loc 1 292 9 view .LVU239
 292:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 653              		.loc 1 292 37 is_stmt 0 view .LVU240
 654 013c 059B     		ldr	r3, [sp, #20]
 655              	.LVL83:
 656              	.LBB38:
 657              	.LBI38:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 658              		.loc 2 495 57 is_stmt 1 view .LVU241
 659              	.LBB39:
 660              		.loc 2 498 3 view .LVU242
 661              		.loc 2 498 10 is_stmt 0 view .LVU243
 662 013e 1BBA     		rev	r3, r3
 663              	.LVL84:
 664              		.loc 2 498 10 view .LVU244
 665              	.LBE39:
 666              	.LBE38:
 292:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 667              		.loc 1 292 35 view .LVU245
 668 0140 D360     		str	r3, [r2, #12]
 293:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[4]);
 669              		.loc 1 293 9 is_stmt 1 view .LVU246
 670              	.LVL85:
 294:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       }
 671              		.loc 1 294 9 view .LVU247
 294:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       }
 672              		.loc 1 294 37 is_stmt 0 view .LVU248
 673 0142 069B     		ldr	r3, [sp, #24]
 674              	.LVL86:
 675              	.LBB40:
 676              	.LBI40:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 677              		.loc 2 495 57 is_stmt 1 view .LVU249
 678              	.LBB41:
 679              		.loc 2 498 3 view .LVU250
 680              		.loc 2 498 10 is_stmt 0 view .LVU251
 681 0144 1BBA     		rev	r3, r3
 682              	.LVL87:
 683              		.loc 2 498 10 view .LVU252
 684              	.LBE41:
 685              	.LBE40:
 294:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****       }
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 29


 686              		.loc 1 294 35 view .LVU253
 687 0146 1361     		str	r3, [r2, #16]
 172:STM32F4xx_LIB/periph/src/stm32f4xx_hash_sha1.c ****   uint32_t keyaddr    = (uint32_t)Key;
 688              		.loc 1 172 15 view .LVU254
 689 0148 0120     		movs	r0, #1
 690 014a A4E7     		b	.L18
 691              		.cfi_endproc
 692              	.LFE124:
 694              		.text
 695              	.Letext0:
 696              		.file 3 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\machine\\_default_types.h"
 697              		.file 4 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 698              		.file 5 "STM32F4xx_LIB/core/core_cm4.h"
 699              		.file 6 "User/system_stm32f4xx.h"
 700              		.file 7 "User/stm32f4xx.h"
 701              		.file 8 "STM32F4xx_LIB/periph/inc/stm32f4xx_hash.h"
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hash_sha1.c
C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s:18     .text.HASH_SHA1:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s:26     .text.HASH_SHA1:00000000 HASH_SHA1
C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s:268    .text.HMAC_SHA1:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cclYeCnJ.s:275    .text.HMAC_SHA1:00000000 HMAC_SHA1

UNDEFINED SYMBOLS
HASH_DeInit
HASH_Init
HASH_SetLastWordValidBitsNbr
HASH_DataIn
HASH_StartDigest
HASH_GetFlagStatus
HASH_GetDigest
