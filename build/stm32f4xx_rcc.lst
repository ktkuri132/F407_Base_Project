ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	RCC_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	RCC_DeInit:
  27              	.LFB123:
  28              		.file 1 "STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c"
   1:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
   2:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   ******************************************************************************
   3:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @file    stm32f4xx_rcc.c
   4:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @author  MCD Application Team
   5:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @version V1.8.1
   6:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @date    27-January-2022
   7:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          functionalities of the Reset and clock control (RCC) peripheral:
   9:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           + Internal/external clocks, PLL, CSS and MCO configuration
  10:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           + System, AHB and APB busses clocks configuration
  11:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           + Peripheral clocks configuration
  12:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           + Interrupts and flags management
  13:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
  14:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  @verbatim
  15:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  ===============================================================================
  16:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****                       ##### RCC specific features #####
  17:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  ===============================================================================
  18:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     [..]  
  19:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       After reset the device is running from Internal High Speed oscillator 
  20:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache 
  21:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  22:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       SRAM, Flash and JTAG.
  23:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  24:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  25:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  26:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  27:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           are assigned to be used for debug purpose.
  28:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     [..]          
  29:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       Once the device started from reset, the user application has to:
  30:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 2


  31:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           (if the application needs higher frequency/performance)
  32:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  33:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  34:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  35:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  36:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  37:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  @endverbatim    
  38:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   ******************************************************************************
  39:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @attention
  40:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
  41:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * Copyright (c) 2016 STMicroelectronics.
  42:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * All rights reserved.
  43:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
  44:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  45:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * in the root directory of this software component.
  46:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  47:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
  48:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   ******************************************************************************
  49:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
  50:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
  51:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Includes ------------------------------------------------------------------*/
  52:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #include "stm32f4xx_rcc.h"
  53:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
  54:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  55:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @{
  56:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
  57:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
  58:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /** @defgroup RCC 
  59:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief RCC driver modules
  60:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @{
  61:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */ 
  62:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
  63:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  64:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Private define ------------------------------------------------------------*/
  65:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  66:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  67:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* --- CR Register ---*/
  68:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Alias word address of HSION bit */
  69:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  70:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define HSION_BitNumber           0x00
  71:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  72:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Alias word address of CSSON bit */
  73:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CSSON_BitNumber           0x13
  74:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  75:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Alias word address of PLLON bit */
  76:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define PLLON_BitNumber           0x18
  77:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  78:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Alias word address of PLLI2SON bit */
  79:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define PLLI2SON_BitNumber        0x1A
  80:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CR_PLLI2SON_BB            (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLI2SON_BitNumber * 4))
  81:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
  82:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Alias word address of PLLSAION bit */
  83:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define PLLSAION_BitNumber        0x1C
  84:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CR_PLLSAION_BB            (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLSAION_BitNumber * 4))
  85:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
  86:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* --- CFGR Register ---*/
  87:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Alias word address of I2SSRC bit */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 3


  88:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x08)
  89:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define I2SSRC_BitNumber          0x17
  90:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CFGR_I2SSRC_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (I2SSRC_BitNumber * 4))
  91:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
  92:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* --- BDCR Register ---*/
  93:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Alias word address of RTCEN bit */
  94:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x70)
  95:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define RTCEN_BitNumber           0x0F
  96:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  97:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Alias word address of BDRST bit */
  98:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define BDRST_BitNumber           0x10
  99:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
 100:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 101:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* --- CSR Register ---*/
 102:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Alias word address of LSION bit */
 103:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x74)
 104:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define LSION_BitNumber           0x00
 105:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 106:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 107:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* --- DCKCFGR Register ---*/
 108:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Alias word address of TIMPRE bit */
 109:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define DCKCFGR_OFFSET            (RCC_OFFSET + 0x8C)
 110:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define TIMPRE_BitNumber          0x18
 111:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define DCKCFGR_TIMPRE_BB         (PERIPH_BB_BASE + (DCKCFGR_OFFSET * 32) + (TIMPRE_BitNumber * 4))
 112:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     
 113:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* --- CFGR Register ---*/
 114:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define RCC_CFGR_OFFSET            (RCC_OFFSET + 0x08)
 115:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  #if defined(STM32F410xx)
 116:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Alias word address of MCO1EN bit */
 117:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define RCC_MCO1EN_BIT_NUMBER      0x8
 118:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define RCC_CFGR_MCO1EN_BB         (PERIPH_BB_BASE + (RCC_CFGR_OFFSET * 32) + (RCC_MCO1EN_BIT_NUMBE
 119:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 120:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Alias word address of MCO2EN bit */
 121:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define RCC_MCO2EN_BIT_NUMBER      0x9
 122:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define RCC_CFGR_MCO2EN_BB         (PERIPH_BB_BASE + (RCC_CFGR_OFFSET * 32) + (RCC_MCO2EN_BIT_NUMBE
 123:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */
 124:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 125:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* CFGR register bit mask */
 126:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CFGR_MCO2_RESET_MASK      ((uint32_t)0x07FFFFFF)
 127:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CFGR_MCO1_RESET_MASK      ((uint32_t)0xF89FFFFF)
 128:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 129:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* RCC Flag Mask */
 130:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define FLAG_MASK                 ((uint8_t)0x1F)
 131:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 132:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* CR register byte 3 (Bits[23:16]) base address */
 133:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CR_BYTE3_ADDRESS          ((uint32_t)0x40023802)
 134:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 135:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 136:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)(RCC_BASE + 0x0C + 0x01))
 137:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 138:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 139:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)(RCC_BASE + 0x0C + 0x02))
 140:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 141:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* BDCR register base address */
 142:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 143:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 144:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 4


 145:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Private variables ---------------------------------------------------------*/
 146:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 147:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 148:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 149:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /* Private functions ---------------------------------------------------------*/
 150:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 151:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Private_Functions
 152:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @{
 153:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */ 
 154:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 155:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group1 Internal and external clocks, PLL, CSS and MCO configuration functions
 156:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  *  @brief   Internal and external clocks, PLL, CSS and MCO configuration functions 
 157:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  *
 158:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** @verbatim   
 159:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  ===================================================================================
 160:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  ##### Internal and  external clocks, PLL, CSS and MCO configuration functions #####
 161:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  ===================================================================================
 162:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     [..]
 163:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       This section provide functions allowing to configure the internal/external clocks,
 164:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       PLLs, CSS and MCO pins.
 165:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
 166:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 167:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           the PLL as System clock source.
 168:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 169:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 170:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           clock source.
 171:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 172:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 173:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 174:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 175:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 176:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 177:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 178:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 179:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 180:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****              the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 181:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 182:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) PLLI2S (clocked by HSI or HSE), used to generate an accurate clock to achieve 
 183:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           high-quality audio performance on the I2S interface or SAI interface in case 
 184:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           of STM32F429x/439x devices.
 185:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****      
 186:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) PLLSAI clocked by (HSI or HSE), used to generate an accurate clock to SAI 
 187:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           interface and LCD TFT controller available only for STM32F42xxx/43xxx/446xx/469xx/479xx d
 188:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
 189:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) CSS (Clock security system), once enable and if a HSE clock failure occurs 
 190:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****          (HSE used directly or through PLL as System clock source), the System clock
 191:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****          is automatically switched to HSI and an interrupt is generated if enabled. 
 192:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****          The interrupt is linked to the Cortex-M4 NMI (Non-Maskable Interrupt) 
 193:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****          exception vector.   
 194:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 195:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 196:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           clock (through a configurable prescaler) on PA8 pin.
 197:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 198:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 199:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           clock (through a configurable prescaler) on PC9 pin.
 200:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  @endverbatim
 201:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @{
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 5


 202:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 203:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 204:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 205:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 206:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 207:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            - HSI ON and used as system clock source
 208:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            - HSE, PLL and PLLI2S OFF
 209:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 210:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 211:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            - All interrupts disabled
 212:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function doesn't modify the configuration of the
 213:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            - Peripheral clocks  
 214:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            - LSI, LSE and RTC clocks 
 215:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  None
 216:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 217:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 218:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_DeInit(void)
 219:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
  29              		.loc 1 219 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 220:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set HSION bit */
 221:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  34              		.loc 1 221 3 view .LVU1
  35              		.loc 1 221 11 is_stmt 0 view .LVU2
  36 0000 0E4B     		ldr	r3, .L2
  37 0002 1A68     		ldr	r2, [r3]
  38 0004 42F00102 		orr	r2, r2, #1
  39 0008 1A60     		str	r2, [r3]
 222:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 223:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Reset CFGR register */
 224:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->CFGR = 0x00000000;
  40              		.loc 1 224 3 is_stmt 1 view .LVU3
  41              		.loc 1 224 13 is_stmt 0 view .LVU4
  42 000a 0021     		movs	r1, #0
  43 000c 9960     		str	r1, [r3, #8]
 225:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 226:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Reset HSEON, CSSON, PLLON, PLLI2S and PLLSAI(STM32F42xxx/43xxx/446xx/469xx/479xx devices) bits
 227:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->CR &= (uint32_t)0xEAF6FFFF;
  44              		.loc 1 227 3 is_stmt 1 view .LVU5
  45              		.loc 1 227 11 is_stmt 0 view .LVU6
  46 000e 1A68     		ldr	r2, [r3]
  47 0010 22F0A852 		bic	r2, r2, #352321536
  48 0014 22F41022 		bic	r2, r2, #589824
  49 0018 1A60     		str	r2, [r3]
 228:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
 229:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Reset PLLCFGR register */
 230:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->PLLCFGR = 0x24003010;
  50              		.loc 1 230 3 is_stmt 1 view .LVU7
  51              		.loc 1 230 16 is_stmt 0 view .LVU8
  52 001a 094A     		ldr	r2, .L2+4
  53 001c 5A60     		str	r2, [r3, #4]
 231:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 232:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 233:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Reset PLLI2SCFGR register */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 6


 234:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = 0x20003000;
  54              		.loc 1 234 3 is_stmt 1 view .LVU9
  55              		.loc 1 234 19 is_stmt 0 view .LVU10
  56 001e 094A     		ldr	r2, .L2+8
  57 0020 C3F88420 		str	r2, [r3, #132]
 235:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE || STM
 236:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 237:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 238:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Reset PLLSAICFGR register, only available for STM32F42xxx/43xxx/446xx/469xx/479xx devices */
 239:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = 0x24003000;
  58              		.loc 1 239 3 is_stmt 1 view .LVU11
  59              		.loc 1 239 19 is_stmt 0 view .LVU12
  60 0024 02F18062 		add	r2, r2, #67108864
  61 0028 C3F88820 		str	r2, [r3, #136]
 240:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F446xx || STM32F469_479xx */
 241:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
 242:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Reset HSEBYP bit */
 243:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  62              		.loc 1 243 3 is_stmt 1 view .LVU13
  63              		.loc 1 243 11 is_stmt 0 view .LVU14
  64 002c 1A68     		ldr	r2, [r3]
  65 002e 22F48022 		bic	r2, r2, #262144
  66 0032 1A60     		str	r2, [r3]
 244:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 245:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Disable all interrupts */
 246:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->CIR = 0x00000000;
  67              		.loc 1 246 3 is_stmt 1 view .LVU15
  68              		.loc 1 246 12 is_stmt 0 view .LVU16
  69 0034 D960     		str	r1, [r3, #12]
 247:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 248:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Disable Timers clock prescalers selection, only available for STM32F42/43xxx and STM32F413_423
 249:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = 0x00000000;
  70              		.loc 1 249 3 is_stmt 1 view .LVU17
  71              		.loc 1 249 16 is_stmt 0 view .LVU18
  72 0036 C3F88C10 		str	r1, [r3, #140]
 250:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
 251:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx) || defined(STM32F413_423xx)
 252:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Disable LPTIM and FMPI2C clock prescalers selection, only available for STM32F410xx and STM32F
 253:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 = 0x00000000;
 254:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx || STM32F413_423xx */  
 255:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
  73              		.loc 1 255 1 view .LVU19
  74 003a 7047     		bx	lr
  75              	.L3:
  76              		.align	2
  77              	.L2:
  78 003c 00380240 		.word	1073887232
  79 0040 10300024 		.word	603992080
  80 0044 00300020 		.word	536883200
  81              		.cfi_endproc
  82              	.LFE123:
  84              		.section	.text.RCC_HSEConfig,"ax",%progbits
  85              		.align	1
  86              		.global	RCC_HSEConfig
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 7


  90              		.fpu fpv4-sp-d16
  92              	RCC_HSEConfig:
  93              	.LVL0:
  94              	.LFB124:
 256:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 257:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 258:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 259:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After enabling the HSE (RCC_HSE_ON or RCC_HSE_Bypass), the application
 260:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         software should wait on HSERDY flag to be set indicating that HSE clock
 261:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         is stable and can be used to clock the PLL and/or system clock.
 262:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   HSE state can not be changed if it is used directly or through the
 263:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         PLL as system clock. In this case, you have to select another source
 264:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         of the system clock then change the HSE state (ex. disable it).
 265:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   The HSE is stopped by hardware when entering STOP and STANDBY modes.  
 266:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function reset the CSSON bit, so if the Clock security system(CSS)
 267:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         was previously enabled you have to enable it again after calling this
 268:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         function.    
 269:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 270:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 271:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_HSE_OFF: turn OFF the HSE oscillator, HSERDY flag goes low after
 272:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                              6 HSE oscillator clock cycles.
 273:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_HSE_ON: turn ON the HSE oscillator
 274:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 275:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 276:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 277:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_HSEConfig(uint8_t RCC_HSE)
 278:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
  95              		.loc 1 278 1 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 279:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 280:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 100              		.loc 1 280 3 view .LVU21
 281:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 282:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 283:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) CR_BYTE3_ADDRESS = RCC_HSE_OFF;
 101              		.loc 1 283 3 view .LVU22
 102              		.loc 1 283 38 is_stmt 0 view .LVU23
 103 0000 024B     		ldr	r3, .L5
 104 0002 0022     		movs	r2, #0
 105 0004 1A70     		strb	r2, [r3]
 284:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 285:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set the new HSE configuration -------------------------------------------*/
 286:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) CR_BYTE3_ADDRESS = RCC_HSE;
 106              		.loc 1 286 3 is_stmt 1 view .LVU24
 107              		.loc 1 286 38 is_stmt 0 view .LVU25
 108 0006 1870     		strb	r0, [r3]
 287:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 109              		.loc 1 287 1 view .LVU26
 110 0008 7047     		bx	lr
 111              	.L6:
 112 000a 00BF     		.align	2
 113              	.L5:
 114 000c 02380240 		.word	1073887234
 115              		.cfi_endproc
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 8


 116              	.LFE124:
 118              		.section	.text.RCC_AdjustHSICalibrationValue,"ax",%progbits
 119              		.align	1
 120              		.global	RCC_AdjustHSICalibrationValue
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv4-sp-d16
 126              	RCC_AdjustHSICalibrationValue:
 127              	.LVL1:
 128              	.LFB126:
 288:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 289:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 290:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Waits for HSE start-up.
 291:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This functions waits on HSERDY flag to be set and return SUCCESS if 
 292:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         this flag is set, otherwise returns ERROR if the timeout is reached 
 293:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         and this flag is not set. The timeout value is defined by the constant
 294:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         HSE_STARTUP_TIMEOUT in stm32f4xx.h file. You can tailor it depending
 295:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         on the HSE crystal used in your application. 
 296:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  None
 297:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval An ErrorStatus enumeration value:
 298:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          - SUCCESS: HSE oscillator is stable and ready to use
 299:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          - ERROR: HSE oscillator not yet ready
 300:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 301:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 302:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 303:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   __IO uint32_t startupcounter = 0;
 304:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   ErrorStatus status = ERROR;
 305:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   FlagStatus hsestatus = RESET;
 306:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 307:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   do
 308:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
 309:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     hsestatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 310:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     startupcounter++;
 311:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   } while((startupcounter != HSE_STARTUP_TIMEOUT) && (hsestatus == RESET));
 312:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 313:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 314:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
 315:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     status = SUCCESS;
 316:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 317:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
 318:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
 319:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     status = ERROR;
 320:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 321:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   return (status);
 322:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 323:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 324:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 325:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 326:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   The calibration is used to compensate for the variations in voltage
 327:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         and temperature that influence the frequency of the internal HSI RC.
 328:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 329:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 0 and 0x1F.
 330:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 331:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 332:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 333:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 9


 129              		.loc 1 333 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 334:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 134              		.loc 1 334 3 view .LVU28
 335:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 336:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 135              		.loc 1 336 3 view .LVU29
 337:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 338:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CR;
 136              		.loc 1 338 3 view .LVU30
 137              		.loc 1 338 10 is_stmt 0 view .LVU31
 138 0000 034A     		ldr	r2, .L8
 139 0002 1368     		ldr	r3, [r2]
 140              	.LVL2:
 339:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 340:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 341:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CR_HSITRIM;
 141              		.loc 1 341 3 is_stmt 1 view .LVU32
 142              		.loc 1 341 10 is_stmt 0 view .LVU33
 143 0004 23F0F803 		bic	r3, r3, #248
 144              	.LVL3:
 342:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 343:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 344:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 145              		.loc 1 344 3 is_stmt 1 view .LVU34
 146              		.loc 1 344 10 is_stmt 0 view .LVU35
 147 0008 43EAC003 		orr	r3, r3, r0, lsl #3
 148              	.LVL4:
 345:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 346:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
 347:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->CR = tmpreg;
 149              		.loc 1 347 3 is_stmt 1 view .LVU36
 150              		.loc 1 347 11 is_stmt 0 view .LVU37
 151 000c 1360     		str	r3, [r2]
 348:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 152              		.loc 1 348 1 view .LVU38
 153 000e 7047     		bx	lr
 154              	.L9:
 155              		.align	2
 156              	.L8:
 157 0010 00380240 		.word	1073887232
 158              		.cfi_endproc
 159              	.LFE126:
 161              		.section	.text.RCC_HSICmd,"ax",%progbits
 162              		.align	1
 163              		.global	RCC_HSICmd
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv4-sp-d16
 169              	RCC_HSICmd:
 170              	.LVL5:
 171              	.LFB127:
 349:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 10


 350:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 351:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 352:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   The HSI is stopped by hardware when entering STOP and STANDBY modes.
 353:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         It is used (enabled by hardware) as system clock source after startup
 354:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         from Reset, wakeup from STOP and STANDBY mode, or in case of failure
 355:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         of the HSE used directly or indirectly as system clock (if the Clock
 356:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         Security System CSS is enabled).             
 357:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   HSI can not be stopped if it is used as system clock source. In this case,
 358:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         you have to select another source of the system clock then stop the HSI.  
 359:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After enabling the HSI, the application software should wait on HSIRDY
 360:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         flag to be set indicating that HSI clock is stable and can be used as
 361:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         system clock source.  
 362:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the HSI.
 363:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
 364:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   When the HSI is stopped, HSIRDY flag goes low after 6 HSI oscillator
 365:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         clock cycles.  
 366:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 367:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 368:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 369:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 172              		.loc 1 369 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 370:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 371:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 177              		.loc 1 371 3 view .LVU40
 372:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 373:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 178              		.loc 1 373 3 view .LVU41
 179              		.loc 1 373 34 is_stmt 0 view .LVU42
 180 0000 014B     		ldr	r3, .L11
 181 0002 1860     		str	r0, [r3]
 374:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 182              		.loc 1 374 1 view .LVU43
 183 0004 7047     		bx	lr
 184              	.L12:
 185 0006 00BF     		.align	2
 186              	.L11:
 187 0008 00004742 		.word	1111949312
 188              		.cfi_endproc
 189              	.LFE127:
 191              		.section	.text.RCC_LSEConfig,"ax",%progbits
 192              		.align	1
 193              		.global	RCC_LSEConfig
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	RCC_LSEConfig:
 200              	.LVL6:
 201              	.LFB128:
 375:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 376:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 377:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 378:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   As the LSE is in the Backup domain and write access is denied to
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 11


 379:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         this domain after reset, you have to enable write access using 
 380:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         PWR_BackupAccessCmd(ENABLE) function before to configure the LSE
 381:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         (to be done once after reset).  
 382:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After enabling the LSE (RCC_LSE_ON or RCC_LSE_Bypass), the application
 383:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         software should wait on LSERDY flag to be set indicating that LSE clock
 384:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         is stable and can be used to clock the RTC.
 385:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 386:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 387:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_OFF: turn OFF the LSE oscillator, LSERDY flag goes low after
 388:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                              6 LSE oscillator clock cycles.
 389:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_ON: turn ON the LSE oscillator
 390:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 391:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 392:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 393:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 394:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 202              		.loc 1 394 1 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 395:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 396:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 207              		.loc 1 396 3 view .LVU45
 397:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 398:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 399:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Reset LSEON bit */
 400:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 208              		.loc 1 400 3 view .LVU46
 209              		.loc 1 400 34 is_stmt 0 view .LVU47
 210 0000 084B     		ldr	r3, .L17
 211 0002 0022     		movs	r2, #0
 212 0004 1A70     		strb	r2, [r3]
 401:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 402:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Reset LSEBYP bit */
 403:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 213              		.loc 1 403 3 is_stmt 1 view .LVU48
 214              		.loc 1 403 34 is_stmt 0 view .LVU49
 215 0006 1A70     		strb	r2, [r3]
 404:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 405:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 406:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   switch (RCC_LSE)
 216              		.loc 1 406 3 is_stmt 1 view .LVU50
 217 0008 0128     		cmp	r0, #1
 218 000a 02D0     		beq	.L14
 219 000c 0428     		cmp	r0, #4
 220 000e 04D0     		beq	.L15
 221 0010 7047     		bx	lr
 222              	.L14:
 407:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
 408:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     case RCC_LSE_ON:
 409:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       /* Set LSEON bit */
 410:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 223              		.loc 1 410 7 view .LVU51
 224              		.loc 1 410 38 is_stmt 0 view .LVU52
 225 0012 044B     		ldr	r3, .L17
 226 0014 0122     		movs	r2, #1
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 12


 227 0016 1A70     		strb	r2, [r3]
 411:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       break;
 228              		.loc 1 411 7 is_stmt 1 view .LVU53
 229 0018 7047     		bx	lr
 230              	.L15:
 412:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     case RCC_LSE_Bypass:
 413:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       /* Set LSEBYP and LSEON bits */
 414:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 231              		.loc 1 414 7 view .LVU54
 232              		.loc 1 414 38 is_stmt 0 view .LVU55
 233 001a 024B     		ldr	r3, .L17
 234 001c 0522     		movs	r2, #5
 235 001e 1A70     		strb	r2, [r3]
 415:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       break;
 236              		.loc 1 415 7 is_stmt 1 view .LVU56
 416:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     default:
 417:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       break;
 418:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 419:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 237              		.loc 1 419 1 is_stmt 0 view .LVU57
 238 0020 7047     		bx	lr
 239              	.L18:
 240 0022 00BF     		.align	2
 241              	.L17:
 242 0024 70380240 		.word	1073887344
 243              		.cfi_endproc
 244              	.LFE128:
 246              		.section	.text.RCC_LSICmd,"ax",%progbits
 247              		.align	1
 248              		.global	RCC_LSICmd
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 252              		.fpu fpv4-sp-d16
 254              	RCC_LSICmd:
 255              	.LVL7:
 256              	.LFB129:
 420:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 421:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 422:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 423:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After enabling the LSI, the application software should wait on 
 424:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         LSIRDY flag to be set indicating that LSI clock is stable and can
 425:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         be used to clock the IWDG and/or the RTC.
 426:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.  
 427:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the LSI.
 428:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
 429:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   When the LSI is stopped, LSIRDY flag goes low after 6 LSI oscillator
 430:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         clock cycles. 
 431:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 432:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 433:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 434:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 257              		.loc 1 434 1 is_stmt 1 view -0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 13


 435:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 436:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 262              		.loc 1 436 3 view .LVU59
 437:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 438:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 263              		.loc 1 438 3 view .LVU60
 264              		.loc 1 438 35 is_stmt 0 view .LVU61
 265 0000 014B     		ldr	r3, .L20
 266 0002 1860     		str	r0, [r3]
 439:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 267              		.loc 1 439 1 view .LVU62
 268 0004 7047     		bx	lr
 269              	.L21:
 270 0006 00BF     		.align	2
 271              	.L20:
 272 0008 800E4742 		.word	1111953024
 273              		.cfi_endproc
 274              	.LFE129:
 276              		.section	.text.RCC_PLLConfig,"ax",%progbits
 277              		.align	1
 278              		.global	RCC_PLLConfig
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 282              		.fpu fpv4-sp-d16
 284              	RCC_PLLConfig:
 285              	.LVL8:
 286              	.LFB130:
 440:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 441:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx
 442:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 443:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the main PLL clock source, multiplication and division factors.
 444:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the main PLL is disabled.
 445:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *  
 446:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 447:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 448:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSI: HSI oscillator clock selected as PLL clock entry
 449:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSE: HSE oscillator clock selected as PLL clock entry
 450:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This clock source (RCC_PLLSource) is common for the main PLL and PLLI2S.  
 451:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *  
 452:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLM: specifies the division factor for PLL VCO input clock
 453:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 0 and 63.
 454:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLM parameter correctly to ensure that the VCO input
 455:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 456:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLL jitter.
 457:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *  
 458:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLN: specifies the multiplication factor for PLL VCO output clock
 459:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 460:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLN parameter correctly to ensure that the VCO
 461:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 462:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
 463:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLP: specifies the division factor for main system clock (SYSCLK)
 464:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number in the range {2, 4, 6, or 8}.
 465:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLP parameter correctly to not exceed 168 MHz on
 466:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         the System clock frequency.
 467:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *  
 468:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLQ: specifies the division factor for OTG FS, SDIO and RNG clocks
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 14


 469:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 4 and 15.
 470:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
 471:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLR: specifies the division factor for I2S, SAI, SYSTEM, SPDIF in STM32F446xx devices
 472:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 473:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
 474:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   If the USB OTG FS is used in your application, you have to set the
 475:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         PLLQ parameter correctly to have 48 MHz clock for the USB. However,
 476:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         the SDIO and RNG need a frequency lower than or equal to 48 MHz to work
 477:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         correctly.
 478:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
 479:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 480:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 481:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t PLLM, uint32_t PLLN, uint32_t PLLP, uint32_t PL
 482:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 483:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 484:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 485:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLM_VALUE(PLLM));
 486:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLN_VALUE(PLLN));
 487:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLP_VALUE(PLLP));
 488:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLQ_VALUE(PLLQ));
 489:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLR_VALUE(PLLR));
 490:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
 491:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->PLLCFGR = PLLM | (PLLN << 6) | (((PLLP >> 1) -1) << 16) | (RCC_PLLSource) |
 492:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****                  (PLLQ << 24) | (PLLR << 28);
 493:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 494:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx || STM32F412xG || STM32F413_423xx || STM32F446xx || STM32F469_479xx */
 495:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 496:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 497:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 498:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the main PLL clock source, multiplication and division factors.
 499:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the main PLL is disabled.
 500:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *  
 501:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 502:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 503:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSI: HSI oscillator clock selected as PLL clock entry
 504:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSE: HSE oscillator clock selected as PLL clock entry
 505:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This clock source (RCC_PLLSource) is common for the main PLL and PLLI2S.  
 506:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *  
 507:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLM: specifies the division factor for PLL VCO input clock
 508:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 0 and 63.
 509:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLM parameter correctly to ensure that the VCO input
 510:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 511:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLL jitter.
 512:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *  
 513:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLN: specifies the multiplication factor for PLL VCO output clock
 514:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 515:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLN parameter correctly to ensure that the VCO
 516:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 517:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
 518:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLP: specifies the division factor for main system clock (SYSCLK)
 519:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number in the range {2, 4, 6, or 8}.
 520:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLP parameter correctly to not exceed 168 MHz on
 521:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         the System clock frequency.
 522:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *  
 523:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLQ: specifies the division factor for OTG FS, SDIO and RNG clocks
 524:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 4 and 15.
 525:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   If the USB OTG FS is used in your application, you have to set the
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 15


 526:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         PLLQ parameter correctly to have 48 MHz clock for the USB. However,
 527:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         the SDIO and RNG need a frequency lower than or equal to 48 MHz to work
 528:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         correctly.
 529:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
 530:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 531:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 532:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t PLLM, uint32_t PLLN, uint32_t PLLP, uint32_t PL
 533:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 287              		.loc 1 533 1 is_stmt 1 view -0
 288              		.cfi_startproc
 289              		@ args = 4, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 534:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 535:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 292              		.loc 1 535 3 view .LVU64
 536:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLM_VALUE(PLLM));
 293              		.loc 1 536 3 view .LVU65
 537:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLN_VALUE(PLLN));
 294              		.loc 1 537 3 view .LVU66
 538:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLP_VALUE(PLLP));
 295              		.loc 1 538 3 view .LVU67
 539:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLQ_VALUE(PLLQ));
 296              		.loc 1 539 3 view .LVU68
 540:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 541:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->PLLCFGR = PLLM | (PLLN << 6) | (((PLLP >> 1) -1) << 16) | (RCC_PLLSource) |
 297              		.loc 1 541 3 view .LVU69
 298              		.loc 1 541 23 is_stmt 0 view .LVU70
 299 0000 41EA8211 		orr	r1, r1, r2, lsl #6
 300              	.LVL9:
 301              		.loc 1 541 47 view .LVU71
 302 0004 5B08     		lsrs	r3, r3, #1
 303              	.LVL10:
 304              		.loc 1 541 53 view .LVU72
 305 0006 013B     		subs	r3, r3, #1
 306              		.loc 1 541 37 view .LVU73
 307 0008 41EA0341 		orr	r1, r1, r3, lsl #16
 308              		.loc 1 541 64 view .LVU74
 309 000c 0143     		orrs	r1, r1, r0
 310              		.loc 1 541 82 view .LVU75
 311 000e 0098     		ldr	r0, [sp]
 312              	.LVL11:
 313              		.loc 1 541 82 view .LVU76
 314 0010 41EA0061 		orr	r1, r1, r0, lsl #24
 315              		.loc 1 541 16 view .LVU77
 316 0014 014B     		ldr	r3, .L23
 317 0016 5960     		str	r1, [r3, #4]
 318              	.LVL12:
 542:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****                  (PLLQ << 24);
 543:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 319              		.loc 1 543 1 view .LVU78
 320 0018 7047     		bx	lr
 321              	.L24:
 322 001a 00BF     		.align	2
 323              	.L23:
 324 001c 00380240 		.word	1073887232
 325              		.cfi_endproc
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 16


 326              	.LFE130:
 328              		.section	.text.RCC_PLLCmd,"ax",%progbits
 329              		.align	1
 330              		.global	RCC_PLLCmd
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu fpv4-sp-d16
 336              	RCC_PLLCmd:
 337              	.LVL13:
 338              	.LFB131:
 544:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE */
 545:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 546:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 547:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the main PLL.
 548:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After enabling the main PLL, the application software should wait on 
 549:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         PLLRDY flag to be set indicating that PLL clock is stable and can
 550:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         be used as system clock source.
 551:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   The main PLL can not be disabled if it is used as system clock source
 552:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   The main PLL is disabled by hardware when entering STOP and STANDBY modes.
 553:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the main PLL. This parameter can be: ENABLE or DISABLE.
 554:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 555:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 556:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 557:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 339              		.loc 1 557 1 is_stmt 1 view -0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 558:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 559:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 344              		.loc 1 559 3 view .LVU80
 560:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 345              		.loc 1 560 3 view .LVU81
 346              		.loc 1 560 34 is_stmt 0 view .LVU82
 347 0000 014B     		ldr	r3, .L26
 348 0002 1860     		str	r0, [r3]
 561:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 349              		.loc 1 561 1 view .LVU83
 350 0004 7047     		bx	lr
 351              	.L27:
 352 0006 00BF     		.align	2
 353              	.L26:
 354 0008 60004742 		.word	1111949408
 355              		.cfi_endproc
 356              	.LFE131:
 358              		.section	.text.RCC_PLLI2SConfig,"ax",%progbits
 359              		.align	1
 360              		.global	RCC_PLLI2SConfig
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	RCC_PLLI2SConfig:
 367              	.LVL14:
 368              	.LFB132:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 17


 562:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 563:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F401xx)
 564:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 565:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 566:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *  
 567:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F405xx/407xx, STM32F415xx/417xx 
 568:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         or STM32F401xx devices. 
 569:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *    
 570:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 571:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 572:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 573:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *             
 574:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 575:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 576:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 577:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 578:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *    
 579:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 580:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 581:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 582:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 583:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
 584:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 585:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 586:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SN, uint32_t PLLI2SR)
 587:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 369              		.loc 1 587 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 588:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 589:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 374              		.loc 1 589 3 view .LVU85
 590:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 375              		.loc 1 590 3 view .LVU86
 591:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 592:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = (PLLI2SN << 6) | (PLLI2SR << 28);
 376              		.loc 1 592 3 view .LVU87
 377              		.loc 1 592 47 is_stmt 0 view .LVU88
 378 0000 0907     		lsls	r1, r1, #28
 379              	.LVL15:
 380              		.loc 1 592 36 view .LVU89
 381 0002 41EA8011 		orr	r1, r1, r0, lsl #6
 382              		.loc 1 592 19 view .LVU90
 383 0006 024B     		ldr	r3, .L29
 384 0008 C3F88410 		str	r1, [r3, #132]
 593:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 385              		.loc 1 593 1 view .LVU91
 386 000c 7047     		bx	lr
 387              	.L30:
 388 000e 00BF     		.align	2
 389              	.L29:
 390 0010 00380240 		.word	1073887232
 391              		.cfi_endproc
 392              	.LFE132:
 394              		.section	.text.RCC_PLLI2SCmd,"ax",%progbits
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 18


 395              		.align	1
 396              		.global	RCC_PLLI2SCmd
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu fpv4-sp-d16
 402              	RCC_PLLI2SCmd:
 403              	.LVL16:
 404              	.LFB133:
 594:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F401xx */
 595:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 596:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F411xE)
 597:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 598:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 599:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *  
 600:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F411xE devices. 
 601:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *    
 602:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 603:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 604:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 605:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
 606:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLI2SM: specifies the division factor for PLLI2S VCO input clock
 607:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between Min_Data = 2 and Max_Data = 63.
 608:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SM parameter correctly to ensure that the VCO input
 609:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 610:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLLI2S jitter.
 611:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
 612:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 613:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 614:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 615:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 616:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *    
 617:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 618:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 619:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 620:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 621:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
 622:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 623:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 624:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SN, uint32_t PLLI2SR, uint32_t PLLI2SM)
 625:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 626:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 627:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 628:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SM_VALUE(PLLI2SM));
 629:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 630:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 631:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = (PLLI2SN << 6) | (PLLI2SR << 28) | PLLI2SM;
 632:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 633:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F411xE */
 634:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 635:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM32F469_479xx)
 636:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 637:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 638:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
 639:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices 
 640:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         
 641:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 19


 642:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 643:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 644:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *             
 645:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 646:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 647:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 648:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 649:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
 650:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLI2SQ: specifies the division factor for SAI1 clock
 651:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 15.
 652:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                 
 653:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 654:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 655:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 656:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 657:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
 658:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 659:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 660:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SN, uint32_t PLLI2SQ, uint32_t PLLI2SR)
 661:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 662:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 663:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 664:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SQ_VALUE(PLLI2SQ));
 665:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 666:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 667:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = (PLLI2SN << 6) | (PLLI2SQ << 24) | (PLLI2SR << 28);
 668:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 669:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F427_437xx || STM32F429_439xx || STM32F469_479xx */
 670:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 671:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG ) || defined(STM32F413_423xx) || defined(STM32F446xx)
 672:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 673:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 674:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
 675:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F446xx devices 
 676:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         
 677:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 678:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 679:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 680:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
 681:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLI2SM: specifies the division factor for PLLI2S VCO input clock
 682:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between Min_Data = 2 and Max_Data = 63.
 683:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SM parameter correctly to ensure that the VCO input
 684:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 685:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLLI2S jitter.
 686:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
 687:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 688:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 689:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 690:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 691:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
 692:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLI2SP: specifies the division factor for PLL 48Mhz clock output
 693:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number in the range {2, 4, 6, or 8}.
 694:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
 695:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLI2SQ: specifies the division factor for SAI1 clock
 696:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 15.
 697:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                 
 698:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 20


 699:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 700:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 701:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 702:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   the PLLI2SR parameter is only available with STM32F42xxx/43xxx devices.  
 703:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
 704:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 705:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 706:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SM, uint32_t PLLI2SN, uint32_t PLLI2SP, uint32_t PLLI2SQ, uint3
 707:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 708:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 709:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SM_VALUE(PLLI2SM));
 710:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 711:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SP_VALUE(PLLI2SP));
 712:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SQ_VALUE(PLLI2SQ));
 713:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 714:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 715:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR =  PLLI2SM | (PLLI2SN << 6) | (((PLLI2SP >> 1) -1) << 16) | (PLLI2SQ << 24) | (PL
 716:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 717:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx */
 718:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 719:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 720:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the PLLI2S. 
 721:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   The PLLI2S is disabled by hardware when entering STOP and STANDBY modes.  
 722:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the PLLI2S. This parameter can be: ENABLE or DISABLE.
 723:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 724:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 725:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_PLLI2SCmd(FunctionalState NewState)
 726:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 405              		.loc 1 726 1 is_stmt 1 view -0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              		@ link register save eliminated.
 727:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 728:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 410              		.loc 1 728 3 view .LVU93
 729:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_PLLI2SON_BB = (uint32_t)NewState;
 411              		.loc 1 729 3 view .LVU94
 412              		.loc 1 729 37 is_stmt 0 view .LVU95
 413 0000 014B     		ldr	r3, .L32
 414 0002 1860     		str	r0, [r3]
 730:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 415              		.loc 1 730 1 view .LVU96
 416 0004 7047     		bx	lr
 417              	.L33:
 418 0006 00BF     		.align	2
 419              	.L32:
 420 0008 68004742 		.word	1111949416
 421              		.cfi_endproc
 422              	.LFE133:
 424              		.section	.text.RCC_PLLSAIConfig,"ax",%progbits
 425              		.align	1
 426              		.global	RCC_PLLSAIConfig
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 430              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 21


 432              	RCC_PLLSAIConfig:
 433              	.LVL17:
 434              	.LFB134:
 731:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 732:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx)
 733:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 734:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLSAI clock multiplication and division factors.
 735:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
 736:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F469_479xx devices 
 737:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *        
 738:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLSAI is disabled.
 739:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   PLLSAI clock source is common with the main PLL (configured in 
 740:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 741:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
 742:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLSAIN: specifies the multiplication factor for PLLSAI VCO output clock
 743:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 50 and 432.
 744:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIN parameter correctly to ensure that the VCO 
 745:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 746:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
 747:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLSAIP: specifies the division factor for PLL 48Mhz clock output
 748:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         This parameter must be a number in the range {2, 4, 6, or 8}..
 749:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           
 750:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLSAIQ: specifies the division factor for SAI1 clock
 751:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 2 and 15.
 752:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            
 753:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLSAIR: specifies the division factor for LTDC clock
 754:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 755:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
 756:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 757:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 758:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_PLLSAIConfig(uint32_t PLLSAIN, uint32_t PLLSAIP, uint32_t PLLSAIQ, uint32_t PLLSAIR)
 759:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 760:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 761:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIN_VALUE(PLLSAIN));
 762:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIP_VALUE(PLLSAIP));
 763:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIQ_VALUE(PLLSAIQ));
 764:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIR_VALUE(PLLSAIR));
 765:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 766:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = (PLLSAIN << 6) | (((PLLSAIP >> 1) -1) << 16) | (PLLSAIQ << 24) | (PLLSAIR << 28
 767:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 768:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F469_479xx */
 769:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 770:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)
 771:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 772:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLSAI clock multiplication and division factors.
 773:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
 774:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F446xx devices 
 775:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *        
 776:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLSAI is disabled.
 777:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   PLLSAI clock source is common with the main PLL (configured in 
 778:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 779:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
 780:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLSAIM: specifies the division factor for PLLSAI VCO input clock
 781:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between Min_Data = 2 and Max_Data = 63.
 782:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIM parameter correctly to ensure that the VCO input
 783:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 784:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLLSAI jitter.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 22


 785:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
 786:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLSAIN: specifies the multiplication factor for PLLSAI VCO output clock
 787:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 50 and 432.
 788:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIN parameter correctly to ensure that the VCO 
 789:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 790:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
 791:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLSAIP: specifies the division factor for PLL 48Mhz clock output
 792:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         This parameter must be a number in the range {2, 4, 6, or 8}.
 793:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
 794:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLSAIQ: specifies the division factor for SAI1 clock
 795:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 2 and 15.
 796:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
 797:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 798:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 799:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_PLLSAIConfig(uint32_t PLLSAIM, uint32_t PLLSAIN, uint32_t PLLSAIP, uint32_t PLLSAIQ)
 800:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 801:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 802:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIM_VALUE(PLLSAIM));
 803:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIN_VALUE(PLLSAIN));
 804:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIP_VALUE(PLLSAIP));
 805:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIQ_VALUE(PLLSAIQ));
 806:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 807:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = PLLSAIM | (PLLSAIN << 6) | (((PLLSAIP >> 1) -1) << 16)  | (PLLSAIQ << 24);
 808:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 809:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
 810:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 811:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 812:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 813:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLSAI clock multiplication and division factors.
 814:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
 815:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices 
 816:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *        
 817:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLSAI is disabled.
 818:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   PLLSAI clock source is common with the main PLL (configured in 
 819:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 820:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *             
 821:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLSAIN: specifies the multiplication factor for PLLSAI VCO output clock
 822:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 823:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIN parameter correctly to ensure that the VCO 
 824:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 825:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           
 826:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLSAIQ: specifies the division factor for SAI1 clock
 827:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 15.
 828:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            
 829:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  PLLSAIR: specifies the division factor for LTDC clock
 830:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 831:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
 832:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 833:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 834:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_PLLSAIConfig(uint32_t PLLSAIN, uint32_t PLLSAIQ, uint32_t PLLSAIR)
 835:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 435              		.loc 1 835 1 is_stmt 1 view -0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              		@ link register save eliminated.
 836:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 23


 837:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIN_VALUE(PLLSAIN));
 440              		.loc 1 837 3 view .LVU98
 838:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIR_VALUE(PLLSAIR));
 441              		.loc 1 838 3 view .LVU99
 839:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIQ_VALUE(PLLSAIQ));
 442              		.loc 1 839 3 view .LVU100
 840:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
 841:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = (PLLSAIN << 6) | (PLLSAIQ << 24) | (PLLSAIR << 28);
 443              		.loc 1 841 3 view .LVU101
 444              		.loc 1 841 47 is_stmt 0 view .LVU102
 445 0000 0906     		lsls	r1, r1, #24
 446              	.LVL18:
 447              		.loc 1 841 36 view .LVU103
 448 0002 41EA8011 		orr	r1, r1, r0, lsl #6
 449              		.loc 1 841 54 view .LVU104
 450 0006 41EA0271 		orr	r1, r1, r2, lsl #28
 451              		.loc 1 841 19 view .LVU105
 452 000a 024B     		ldr	r3, .L35
 453 000c C3F88810 		str	r1, [r3, #136]
 842:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 454              		.loc 1 842 1 view .LVU106
 455 0010 7047     		bx	lr
 456              	.L36:
 457 0012 00BF     		.align	2
 458              	.L35:
 459 0014 00380240 		.word	1073887232
 460              		.cfi_endproc
 461              	.LFE134:
 463              		.section	.text.RCC_PLLSAICmd,"ax",%progbits
 464              		.align	1
 465              		.global	RCC_PLLSAICmd
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 469              		.fpu fpv4-sp-d16
 471              	RCC_PLLSAICmd:
 472              	.LVL19:
 473              	.LFB135:
 843:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE */
 844:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 845:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 846:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the PLLSAI. 
 847:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
 848:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/446xx/469xx/479xx devices 
 849:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *       
 850:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   The PLLSAI is disabled by hardware when entering STOP and STANDBY modes.  
 851:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the PLLSAI. This parameter can be: ENABLE or DISABLE.
 852:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 853:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 854:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_PLLSAICmd(FunctionalState NewState)
 855:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 474              		.loc 1 855 1 is_stmt 1 view -0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              		@ link register save eliminated.
 856:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 24


 857:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 479              		.loc 1 857 3 view .LVU108
 858:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_PLLSAION_BB = (uint32_t)NewState;
 480              		.loc 1 858 3 view .LVU109
 481              		.loc 1 858 37 is_stmt 0 view .LVU110
 482 0000 014B     		ldr	r3, .L38
 483 0002 1860     		str	r0, [r3]
 859:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 484              		.loc 1 859 1 view .LVU111
 485 0004 7047     		bx	lr
 486              	.L39:
 487 0006 00BF     		.align	2
 488              	.L38:
 489 0008 70004742 		.word	1111949424
 490              		.cfi_endproc
 491              	.LFE135:
 493              		.section	.text.RCC_ClockSecuritySystemCmd,"ax",%progbits
 494              		.align	1
 495              		.global	RCC_ClockSecuritySystemCmd
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	RCC_ClockSecuritySystemCmd:
 502              	.LVL20:
 503              	.LFB136:
 860:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 861:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 862:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Clock Security System.
 863:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 864:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 865:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 866:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 867:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 868:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the Clock Security System.
 869:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 870:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 871:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 872:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
 873:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 504              		.loc 1 873 1 is_stmt 1 view -0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 874:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 875:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 509              		.loc 1 875 3 view .LVU113
 876:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 510              		.loc 1 876 3 view .LVU114
 511              		.loc 1 876 34 is_stmt 0 view .LVU115
 512 0000 014B     		ldr	r3, .L41
 513 0002 1860     		str	r0, [r3]
 877:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 514              		.loc 1 877 1 view .LVU116
 515 0004 7047     		bx	lr
 516              	.L42:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 25


 517 0006 00BF     		.align	2
 518              	.L41:
 519 0008 4C004742 		.word	1111949388
 520              		.cfi_endproc
 521              	.LFE136:
 523              		.section	.text.RCC_MCO1Config,"ax",%progbits
 524              		.align	1
 525              		.global	RCC_MCO1Config
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	RCC_MCO1Config:
 532              	.LVL21:
 533              	.LFB137:
 878:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 879:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 880:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8).
 881:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   PA8 should be configured in alternate function mode.
 882:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO1Source: specifies the clock source to output.
 883:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 884:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_HSI: HSI clock selected as MCO1 source
 885:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_LSE: LSE clock selected as MCO1 source
 886:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_HSE: HSE clock selected as MCO1 source
 887:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_PLLCLK: main PLL clock selected as MCO1 source
 888:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO1Div: specifies the MCO1 prescaler.
 889:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 890:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_1: no division applied to MCO1 clock
 891:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_2: division by 2 applied to MCO1 clock
 892:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_3: division by 3 applied to MCO1 clock
 893:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_4: division by 4 applied to MCO1 clock
 894:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_5: division by 5 applied to MCO1 clock
 895:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 896:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 897:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_MCO1Config(uint32_t RCC_MCO1Source, uint32_t RCC_MCO1Div)
 898:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 534              		.loc 1 898 1 is_stmt 1 view -0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 899:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 539              		.loc 1 899 3 view .LVU118
 900:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
 901:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 902:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCO1Source));
 540              		.loc 1 902 3 view .LVU119
 903:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO1DIV(RCC_MCO1Div));  
 541              		.loc 1 903 3 view .LVU120
 904:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 905:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 542              		.loc 1 905 3 view .LVU121
 543              		.loc 1 905 10 is_stmt 0 view .LVU122
 544 0000 034A     		ldr	r2, .L44
 545 0002 9368     		ldr	r3, [r2, #8]
 546              	.LVL22:
 906:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 26


 907:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear MCO1[1:0] and MCO1PRE[2:0] bits */
 908:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= CFGR_MCO1_RESET_MASK;
 547              		.loc 1 908 3 is_stmt 1 view .LVU123
 548              		.loc 1 908 10 is_stmt 0 view .LVU124
 549 0004 23F0EC63 		bic	r3, r3, #123731968
 550              	.LVL23:
 909:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 910:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Select MCO1 clock source and prescaler */
 911:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_MCO1Source | RCC_MCO1Div;
 551              		.loc 1 911 3 is_stmt 1 view .LVU125
 552              		.loc 1 911 28 is_stmt 0 view .LVU126
 553 0008 0843     		orrs	r0, r0, r1
 554              	.LVL24:
 555              		.loc 1 911 10 view .LVU127
 556 000a 1843     		orrs	r0, r0, r3
 557              	.LVL25:
 912:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
 913:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
 914:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 558              		.loc 1 914 3 is_stmt 1 view .LVU128
 559              		.loc 1 914 13 is_stmt 0 view .LVU129
 560 000c 9060     		str	r0, [r2, #8]
 915:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 916:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
 917:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC_MCO1Cmd(ENABLE);
 918:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */   
 919:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 561              		.loc 1 919 1 view .LVU130
 562 000e 7047     		bx	lr
 563              	.L45:
 564              		.align	2
 565              	.L44:
 566 0010 00380240 		.word	1073887232
 567              		.cfi_endproc
 568              	.LFE137:
 570              		.section	.text.RCC_MCO2Config,"ax",%progbits
 571              		.align	1
 572              		.global	RCC_MCO2Config
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu fpv4-sp-d16
 578              	RCC_MCO2Config:
 579              	.LVL26:
 580              	.LFB138:
 920:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 921:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 922:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Selects the clock source to output on MCO2 pin(PC9).
 923:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   PC9 should be configured in alternate function mode.
 924:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO2Source: specifies the clock source to output.
 925:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 926:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Source_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 927:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 928:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
 929:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Source_HSE: HSE clock selected as MCO2 source
 930:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Source_PLLCLK: main PLL clock selected as MCO2 source
 931:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO2Div: specifies the MCO2 prescaler.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 27


 932:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 933:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_1: no division applied to MCO2 clock
 934:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_2: division by 2 applied to MCO2 clock
 935:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_3: division by 3 applied to MCO2 clock
 936:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_4: division by 4 applied to MCO2 clock
 937:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_5: division by 5 applied to MCO2 clock
 938:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note  For STM32F410xx devices to output I2SCLK clock on MCO2 you should have
 939:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 940:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
 941:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 942:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_MCO2Config(uint32_t RCC_MCO2Source, uint32_t RCC_MCO2Div)
 943:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 581              		.loc 1 943 1 is_stmt 1 view -0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 944:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 586              		.loc 1 944 3 view .LVU132
 945:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
 946:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 947:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO2SOURCE(RCC_MCO2Source));
 587              		.loc 1 947 3 view .LVU133
 948:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO2DIV(RCC_MCO2Div));
 588              		.loc 1 948 3 view .LVU134
 949:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
 950:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 589              		.loc 1 950 3 view .LVU135
 590              		.loc 1 950 10 is_stmt 0 view .LVU136
 591 0000 034A     		ldr	r2, .L47
 592 0002 9368     		ldr	r3, [r2, #8]
 593              	.LVL27:
 951:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
 952:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear MCO2 and MCO2PRE[2:0] bits */
 953:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= CFGR_MCO2_RESET_MASK;
 594              		.loc 1 953 3 is_stmt 1 view .LVU137
 595              		.loc 1 953 10 is_stmt 0 view .LVU138
 596 0004 23F07843 		bic	r3, r3, #-134217728
 597              	.LVL28:
 954:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 955:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Select MCO2 clock source and prescaler */
 956:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_MCO2Source | RCC_MCO2Div;
 598              		.loc 1 956 3 is_stmt 1 view .LVU139
 599              		.loc 1 956 28 is_stmt 0 view .LVU140
 600 0008 0843     		orrs	r0, r0, r1
 601              	.LVL29:
 602              		.loc 1 956 10 view .LVU141
 603 000a 1843     		orrs	r0, r0, r3
 604              	.LVL30:
 957:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
 958:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
 959:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 605              		.loc 1 959 3 is_stmt 1 view .LVU142
 606              		.loc 1 959 13 is_stmt 0 view .LVU143
 607 000c 9060     		str	r0, [r2, #8]
 960:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 961:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 28


 962:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC_MCO2Cmd(ENABLE);
 963:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */   
 964:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 608              		.loc 1 964 1 view .LVU144
 609 000e 7047     		bx	lr
 610              	.L48:
 611              		.align	2
 612              	.L47:
 613 0010 00380240 		.word	1073887232
 614              		.cfi_endproc
 615              	.LFE138:
 617              		.section	.text.RCC_SYSCLKConfig,"ax",%progbits
 618              		.align	1
 619              		.global	RCC_SYSCLKConfig
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 623              		.fpu fpv4-sp-d16
 625              	RCC_SYSCLKConfig:
 626              	.LVL31:
 627              	.LFB139:
 965:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 966:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
 967:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @}
 968:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
 969:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 970:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group2 System AHB and APB busses clocks configuration functions
 971:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  *  @brief   System, AHB and APB busses clocks configuration functions
 972:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  *
 973:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** @verbatim   
 974:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  ===============================================================================
 975:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       ##### System, AHB and APB busses clocks configuration functions #####
 976:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  ===============================================================================  
 977:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     [..]
 978:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       This section provide functions allowing to configure the System, AHB, APB1 and 
 979:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       APB2 busses clocks.
 980:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
 981:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 982:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           HSE and PLL.
 983:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable 
 984:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped 
 985:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived 
 986:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           from AHB clock through configurable prescalers and used to clock 
 987:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           the peripherals mapped on these busses. You can use 
 988:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           "RCC_GetClocksFreq()" function to retrieve the frequencies of these clocks.  
 989:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 990:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 991:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****         (+@) I2S: the I2S clock can be derived either from a specific PLL (PLLI2S) or
 992:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****              from an external clock mapped on the I2S_CKIN pin. 
 993:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****              You have to use RCC_I2SCLKConfig() function to configure this clock. 
 994:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****         (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 995:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****              divided by 2 to 31. You have to use RCC_RTCCLKConfig() and RCC_RTCCLKCmd()
 996:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****              functions to configure this clock. 
 997:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****         (+@) USB OTG FS, SDIO and RTC: USB OTG FS require a frequency equal to 48 MHz
 998:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****              to work correctly, while the SDIO require a frequency equal or lower than
 999:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****              to 48. This clock is derived of the main PLL through PLLQ divider.
1000:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****         (+@) IWDG clock which is always the LSI clock.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 29


1001:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****        
1002:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) For STM32F405xx/407xx and STM32F415xx/417xx devices, the maximum frequency 
1003:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****          of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz. Depending 
1004:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****          on the device voltage range, the maximum frequency should be adapted accordingly:
1005:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1006:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1007:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1008:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1009:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1010:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1011:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
1012:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1013:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
1014:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1015:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
1016:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1017:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |66 < HCLK <= 88  |60 < HCLK <= 80  |
1018:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1019:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|120< HCLK <= 150|96 < HCLK <= 120|88 < HCLK <= 110 |80 < HCLK <= 100 |
1020:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1021:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |5WS(6CPU cycle)|150< HCLK <= 168|120< HCLK <= 144|110 < HCLK <= 132|100 < HCLK <= 120|
1022:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1023:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |6WS(7CPU cycle)|      NA        |144< HCLK <= 168|132 < HCLK <= 154|120 < HCLK <= 140|
1024:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1025:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |7WS(8CPU cycle)|      NA        |      NA        |154 < HCLK <= 168|140 < HCLK <= 160|
1026:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  +---------------|----------------|----------------|-----------------|-----------------+
1027:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) For STM32F42xxx/43xxx/469xx/479xx devices, the maximum frequency of the SYSCLK and HCLK i
1028:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           PCLK2 90 MHz and PCLK1 45 MHz. Depending on the device voltage range, the maximum 
1029:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           frequency should be adapted accordingly:
1030:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1031:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1032:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1033:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1034:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1035:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1036:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
1037:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1038:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
1039:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1040:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
1041:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1042:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |66 < HCLK <= 88  |60 < HCLK <= 80  |
1043:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1044:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|120< HCLK <= 150|96 < HCLK <= 120|88 < HCLK <= 110 |80 < HCLK <= 100 |
1045:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1046:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |5WS(6CPU cycle)|120< HCLK <= 180|120< HCLK <= 144|110 < HCLK <= 132|100 < HCLK <= 120|
1047:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1048:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |6WS(7CPU cycle)|      NA        |144< HCLK <= 168|132 < HCLK <= 154|120 < HCLK <= 140|
1049:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1050:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |7WS(8CPU cycle)|      NA        |168< HCLK <= 180|154 < HCLK <= 176|140 < HCLK <= 160|
1051:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1052:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |8WS(9CPU cycle)|      NA        |      NA        |176 < HCLK <= 180|160 < HCLK <= 168|
1053:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1054:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****    
1055:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) For STM32F401xx devices, the maximum frequency of the SYSCLK and HCLK is 84 MHz, 
1056:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           PCLK2 84 MHz and PCLK1 42 MHz. Depending on the device voltage range, the maximum 
1057:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           frequency should be adapted accordingly:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 30


1058:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1059:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1060:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1061:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1062:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1063:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1064:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
1065:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1066:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
1067:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1068:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 84 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
1069:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1070:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|      NA        |72 < HCLK <= 84 |66 < HCLK <= 84  |60 < HCLK <= 80  |
1071:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1072:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|      NA        |      NA        |      NA         |80 < HCLK <= 84  |
1073:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1074:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1075:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) For STM32F410xx/STM32F411xE devices, the maximum frequency of the SYSCLK and HCLK is 100 
1076:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           PCLK2 100 MHz and PCLK1 50 MHz. Depending on the device voltage range, the maximum 
1077:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           frequency should be adapted accordingly:
1078:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1079:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1080:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1081:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1082:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1083:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1084:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 18   |0 < HCLK <= 16   |
1085:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1086:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 64 |24 < HCLK <= 48 |18 < HCLK <= 36  |16 < HCLK <= 32  |
1087:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1088:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|64 < HCLK <= 90 |48 < HCLK <= 72 |36 < HCLK <= 54  |32 < HCLK <= 48  |
1089:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1090:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 100|72 < HCLK <= 96 |54 < HCLK <= 72  |48 < HCLK <= 64  |
1091:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1092:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|      NA        |96 < HCLK <= 100|72 < HCLK <= 90  |64 < HCLK <= 80  |
1093:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1094:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |5WS(6CPU cycle)|      NA        |       NA       |90 < HCLK <= 100 |80 < HCLK <= 96  |
1095:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1096:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  |6WS(7CPU cycle)|      NA        |       NA       |        NA       |96 < HCLK <= 100 |
1097:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1098:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1099:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       -@- On STM32F405xx/407xx and STM32F415xx/417xx devices: 
1100:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****            (++) when VOS = '0', the maximum value of fHCLK = 144MHz. 
1101:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****            (++) when VOS = '1', the maximum value of fHCLK = 168MHz. 
1102:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           [..] 
1103:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           On STM32F42xxx/43xxx/469xx/479xx devices:
1104:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x01', the maximum value of fHCLK is 120MHz.
1105:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x10', the maximum value of fHCLK is 144MHz.
1106:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x11', the maximum value of f  is 168MHz 
1107:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           [..]  
1108:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           On STM32F401x devices:
1109:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x01', the maximum value of fHCLK is 64MHz.
1110:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x10', the maximum value of fHCLK is 84MHz.
1111:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           On STM32F410xx/STM32F411xE devices:
1112:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x01' the maximum value of fHCLK is 64MHz.
1113:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x10' the maximum value of fHCLK is 84MHz.
1114:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x11' the maximum value of fHCLK is 100MHz.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 31


1115:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1116:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****        You can use PWR_MainRegulatorModeConfig() function to control VOS bits.
1117:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1118:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** @endverbatim
1119:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @{
1120:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1121:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1122:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1123:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
1124:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
1125:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
1126:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
1127:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         (if the Clock Security System CSS is enabled).
1128:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
1129:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked). 
1130:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
1131:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         occur when the clock source will be ready. 
1132:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         You can use RCC_GetSYSCLKSource() function to know which clock is
1133:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         currently used as system clock source. 
1134:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
1135:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1136:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_HSI: HSI selected as system clock source
1137:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_HSE: HSE selected as system clock source
1138:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock source (RCC_SYSCLKSource_
1139:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_PLLRCLK: PLL R selected as system clock source only for STM32F
1140:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1141:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1142:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
1143:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 628              		.loc 1 1143 1 is_stmt 1 view -0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
1144:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 633              		.loc 1 1144 3 view .LVU146
1145:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1146:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1147:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 634              		.loc 1 1147 3 view .LVU147
1148:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1149:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 635              		.loc 1 1149 3 view .LVU148
 636              		.loc 1 1149 10 is_stmt 0 view .LVU149
 637 0000 034A     		ldr	r2, .L50
 638 0002 9368     		ldr	r3, [r2, #8]
 639              	.LVL32:
1150:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1151:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear SW[1:0] bits */
1152:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_SW;
 640              		.loc 1 1152 3 is_stmt 1 view .LVU150
 641              		.loc 1 1152 10 is_stmt 0 view .LVU151
 642 0004 23F00303 		bic	r3, r3, #3
 643              	.LVL33:
1153:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1154:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
1155:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 32


 644              		.loc 1 1155 3 is_stmt 1 view .LVU152
 645              		.loc 1 1155 10 is_stmt 0 view .LVU153
 646 0008 0343     		orrs	r3, r3, r0
 647              	.LVL34:
1156:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1157:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
1158:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 648              		.loc 1 1158 3 is_stmt 1 view .LVU154
 649              		.loc 1 1158 13 is_stmt 0 view .LVU155
 650 000a 9360     		str	r3, [r2, #8]
1159:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 651              		.loc 1 1159 1 view .LVU156
 652 000c 7047     		bx	lr
 653              	.L51:
 654 000e 00BF     		.align	2
 655              	.L50:
 656 0010 00380240 		.word	1073887232
 657              		.cfi_endproc
 658              	.LFE139:
 660              		.section	.text.RCC_GetSYSCLKSource,"ax",%progbits
 661              		.align	1
 662              		.global	RCC_GetSYSCLKSource
 663              		.syntax unified
 664              		.thumb
 665              		.thumb_func
 666              		.fpu fpv4-sp-d16
 668              	RCC_GetSYSCLKSource:
 669              	.LFB140:
1160:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1161:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1162:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Returns the clock source used as system clock.
1163:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  None
1164:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval The clock source used as system clock. The returned value can be one
1165:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         of the following:
1166:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *              - 0x00: HSI used as system clock
1167:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *              - 0x04: HSE used as system clock
1168:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *              - 0x08: PLL used as system clock (PLL P for STM32F446xx devices)
1169:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *              - 0x0C: PLL R used as system clock (only for STM32F412xG, STM32F413_423xx and STM3
1170:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1171:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
1172:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 670              		.loc 1 1172 1 is_stmt 1 view -0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              		@ link register save eliminated.
1173:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   return ((uint8_t)(RCC->CFGR & RCC_CFGR_SWS));
 675              		.loc 1 1173 3 view .LVU158
 676              		.loc 1 1173 24 is_stmt 0 view .LVU159
 677 0000 024B     		ldr	r3, .L53
 678 0002 9868     		ldr	r0, [r3, #8]
1174:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 679              		.loc 1 1174 1 view .LVU160
 680 0004 00F00C00 		and	r0, r0, #12
 681 0008 7047     		bx	lr
 682              	.L54:
 683 000a 00BF     		.align	2
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 33


 684              	.L53:
 685 000c 00380240 		.word	1073887232
 686              		.cfi_endproc
 687              	.LFE140:
 689              		.section	.text.RCC_HCLKConfig,"ax",%progbits
 690              		.align	1
 691              		.global	RCC_HCLKConfig
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	RCC_HCLKConfig:
 698              	.LVL35:
 699              	.LFB141:
1175:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1176:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1177:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
1178:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
1179:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         these bits to ensure that HCLK not exceed the maximum allowed frequency
1180:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         (for more details refer to section above
1181:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           "CPU, AHB and APB busses clocks configuration functions")
1182:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
1183:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         the system clock (SYSCLK).
1184:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1185:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
1186:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
1187:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
1188:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
1189:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
1190:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
1191:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
1192:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
1193:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
1194:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1195:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1196:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
1197:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 700              		.loc 1 1197 1 is_stmt 1 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		@ link register save eliminated.
1198:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 705              		.loc 1 1198 3 view .LVU162
1199:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1200:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1201:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 706              		.loc 1 1201 3 view .LVU163
1202:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1203:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 707              		.loc 1 1203 3 view .LVU164
 708              		.loc 1 1203 10 is_stmt 0 view .LVU165
 709 0000 034A     		ldr	r2, .L56
 710 0002 9368     		ldr	r3, [r2, #8]
 711              	.LVL36:
1204:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1205:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear HPRE[3:0] bits */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 34


1206:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_HPRE;
 712              		.loc 1 1206 3 is_stmt 1 view .LVU166
 713              		.loc 1 1206 10 is_stmt 0 view .LVU167
 714 0004 23F0F003 		bic	r3, r3, #240
 715              	.LVL37:
1207:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1208:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
1209:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SYSCLK;
 716              		.loc 1 1209 3 is_stmt 1 view .LVU168
 717              		.loc 1 1209 10 is_stmt 0 view .LVU169
 718 0008 0343     		orrs	r3, r3, r0
 719              	.LVL38:
1210:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1211:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
1212:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 720              		.loc 1 1212 3 is_stmt 1 view .LVU170
 721              		.loc 1 1212 13 is_stmt 0 view .LVU171
 722 000a 9360     		str	r3, [r2, #8]
1213:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 723              		.loc 1 1213 1 view .LVU172
 724 000c 7047     		bx	lr
 725              	.L57:
 726 000e 00BF     		.align	2
 727              	.L56:
 728 0010 00380240 		.word	1073887232
 729              		.cfi_endproc
 730              	.LFE141:
 732              		.section	.text.RCC_PCLK1Config,"ax",%progbits
 733              		.align	1
 734              		.global	RCC_PCLK1Config
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 738              		.fpu fpv4-sp-d16
 740              	RCC_PCLK1Config:
 741              	.LVL39:
 742              	.LFB142:
1214:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1215:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1216:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
1217:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
1218:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         the AHB clock (HCLK).
1219:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1220:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div1:  APB1 clock = HCLK
1221:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div2:  APB1 clock = HCLK/2
1222:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div4:  APB1 clock = HCLK/4
1223:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div8:  APB1 clock = HCLK/8
1224:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
1225:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1226:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1227:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
1228:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 743              		.loc 1 1228 1 is_stmt 1 view -0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 35


1229:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 748              		.loc 1 1229 3 view .LVU174
1230:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1231:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1232:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 749              		.loc 1 1232 3 view .LVU175
1233:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1234:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 750              		.loc 1 1234 3 view .LVU176
 751              		.loc 1 1234 10 is_stmt 0 view .LVU177
 752 0000 034A     		ldr	r2, .L59
 753 0002 9368     		ldr	r3, [r2, #8]
 754              	.LVL40:
1235:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1236:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear PPRE1[2:0] bits */
1237:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE1;
 755              		.loc 1 1237 3 is_stmt 1 view .LVU178
 756              		.loc 1 1237 10 is_stmt 0 view .LVU179
 757 0004 23F4E053 		bic	r3, r3, #7168
 758              	.LVL41:
1238:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1239:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
1240:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_HCLK;
 759              		.loc 1 1240 3 is_stmt 1 view .LVU180
 760              		.loc 1 1240 10 is_stmt 0 view .LVU181
 761 0008 0343     		orrs	r3, r3, r0
 762              	.LVL42:
1241:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1242:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
1243:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 763              		.loc 1 1243 3 is_stmt 1 view .LVU182
 764              		.loc 1 1243 13 is_stmt 0 view .LVU183
 765 000a 9360     		str	r3, [r2, #8]
1244:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 766              		.loc 1 1244 1 view .LVU184
 767 000c 7047     		bx	lr
 768              	.L60:
 769 000e 00BF     		.align	2
 770              	.L59:
 771 0010 00380240 		.word	1073887232
 772              		.cfi_endproc
 773              	.LFE142:
 775              		.section	.text.RCC_PCLK2Config,"ax",%progbits
 776              		.align	1
 777              		.global	RCC_PCLK2Config
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 781              		.fpu fpv4-sp-d16
 783              	RCC_PCLK2Config:
 784              	.LVL43:
 785              	.LFB143:
1245:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1246:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1247:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
1248:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
1249:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         the AHB clock (HCLK).
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 36


1250:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1251:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div1:  APB2 clock = HCLK
1252:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div2:  APB2 clock = HCLK/2
1253:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div4:  APB2 clock = HCLK/4
1254:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div8:  APB2 clock = HCLK/8
1255:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
1256:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1257:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1258:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
1259:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 786              		.loc 1 1259 1 is_stmt 1 view -0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790              		@ link register save eliminated.
1260:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 791              		.loc 1 1260 3 view .LVU186
1261:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1262:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1263:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 792              		.loc 1 1263 3 view .LVU187
1264:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1265:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 793              		.loc 1 1265 3 view .LVU188
 794              		.loc 1 1265 10 is_stmt 0 view .LVU189
 795 0000 034A     		ldr	r2, .L62
 796 0002 9368     		ldr	r3, [r2, #8]
 797              	.LVL44:
1266:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1267:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear PPRE2[2:0] bits */
1268:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE2;
 798              		.loc 1 1268 3 is_stmt 1 view .LVU190
 799              		.loc 1 1268 10 is_stmt 0 view .LVU191
 800 0004 23F46043 		bic	r3, r3, #57344
 801              	.LVL45:
1269:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1270:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
1271:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 802              		.loc 1 1271 3 is_stmt 1 view .LVU192
 803              		.loc 1 1271 10 is_stmt 0 view .LVU193
 804 0008 43EAC003 		orr	r3, r3, r0, lsl #3
 805              	.LVL46:
1272:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1273:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
1274:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 806              		.loc 1 1274 3 is_stmt 1 view .LVU194
 807              		.loc 1 1274 13 is_stmt 0 view .LVU195
 808 000c 9360     		str	r3, [r2, #8]
1275:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 809              		.loc 1 1275 1 view .LVU196
 810 000e 7047     		bx	lr
 811              	.L63:
 812              		.align	2
 813              	.L62:
 814 0010 00380240 		.word	1073887232
 815              		.cfi_endproc
 816              	.LFE143:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 37


 818              		.section	.text.RCC_GetClocksFreq,"ax",%progbits
 819              		.align	1
 820              		.global	RCC_GetClocksFreq
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv4-sp-d16
 826              	RCC_GetClocksFreq:
 827              	.LVL47:
 828              	.LFB144:
1276:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1277:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1278:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks; SYSCLK, HCLK, 
1279:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         PCLK1 and PCLK2.
1280:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
1281:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   The system frequency computed by this function is not the real 
1282:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
1283:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         constant and the selected clock source:
1284:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1285:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
1286:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**) 
1287:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.         
1288:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
1289:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
1290:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *               in voltage and temperature.
1291:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
1292:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
1293:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1294:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                have wrong result.
1295:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                
1296:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1297:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         value for HSE crystal.
1298:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
1299:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
1300:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          the clocks frequencies.
1301:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *     
1302:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used by the user application to compute the 
1303:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
1304:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   Each time SYSCLK, HCLK, PCLK1 and/or PCLK2 clock changes, this function
1305:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         must be called to update the structure's field. Otherwise, any
1306:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         configuration based on this function will be incorrect.
1307:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *    
1308:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1309:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1310:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
1311:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 829              		.loc 1 1311 1 is_stmt 1 view -0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 834              		.loc 1 1311 1 is_stmt 0 view .LVU198
 835 0000 10B4     		push	{r4}
 836              	.LCFI0:
 837              		.cfi_def_cfa_offset 4
 838              		.cfi_offset 4, -4
1312:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmp = 0, presc = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 38


 839              		.loc 1 1312 3 is_stmt 1 view .LVU199
 840              	.LVL48:
1313:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx)  
1314:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t pllr = 2;
1315:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx */
1316:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1317:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1318:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 841              		.loc 1 1318 3 view .LVU200
 842              		.loc 1 1318 12 is_stmt 0 view .LVU201
 843 0002 294B     		ldr	r3, .L73
 844 0004 9B68     		ldr	r3, [r3, #8]
 845              		.loc 1 1318 7 view .LVU202
 846 0006 03F00C03 		and	r3, r3, #12
 847              	.LVL49:
1319:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1320:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   switch (tmp)
 848              		.loc 1 1320 3 is_stmt 1 view .LVU203
 849 000a 042B     		cmp	r3, #4
 850 000c 23D0     		beq	.L65
 851 000e 082B     		cmp	r3, #8
 852 0010 24D0     		beq	.L66
 853 0012 13B1     		cbz	r3, .L72
1321:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
1322:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   case 0x00:  /* HSI used as system clock source */
1323:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
1324:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     break;
1325:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   case 0x04:  /* HSE used as system clock  source */
1326:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
1327:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     break;
1328:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   case 0x08:  /* PLL P used as system clock  source */
1329:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     
1330:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
1331:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     SYSCLK = PLL_VCO / PLLP
1332:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     */    
1333:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
1334:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
1335:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     
1336:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     if (pllsource != 0)
1337:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     {
1338:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       /* HSE used as PLL clock source */
1339:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
1340:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
1341:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     else
1342:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     {
1343:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       /* HSI used as PLL clock source */
1344:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
1345:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
1346:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     
1347:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
1348:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
1349:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     break;
1350:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1351:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx)
1352:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   case 0x0C:  /* PLL R used as system clock  source */
1353:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
1354:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     SYSCLK = PLL_VCO / PLLR
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 39


1355:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     */    
1356:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
1357:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
1358:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     
1359:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     if (pllsource != 0)
1360:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     {
1361:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       /* HSE used as PLL clock source */
1362:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
1363:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
1364:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     else
1365:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     {
1366:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       /* HSI used as PLL clock source */
1367:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
1368:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
1369:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     
1370:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >>28) + 1 ) *2;
1371:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllr;    
1372:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     break;
1373:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx */
1374:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     
1375:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   default:
1376:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 854              		.loc 1 1376 5 view .LVU204
 855              		.loc 1 1376 34 is_stmt 0 view .LVU205
 856 0014 254B     		ldr	r3, .L73+4
 857              	.LVL50:
 858              		.loc 1 1376 34 view .LVU206
 859 0016 0360     		str	r3, [r0]
1377:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     break;
 860              		.loc 1 1377 5 is_stmt 1 view .LVU207
 861 0018 01E0     		b	.L68
 862              	.LVL51:
 863              	.L72:
1323:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     break;
 864              		.loc 1 1323 5 view .LVU208
1323:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     break;
 865              		.loc 1 1323 34 is_stmt 0 view .LVU209
 866 001a 244B     		ldr	r3, .L73+4
 867              	.LVL52:
1323:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     break;
 868              		.loc 1 1323 34 view .LVU210
 869 001c 0360     		str	r3, [r0]
1324:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   case 0x04:  /* HSE used as system clock  source */
 870              		.loc 1 1324 5 is_stmt 1 view .LVU211
 871              	.LVL53:
 872              	.L68:
1378:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
1379:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Compute HCLK, PCLK1 and PCLK2 clocks frequencies ------------------------*/
1380:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1381:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Get HCLK prescaler */
1382:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_HPRE;
 873              		.loc 1 1382 3 view .LVU212
 874              		.loc 1 1382 12 is_stmt 0 view .LVU213
 875 001e 224C     		ldr	r4, .L73
 876 0020 A368     		ldr	r3, [r4, #8]
 877              	.LVL54:
1383:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmp = tmp >> 4;
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 40


 878              		.loc 1 1383 3 is_stmt 1 view .LVU214
 879              		.loc 1 1383 7 is_stmt 0 view .LVU215
 880 0022 C3F30313 		ubfx	r3, r3, #4, #4
 881              	.LVL55:
1384:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 882              		.loc 1 1384 3 is_stmt 1 view .LVU216
 883              		.loc 1 1384 27 is_stmt 0 view .LVU217
 884 0026 2249     		ldr	r1, .L73+8
 885 0028 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 886              	.LVL56:
 887              		.loc 1 1384 27 view .LVU218
 888 002a DAB2     		uxtb	r2, r3
 889              	.LVL57:
1385:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* HCLK clock frequency */
1386:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 890              		.loc 1 1386 3 is_stmt 1 view .LVU219
 891              		.loc 1 1386 42 is_stmt 0 view .LVU220
 892 002c 0368     		ldr	r3, [r0]
 893              		.loc 1 1386 61 view .LVU221
 894 002e D340     		lsrs	r3, r3, r2
 895              		.loc 1 1386 30 view .LVU222
 896 0030 4360     		str	r3, [r0, #4]
1387:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1388:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Get PCLK1 prescaler */
1389:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE1;
 897              		.loc 1 1389 3 is_stmt 1 view .LVU223
 898              		.loc 1 1389 12 is_stmt 0 view .LVU224
 899 0032 A268     		ldr	r2, [r4, #8]
 900              	.LVL58:
1390:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmp = tmp >> 10;
 901              		.loc 1 1390 3 is_stmt 1 view .LVU225
 902              		.loc 1 1390 7 is_stmt 0 view .LVU226
 903 0034 C2F38222 		ubfx	r2, r2, #10, #3
 904              	.LVL59:
1391:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 905              		.loc 1 1391 3 is_stmt 1 view .LVU227
 906              		.loc 1 1391 27 is_stmt 0 view .LVU228
 907 0038 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 908              	.LVL60:
 909              		.loc 1 1391 27 view .LVU229
 910 003a D2B2     		uxtb	r2, r2
 911              	.LVL61:
1392:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* PCLK1 clock frequency */
1393:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 912              		.loc 1 1393 3 is_stmt 1 view .LVU230
 913              		.loc 1 1393 60 is_stmt 0 view .LVU231
 914 003c 23FA02F2 		lsr	r2, r3, r2
 915              	.LVL62:
 916              		.loc 1 1393 31 view .LVU232
 917 0040 8260     		str	r2, [r0, #8]
1394:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1395:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Get PCLK2 prescaler */
1396:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE2;
 918              		.loc 1 1396 3 is_stmt 1 view .LVU233
 919              		.loc 1 1396 12 is_stmt 0 view .LVU234
 920 0042 A268     		ldr	r2, [r4, #8]
 921              	.LVL63:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 41


1397:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmp = tmp >> 13;
 922              		.loc 1 1397 3 is_stmt 1 view .LVU235
 923              		.loc 1 1397 7 is_stmt 0 view .LVU236
 924 0044 C2F34232 		ubfx	r2, r2, #13, #3
 925              	.LVL64:
1398:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 926              		.loc 1 1398 3 is_stmt 1 view .LVU237
 927              		.loc 1 1398 27 is_stmt 0 view .LVU238
 928 0048 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 929              	.LVL65:
 930              		.loc 1 1398 27 view .LVU239
 931 004a D2B2     		uxtb	r2, r2
 932              	.LVL66:
1399:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* PCLK2 clock frequency */
1400:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 933              		.loc 1 1400 3 is_stmt 1 view .LVU240
 934              		.loc 1 1400 60 is_stmt 0 view .LVU241
 935 004c D340     		lsrs	r3, r3, r2
 936              		.loc 1 1400 31 view .LVU242
 937 004e C360     		str	r3, [r0, #12]
1401:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 938              		.loc 1 1401 1 view .LVU243
 939 0050 5DF8044B 		ldr	r4, [sp], #4
 940              	.LCFI1:
 941              		.cfi_remember_state
 942              		.cfi_restore 4
 943              		.cfi_def_cfa_offset 0
 944 0054 7047     		bx	lr
 945              	.LVL67:
 946              	.L65:
 947              	.LCFI2:
 948              		.cfi_restore_state
1326:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     break;
 949              		.loc 1 1326 5 is_stmt 1 view .LVU244
1326:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     break;
 950              		.loc 1 1326 34 is_stmt 0 view .LVU245
 951 0056 174B     		ldr	r3, .L73+12
 952              	.LVL68:
1326:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     break;
 953              		.loc 1 1326 34 view .LVU246
 954 0058 0360     		str	r3, [r0]
1327:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   case 0x08:  /* PLL P used as system clock  source */
 955              		.loc 1 1327 5 is_stmt 1 view .LVU247
 956 005a E0E7     		b	.L68
 957              	.LVL69:
 958              	.L66:
1333:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 959              		.loc 1 1333 5 view .LVU248
1333:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 960              		.loc 1 1333 21 is_stmt 0 view .LVU249
 961 005c 124B     		ldr	r3, .L73
 962              	.LVL70:
1333:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 963              		.loc 1 1333 21 view .LVU250
 964 005e 5A68     		ldr	r2, [r3, #4]
 965              	.LVL71:
1334:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 42


 966              		.loc 1 1334 5 is_stmt 1 view .LVU251
1334:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     
 967              		.loc 1 1334 15 is_stmt 0 view .LVU252
 968 0060 5B68     		ldr	r3, [r3, #4]
1334:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     
 969              		.loc 1 1334 10 view .LVU253
 970 0062 03F03F03 		and	r3, r3, #63
 971              	.LVL72:
1336:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     {
 972              		.loc 1 1336 5 is_stmt 1 view .LVU254
1336:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     {
 973              		.loc 1 1336 8 is_stmt 0 view .LVU255
 974 0066 12F4800F 		tst	r2, #4194304
 975 006a 12D0     		beq	.L69
1339:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 976              		.loc 1 1339 7 is_stmt 1 view .LVU256
1339:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 977              		.loc 1 1339 27 is_stmt 0 view .LVU257
 978 006c 114A     		ldr	r2, .L73+12
 979              	.LVL73:
1339:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 980              		.loc 1 1339 27 view .LVU258
 981 006e B2FBF3F2 		udiv	r2, r2, r3
1339:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 982              		.loc 1 1339 42 view .LVU259
 983 0072 0D4B     		ldr	r3, .L73
 984              	.LVL74:
1339:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 985              		.loc 1 1339 42 view .LVU260
 986 0074 5B68     		ldr	r3, [r3, #4]
1339:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 987              		.loc 1 1339 72 view .LVU261
 988 0076 C3F38813 		ubfx	r3, r3, #6, #9
1339:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 989              		.loc 1 1339 14 view .LVU262
 990 007a 03FB02F3 		mul	r3, r3, r2
 991              	.LVL75:
 992              	.L70:
1347:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 993              		.loc 1 1347 5 is_stmt 1 view .LVU263
1347:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 994              		.loc 1 1347 18 is_stmt 0 view .LVU264
 995 007e 0A4A     		ldr	r2, .L73
 996 0080 5268     		ldr	r2, [r2, #4]
1347:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 997              		.loc 1 1347 48 view .LVU265
 998 0082 C2F30142 		ubfx	r2, r2, #16, #2
1347:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 999              		.loc 1 1347 54 view .LVU266
 1000 0086 0132     		adds	r2, r2, #1
1347:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 1001              		.loc 1 1347 10 view .LVU267
 1002 0088 5200     		lsls	r2, r2, #1
 1003              	.LVL76:
1348:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     break;
 1004              		.loc 1 1348 5 is_stmt 1 view .LVU268
1348:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     break;
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 43


 1005              		.loc 1 1348 42 is_stmt 0 view .LVU269
 1006 008a B3FBF2F3 		udiv	r3, r3, r2
 1007              	.LVL77:
1348:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     break;
 1008              		.loc 1 1348 34 view .LVU270
 1009 008e 0360     		str	r3, [r0]
1349:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 1010              		.loc 1 1349 5 is_stmt 1 view .LVU271
 1011 0090 C5E7     		b	.L68
 1012              	.LVL78:
 1013              	.L69:
1344:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 1014              		.loc 1 1344 7 view .LVU272
1344:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 1015              		.loc 1 1344 27 is_stmt 0 view .LVU273
 1016 0092 064A     		ldr	r2, .L73+4
 1017              	.LVL79:
1344:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 1018              		.loc 1 1344 27 view .LVU274
 1019 0094 B2FBF3F2 		udiv	r2, r2, r3
1344:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 1020              		.loc 1 1344 42 view .LVU275
 1021 0098 034B     		ldr	r3, .L73
 1022              	.LVL80:
1344:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 1023              		.loc 1 1344 42 view .LVU276
 1024 009a 5B68     		ldr	r3, [r3, #4]
1344:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 1025              		.loc 1 1344 72 view .LVU277
 1026 009c C3F38813 		ubfx	r3, r3, #6, #9
1344:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 1027              		.loc 1 1344 14 view .LVU278
 1028 00a0 03FB02F3 		mul	r3, r3, r2
 1029              	.LVL81:
1344:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     }
 1030              		.loc 1 1344 14 view .LVU279
 1031 00a4 EBE7     		b	.L70
 1032              	.L74:
 1033 00a6 00BF     		.align	2
 1034              	.L73:
 1035 00a8 00380240 		.word	1073887232
 1036 00ac 0024F400 		.word	16000000
 1037 00b0 00000000 		.word	.LANCHOR0
 1038 00b4 40787D01 		.word	25000000
 1039              		.cfi_endproc
 1040              	.LFE144:
 1042              		.section	.text.RCC_RTCCLKConfig,"ax",%progbits
 1043              		.align	1
 1044              		.global	RCC_RTCCLKConfig
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1048              		.fpu fpv4-sp-d16
 1050              	RCC_RTCCLKConfig:
 1051              	.LVL82:
 1052              	.LFB145:
1402:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 44


1403:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1404:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @}
1405:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1406:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1407:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group3 Peripheral clocks configuration functions
1408:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  *  @brief   Peripheral clocks configuration functions 
1409:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  *
1410:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** @verbatim   
1411:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  ===============================================================================
1412:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****               ##### Peripheral clocks configuration functions #####
1413:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  ===============================================================================  
1414:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     [..] This section provide functions allowing to configure the Peripheral clocks. 
1415:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1416:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) The RTC clock which is derived from the LSI, LSE or HSE clock divided 
1417:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           by 2 to 31.
1418:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****      
1419:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) After restart from Reset or wakeup from STANDBY, all peripherals are off
1420:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           except internal SRAM, Flash and JTAG. Before to start using a peripheral 
1421:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           you have to enable its interface clock. You can do this using 
1422:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           RCC_AHBPeriphClockCmd(), RCC_APB2PeriphClockCmd() and RCC_APB1PeriphClockCmd() functions.
1423:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1424:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) To reset the peripherals configuration (to the default state after device reset)
1425:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           you can use RCC_AHBPeriphResetCmd(), RCC_APB2PeriphResetCmd() and 
1426:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           RCC_APB1PeriphResetCmd() functions.
1427:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****      
1428:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****       (#) To further reduce power consumption in SLEEP mode the peripheral clocks 
1429:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           can be disabled prior to executing the WFI or WFE instructions. 
1430:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           You can do this using RCC_AHBPeriphClockLPModeCmd(), 
1431:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****           RCC_APB2PeriphClockLPModeCmd() and RCC_APB1PeriphClockLPModeCmd() functions.  
1432:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1433:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** @endverbatim
1434:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @{
1435:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1436:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1437:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1438:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
1439:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   As the RTC clock configuration bits are in the Backup domain and write
1440:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         access is denied to this domain after reset, you have to enable write
1441:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         access using PWR_BackupAccessCmd(ENABLE) function before to configure
1442:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         the RTC clock source (to be done once after reset).    
1443:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   Once the RTC clock is configured it can't be changed unless the  
1444:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         Backup domain is reset using RCC_BackupResetCmd() function, or by
1445:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         a Power On Reset (POR).
1446:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *    
1447:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
1448:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1449:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
1450:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
1451:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_RTCCLKSource_HSE_Divx: HSE clock divided by x selected
1452:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                                            as RTC clock, where x:[2,31]
1453:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *  
1454:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   If the LSE or LSI is used as RTC clock source, the RTC continues to
1455:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         work in STOP and STANDBY modes, and can be used as wakeup source.
1456:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         However, when the HSE clock is used as RTC clock source, the RTC
1457:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         cannot be used in STOP and STANDBY modes.    
1458:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   The maximum input clock frequency for RTC is 1MHz (when using HSE as
1459:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         RTC clock source).
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 45


1460:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *  
1461:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1462:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1463:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
1464:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1053              		.loc 1 1464 1 is_stmt 1 view -0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057              		@ link register save eliminated.
1465:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1058              		.loc 1 1465 3 view .LVU281
1466:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1467:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1468:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 1059              		.loc 1 1468 3 view .LVU282
1469:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1470:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if ((RCC_RTCCLKSource & 0x00000300) == 0x00000300)
 1060              		.loc 1 1470 3 view .LVU283
 1061              		.loc 1 1470 25 is_stmt 0 view .LVU284
 1062 0000 00F44073 		and	r3, r0, #768
 1063              		.loc 1 1470 6 view .LVU285
 1064 0004 B3F5407F 		cmp	r3, #768
 1065 0008 06D0     		beq	.L77
 1066              	.LVL83:
 1067              	.L76:
1471:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   { /* If HSE is selected as RTC clock source, configure HSE division factor for RTC clock */
1472:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     tmpreg = RCC->CFGR;
1473:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1474:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* Clear RTCPRE[4:0] bits */
1475:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     tmpreg &= ~RCC_CFGR_RTCPRE;
1476:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1477:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* Configure HSE division factor for RTC clock */
1478:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     tmpreg |= (RCC_RTCCLKSource & 0xFFFFCFF);
1479:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1480:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* Store the new value */
1481:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->CFGR = tmpreg;
1482:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
1483:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     
1484:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Select the RTC clock source */
1485:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->BDCR |= (RCC_RTCCLKSource & 0x00000FFF);
 1068              		.loc 1 1485 3 is_stmt 1 view .LVU286
 1069              		.loc 1 1485 13 is_stmt 0 view .LVU287
 1070 000a 094A     		ldr	r2, .L78
 1071 000c 136F     		ldr	r3, [r2, #112]
 1072              		.loc 1 1485 34 view .LVU288
 1073 000e C0F30B00 		ubfx	r0, r0, #0, #12
 1074              	.LVL84:
 1075              		.loc 1 1485 13 view .LVU289
 1076 0012 1843     		orrs	r0, r0, r3
 1077 0014 1067     		str	r0, [r2, #112]
1486:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1078              		.loc 1 1486 1 view .LVU290
 1079 0016 7047     		bx	lr
 1080              	.LVL85:
 1081              	.L77:
1472:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 46


 1082              		.loc 1 1472 5 is_stmt 1 view .LVU291
1472:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 1083              		.loc 1 1472 12 is_stmt 0 view .LVU292
 1084 0018 0549     		ldr	r1, .L78
 1085 001a 8A68     		ldr	r2, [r1, #8]
 1086              	.LVL86:
1475:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 1087              		.loc 1 1475 5 is_stmt 1 view .LVU293
1475:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 1088              		.loc 1 1475 12 is_stmt 0 view .LVU294
 1089 001c 22F4F812 		bic	r2, r2, #2031616
 1090              	.LVL87:
1478:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 1091              		.loc 1 1478 5 is_stmt 1 view .LVU295
1478:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 1092              		.loc 1 1478 33 is_stmt 0 view .LVU296
 1093 0020 20F07043 		bic	r3, r0, #-268435456
 1094 0024 23F44073 		bic	r3, r3, #768
1478:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 1095              		.loc 1 1478 12 view .LVU297
 1096 0028 1343     		orrs	r3, r3, r2
 1097              	.LVL88:
1481:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 1098              		.loc 1 1481 5 is_stmt 1 view .LVU298
1481:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 1099              		.loc 1 1481 15 is_stmt 0 view .LVU299
 1100 002a 8B60     		str	r3, [r1, #8]
 1101 002c EDE7     		b	.L76
 1102              	.L79:
 1103 002e 00BF     		.align	2
 1104              	.L78:
 1105 0030 00380240 		.word	1073887232
 1106              		.cfi_endproc
 1107              	.LFE145:
 1109              		.section	.text.RCC_RTCCLKCmd,"ax",%progbits
 1110              		.align	1
 1111              		.global	RCC_RTCCLKCmd
 1112              		.syntax unified
 1113              		.thumb
 1114              		.thumb_func
 1115              		.fpu fpv4-sp-d16
 1117              	RCC_RTCCLKCmd:
 1118              	.LVL89:
 1119              	.LFB146:
1487:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1488:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1489:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the RTC clock.
1490:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be used only after the RTC clock source was selected
1491:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         using the RCC_RTCCLKConfig function.
1492:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
1493:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1494:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1495:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
1496:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1120              		.loc 1 1496 1 is_stmt 1 view -0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 47


 1123              		@ frame_needed = 0, uses_anonymous_args = 0
 1124              		@ link register save eliminated.
1497:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1498:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1125              		.loc 1 1498 3 view .LVU301
1499:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1500:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 1126              		.loc 1 1500 3 view .LVU302
 1127              		.loc 1 1500 36 is_stmt 0 view .LVU303
 1128 0000 014B     		ldr	r3, .L81
 1129 0002 1860     		str	r0, [r3]
1501:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1130              		.loc 1 1501 1 view .LVU304
 1131 0004 7047     		bx	lr
 1132              	.L82:
 1133 0006 00BF     		.align	2
 1134              	.L81:
 1135 0008 3C0E4742 		.word	1111952956
 1136              		.cfi_endproc
 1137              	.LFE146:
 1139              		.section	.text.RCC_BackupResetCmd,"ax",%progbits
 1140              		.align	1
 1141              		.global	RCC_BackupResetCmd
 1142              		.syntax unified
 1143              		.thumb
 1144              		.thumb_func
 1145              		.fpu fpv4-sp-d16
 1147              	RCC_BackupResetCmd:
 1148              	.LVL90:
 1149              	.LFB147:
1502:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1503:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1504:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1505:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function resets the RTC peripheral (including the backup registers)
1506:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         and the RTC clock source selection in RCC_CSR register.
1507:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   The BKPSRAM is not affected by this reset.    
1508:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1509:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1510:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1511:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1512:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1513:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1150              		.loc 1 1513 1 is_stmt 1 view -0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 1154              		@ link register save eliminated.
1514:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1515:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1155              		.loc 1 1515 3 view .LVU306
1516:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 1156              		.loc 1 1516 3 view .LVU307
 1157              		.loc 1 1516 36 is_stmt 0 view .LVU308
 1158 0000 014B     		ldr	r3, .L84
 1159 0002 1860     		str	r0, [r3]
1517:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1160              		.loc 1 1517 1 view .LVU309
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 48


 1161 0004 7047     		bx	lr
 1162              	.L85:
 1163 0006 00BF     		.align	2
 1164              	.L84:
 1165 0008 400E4742 		.word	1111952960
 1166              		.cfi_endproc
 1167              	.LFE147:
 1169              		.section	.text.RCC_I2SCLKConfig,"ax",%progbits
 1170              		.align	1
 1171              		.global	RCC_I2SCLKConfig
 1172              		.syntax unified
 1173              		.thumb
 1174              		.thumb_func
 1175              		.fpu fpv4-sp-d16
 1177              	RCC_I2SCLKConfig:
 1178              	.LVL91:
 1179              	.LFB148:
1518:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1519:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined (STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx)
1520:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1521:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1522:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the I2S APB clock.
1523:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
1524:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SAPBx: specifies the APBx I2S clock source.
1525:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1526:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SBus_APB1: I2S peripheral instance is on APB1 Bus
1527:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SBus_APB2: I2S peripheral instance is on APB2 Bus
1528:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
1529:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1530:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1531:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_PLLI2S: PLLI2S clock used as I2S clock source
1532:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_Ext: External clock mapped on the I2S_CKIN pin
1533:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                                        used as I2S clock source
1534:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_PLL: PLL clock used as I2S clock source
1535:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_HSI_HSE: HSI or HSE depends on PLLSRC used as I2S clock source
1536:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1537:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1538:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SAPBx, uint32_t RCC_I2SCLKSource)
1539:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
1540:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1541:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
1542:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2S_APBx(RCC_I2SAPBx));
1543:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1544:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if(RCC_I2SAPBx == RCC_I2SBus_APB1)
1545:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
1546:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* Clear APB1 I2Sx clock source selection bits */
1547:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_I2S1SRC;
1548:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* Set new APB1 I2Sx clock source*/
1549:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= RCC_I2SCLKSource;
1550:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
1551:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
1552:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
1553:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* Clear APB2 I2Sx clock source selection  bits */
1554:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_I2S2SRC;
1555:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* Set new APB2 I2Sx clock source */
1556:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= (RCC_I2SCLKSource << 2);
1557:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 49


1558:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
1559:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)
1560:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1561:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAIx clock source (SAIxCLK).
1562:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the SAIx APB clock.
1563:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
1564:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIInstance: specifies the SAIx clock source.
1565:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1566:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIInstance_SAI1: SAI1 clock source selection
1567:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIInstance_SAI2: SAI2 clock source selections
1568:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
1569:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_SAICLKSource: specifies the SAI clock source.
1570:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1571:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_PLLSAI: PLLSAI clock used as SAI clock source
1572:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_PLLI2S: PLLI2S clock used as SAI clock source
1573:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_PLL: PLL clock used as SAI clock source
1574:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_HSI_HSE: HSI or HSE depends on PLLSRC used as SAI clock source
1575:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1576:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1577:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_SAICLKConfig(uint32_t RCC_SAIInstance, uint32_t RCC_SAICLKSource)
1578:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
1579:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1580:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAICLK_SOURCE(RCC_SAICLKSource));
1581:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAI_INSTANCE(RCC_SAIInstance));
1582:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1583:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if(RCC_SAIInstance == RCC_SAIInstance_SAI1)
1584:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
1585:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* Clear SAI1 clock source selection bits */
1586:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_SAI1SRC;
1587:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* Set new SAI1 clock source */
1588:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= RCC_SAICLKSource;
1589:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
1590:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
1591:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
1592:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* Clear SAI2 clock source selection bits */
1593:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_SAI2SRC;
1594:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* Set new SAI2 clock source */
1595:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= (RCC_SAICLKSource << 2);
1596:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
1597:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
1598:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
1599:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1600:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F413_423xx)
1601:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1602:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures SAI1BlockA clock source selection.      
1603:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling PLLSAI, PLLI2S and  
1604:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         the SAI clock.
1605:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIBlockACLKSource: specifies the SAI Block A clock source.
1606:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1607:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLLI2SR: PLLI2SR clock used as SAI clock source
1608:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLLI2S: PLLI2S clock used as SAI clock source
1609:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLL: PLL clock used as SAI clock source
1610:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_HSI_HSE: HSI or HSE depends on PLLSRC used as SAI clock sourc
1611:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1612:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1613:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_SAIBlockACLKConfig(uint32_t RCC_SAIBlockACLKSource)
1614:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 50


1615:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1616:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1617:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1618:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAIACLK_SOURCE(RCC_SAIBlockACLKSource));
1619:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1620:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1621:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1622:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear RCC_DCKCFGR_SAI1ASRC[1:0] bits */
1623:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_SAI1ASRC;
1624:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1625:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set SAI Block A source selection value */
1626:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SAIBlockACLKSource;
1627:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1628:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
1629:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1630:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
1631:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1632:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1633:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures SAI1BlockB clock source selection.      
1634:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling PLLSAI, PLLI2S and  
1635:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         the SAI clock.
1636:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIBlockBCLKSource: specifies the SAI Block B clock source.
1637:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1638:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLLI2SR: PLLI2SR clock used as SAI clock source
1639:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLLI2S: PLLI2S clock used as SAI clock source
1640:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLL: PLL clock used as SAI clock source
1641:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_HSI_HSE: HSI or HSE depends on PLLSRC used as SAI clock sourc
1642:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1643:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1644:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_SAIBlockBCLKConfig(uint32_t RCC_SAIBlockBCLKSource)
1645:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
1646:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1647:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1648:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1649:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAIBCLK_SOURCE(RCC_SAIBlockBCLKSource));
1650:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1651:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1652:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1653:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear RCC_DCKCFGR_SAI1ASRC[1:0] bits */
1654:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_SAI1BSRC;
1655:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1656:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set SAI Block B source selection value */
1657:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SAIBlockBCLKSource;
1658:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1659:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
1660:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1661:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
1662:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F413_423xx */
1663:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx */
1664:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1665:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
1666:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1667:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1668:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the I2S clock.
1669:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *
1670:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1671:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         This parameter can be one of the following values:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 51


1672:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SAPBCLKSOURCE_PLLR: PLL VCO output clock divided by PLLR.
1673:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SAPBCLKSOURCE_EXT: External clock mapped on the I2S_CKIN pin.
1674:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SAPBCLKSOURCE_PLLSRC: HSI/HSE depends on PLLSRC.
1675:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1676:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1677:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SCLKSource)
1678:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
1679:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1680:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
1681:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1682:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear I2Sx clock source selection bits */
1683:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR &= ~RCC_DCKCFGR_I2SSRC;
1684:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set new I2Sx clock source*/
1685:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR |= RCC_I2SCLKSource;
1686:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
1687:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */
1688:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1689:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
1690:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1691:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1692:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the I2S APB clock.
1693:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1694:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1695:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2S2CLKSource_PLLI2S: PLLI2S clock used as I2S clock source
1696:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2S2CLKSource_Ext: External clock mapped on the I2S_CKIN pin
1697:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                                        used as I2S clock source
1698:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1699:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1700:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SCLKSource)
1701:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1180              		.loc 1 1701 1 is_stmt 1 view -0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 0, uses_anonymous_args = 0
 1184              		@ link register save eliminated.
1702:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1703:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
 1185              		.loc 1 1703 3 view .LVU311
1704:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1705:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CFGR_I2SSRC_BB = RCC_I2SCLKSource;  
 1186              		.loc 1 1705 3 view .LVU312
 1187              		.loc 1 1705 37 is_stmt 0 view .LVU313
 1188 0000 014B     		ldr	r3, .L87
 1189 0002 1860     		str	r0, [r3]
1706:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1190              		.loc 1 1706 1 view .LVU314
 1191 0004 7047     		bx	lr
 1192              	.L88:
 1193 0006 00BF     		.align	2
 1194              	.L87:
 1195 0008 5C014742 		.word	1111949660
 1196              		.cfi_endproc
 1197              	.LFE148:
 1199              		.section	.text.RCC_SAIBlockACLKConfig,"ax",%progbits
 1200              		.align	1
 1201              		.global	RCC_SAIBlockACLKConfig
 1202              		.syntax unified
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 52


 1203              		.thumb
 1204              		.thumb_func
 1205              		.fpu fpv4-sp-d16
 1207              	RCC_SAIBlockACLKConfig:
 1208              	.LVL92:
 1209              	.LFB149:
1707:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE || STM
1708:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1709:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
1710:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1711:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures SAI1BlockA clock source selection.
1712:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
1713:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/469xx/479xx devices.
1714:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *       
1715:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling PLLSAI, PLLI2S and  
1716:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         the SAI clock.
1717:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIBlockACLKSource: specifies the SAI Block A clock source.
1718:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1719:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLLI2S: PLLI2S_Q clock divided by PLLI2SDIVQ used 
1720:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block A clock 
1721:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLLSAI: PLLISAI_Q clock divided by PLLSAIDIVQ used 
1722:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block A clock 
1723:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_Ext: External clock mapped on the I2S_CKIN pin
1724:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                                        used as SAI1 Block A clock
1725:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1726:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1727:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_SAIBlockACLKConfig(uint32_t RCC_SAIBlockACLKSource)
1728:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1210              		.loc 1 1728 1 is_stmt 1 view -0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
1729:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1215              		.loc 1 1729 3 view .LVU316
1730:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1731:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1732:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAIACLK_SOURCE(RCC_SAIBlockACLKSource));
 1216              		.loc 1 1732 3 view .LVU317
1733:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1734:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1217              		.loc 1 1734 3 view .LVU318
 1218              		.loc 1 1734 10 is_stmt 0 view .LVU319
 1219 0000 044A     		ldr	r2, .L90
 1220 0002 D2F88C30 		ldr	r3, [r2, #140]
 1221              	.LVL93:
1735:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1736:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear RCC_DCKCFGR_SAI1ASRC[1:0] bits */
1737:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_SAI1ASRC;
 1222              		.loc 1 1737 3 is_stmt 1 view .LVU320
 1223              		.loc 1 1737 10 is_stmt 0 view .LVU321
 1224 0006 23F44013 		bic	r3, r3, #3145728
 1225              	.LVL94:
1738:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1739:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set SAI Block A source selection value */
1740:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SAIBlockACLKSource;
 1226              		.loc 1 1740 3 is_stmt 1 view .LVU322
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 53


 1227              		.loc 1 1740 10 is_stmt 0 view .LVU323
 1228 000a 0343     		orrs	r3, r3, r0
 1229              	.LVL95:
1741:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1742:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
1743:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1230              		.loc 1 1743 3 is_stmt 1 view .LVU324
 1231              		.loc 1 1743 16 is_stmt 0 view .LVU325
 1232 000c C2F88C30 		str	r3, [r2, #140]
1744:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1233              		.loc 1 1744 1 view .LVU326
 1234 0010 7047     		bx	lr
 1235              	.L91:
 1236 0012 00BF     		.align	2
 1237              	.L90:
 1238 0014 00380240 		.word	1073887232
 1239              		.cfi_endproc
 1240              	.LFE149:
 1242              		.section	.text.RCC_SAIBlockBCLKConfig,"ax",%progbits
 1243              		.align	1
 1244              		.global	RCC_SAIBlockBCLKConfig
 1245              		.syntax unified
 1246              		.thumb
 1247              		.thumb_func
 1248              		.fpu fpv4-sp-d16
 1250              	RCC_SAIBlockBCLKConfig:
 1251              	.LVL96:
 1252              	.LFB150:
1745:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1746:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1747:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures SAI1BlockB clock source selection.
1748:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
1749:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/469xx/479xx devices.
1750:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *       
1751:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling PLLSAI, PLLI2S and  
1752:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         the SAI clock.
1753:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIBlockBCLKSource: specifies the SAI Block B clock source.
1754:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1755:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLLI2S: PLLI2S_Q clock divided by PLLI2SDIVQ used 
1756:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block B clock 
1757:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLLSAI: PLLISAI_Q clock divided by PLLSAIDIVQ used 
1758:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block B clock 
1759:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_Ext: External clock mapped on the I2S_CKIN pin
1760:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                                        used as SAI1 Block B clock
1761:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1762:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1763:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_SAIBlockBCLKConfig(uint32_t RCC_SAIBlockBCLKSource)
1764:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1253              		.loc 1 1764 1 is_stmt 1 view -0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 0
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 1257              		@ link register save eliminated.
1765:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1258              		.loc 1 1765 3 view .LVU328
1766:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1767:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 54


1768:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAIBCLK_SOURCE(RCC_SAIBlockBCLKSource));
 1259              		.loc 1 1768 3 view .LVU329
1769:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1770:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1260              		.loc 1 1770 3 view .LVU330
 1261              		.loc 1 1770 10 is_stmt 0 view .LVU331
 1262 0000 044A     		ldr	r2, .L93
 1263 0002 D2F88C30 		ldr	r3, [r2, #140]
 1264              	.LVL97:
1771:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1772:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear RCC_DCKCFGR_SAI1BSRC[1:0] bits */
1773:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_SAI1BSRC;
 1265              		.loc 1 1773 3 is_stmt 1 view .LVU332
 1266              		.loc 1 1773 10 is_stmt 0 view .LVU333
 1267 0006 23F44003 		bic	r3, r3, #12582912
 1268              	.LVL98:
1774:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1775:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set SAI Block B source selection value */
1776:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SAIBlockBCLKSource;
 1269              		.loc 1 1776 3 is_stmt 1 view .LVU334
 1270              		.loc 1 1776 10 is_stmt 0 view .LVU335
 1271 000a 0343     		orrs	r3, r3, r0
 1272              	.LVL99:
1777:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1778:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
1779:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1273              		.loc 1 1779 3 is_stmt 1 view .LVU336
 1274              		.loc 1 1779 16 is_stmt 0 view .LVU337
 1275 000c C2F88C30 		str	r3, [r2, #140]
1780:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1276              		.loc 1 1780 1 view .LVU338
 1277 0010 7047     		bx	lr
 1278              	.L94:
 1279 0012 00BF     		.align	2
 1280              	.L93:
 1281 0014 00380240 		.word	1073887232
 1282              		.cfi_endproc
 1283              	.LFE150:
 1285              		.section	.text.RCC_SAIPLLI2SClkDivConfig,"ax",%progbits
 1286              		.align	1
 1287              		.global	RCC_SAIPLLI2SClkDivConfig
 1288              		.syntax unified
 1289              		.thumb
 1290              		.thumb_func
 1291              		.fpu fpv4-sp-d16
 1293              	RCC_SAIPLLI2SClkDivConfig:
 1294              	.LVL100:
 1295              	.LFB151:
1781:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F469_479xx */
1782:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1783:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1784:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAI clock Divider coming from PLLI2S.
1785:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
1786:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/446xx/469xx/479xx devices.
1787:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
1788:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLI2S.
1789:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *              
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 55


1790:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLI2SDivQ: specifies the PLLI2S division factor for SAI1 clock .
1791:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 1 and 32.
1792:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          SAI1 clock frequency = f(PLLI2S_Q) / RCC_PLLI2SDivQ 
1793:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *              
1794:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1795:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1796:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_SAIPLLI2SClkDivConfig(uint32_t RCC_PLLI2SDivQ)  
1797:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1296              		.loc 1 1797 1 is_stmt 1 view -0
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 0
 1299              		@ frame_needed = 0, uses_anonymous_args = 0
 1300              		@ link register save eliminated.
1798:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1301              		.loc 1 1798 3 view .LVU340
1799:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1800:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1801:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(RCC_PLLI2SDivQ));
 1302              		.loc 1 1801 3 view .LVU341
1802:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1803:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1303              		.loc 1 1803 3 view .LVU342
 1304              		.loc 1 1803 10 is_stmt 0 view .LVU343
 1305 0000 044A     		ldr	r2, .L96
 1306 0002 D2F88C30 		ldr	r3, [r2, #140]
 1307              	.LVL101:
1804:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1805:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear PLLI2SDIVQ[4:0] bits */
1806:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~(RCC_DCKCFGR_PLLI2SDIVQ);
 1308              		.loc 1 1806 3 is_stmt 1 view .LVU344
 1309              		.loc 1 1806 10 is_stmt 0 view .LVU345
 1310 0006 23F01F03 		bic	r3, r3, #31
 1311              	.LVL102:
1807:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1808:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set PLLI2SDIVQ values */
1809:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= (RCC_PLLI2SDivQ - 1);
 1312              		.loc 1 1809 3 is_stmt 1 view .LVU346
 1313              		.loc 1 1809 29 is_stmt 0 view .LVU347
 1314 000a 0138     		subs	r0, r0, #1
 1315              	.LVL103:
 1316              		.loc 1 1809 10 view .LVU348
 1317 000c 1843     		orrs	r0, r0, r3
 1318              	.LVL104:
1810:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1811:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
1812:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1319              		.loc 1 1812 3 is_stmt 1 view .LVU349
 1320              		.loc 1 1812 16 is_stmt 0 view .LVU350
 1321 000e C2F88C00 		str	r0, [r2, #140]
1813:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1322              		.loc 1 1813 1 view .LVU351
 1323 0012 7047     		bx	lr
 1324              	.L97:
 1325              		.align	2
 1326              	.L96:
 1327 0014 00380240 		.word	1073887232
 1328              		.cfi_endproc
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 56


 1329              	.LFE151:
 1331              		.section	.text.RCC_SAIPLLSAIClkDivConfig,"ax",%progbits
 1332              		.align	1
 1333              		.global	RCC_SAIPLLSAIClkDivConfig
 1334              		.syntax unified
 1335              		.thumb
 1336              		.thumb_func
 1337              		.fpu fpv4-sp-d16
 1339              	RCC_SAIPLLSAIClkDivConfig:
 1340              	.LVL105:
 1341              	.LFB152:
1814:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1815:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1816:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAI clock Divider coming from PLLSAI.
1817:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
1818:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/446xx/469xx/479xx devices.
1819:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *        
1820:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLSAI.
1821:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
1822:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSAIDivQ: specifies the PLLSAI division factor for SAI1 clock .
1823:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 1 and 32.
1824:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          SAI1 clock frequency = f(PLLSAI_Q) / RCC_PLLSAIDivQ  
1825:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *              
1826:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1827:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1828:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_SAIPLLSAIClkDivConfig(uint32_t RCC_PLLSAIDivQ)  
1829:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1342              		.loc 1 1829 1 is_stmt 1 view -0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 0
 1345              		@ frame_needed = 0, uses_anonymous_args = 0
 1346              		@ link register save eliminated.
1830:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1347              		.loc 1 1830 3 view .LVU353
1831:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1832:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1833:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(RCC_PLLSAIDivQ));
 1348              		.loc 1 1833 3 view .LVU354
1834:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1835:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1349              		.loc 1 1835 3 view .LVU355
 1350              		.loc 1 1835 10 is_stmt 0 view .LVU356
 1351 0000 054A     		ldr	r2, .L99
 1352 0002 D2F88C30 		ldr	r3, [r2, #140]
 1353              	.LVL106:
1836:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1837:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear PLLI2SDIVQ[4:0] and PLLSAIDIVQ[4:0] bits */
1838:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~(RCC_DCKCFGR_PLLSAIDIVQ);
 1354              		.loc 1 1838 3 is_stmt 1 view .LVU357
 1355              		.loc 1 1838 10 is_stmt 0 view .LVU358
 1356 0006 23F4F853 		bic	r3, r3, #7936
 1357              	.LVL107:
1839:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1840:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set PLLSAIDIVQ values */
1841:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= ((RCC_PLLSAIDivQ - 1) << 8);
 1358              		.loc 1 1841 3 is_stmt 1 view .LVU359
 1359              		.loc 1 1841 30 is_stmt 0 view .LVU360
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 57


 1360 000a 0138     		subs	r0, r0, #1
 1361              	.LVL108:
 1362              		.loc 1 1841 10 view .LVU361
 1363 000c 43EA0023 		orr	r3, r3, r0, lsl #8
 1364              	.LVL109:
1842:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1843:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
1844:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1365              		.loc 1 1844 3 is_stmt 1 view .LVU362
 1366              		.loc 1 1844 16 is_stmt 0 view .LVU363
 1367 0010 C2F88C30 		str	r3, [r2, #140]
1845:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1368              		.loc 1 1845 1 view .LVU364
 1369 0014 7047     		bx	lr
 1370              	.L100:
 1371 0016 00BF     		.align	2
 1372              	.L99:
 1373 0018 00380240 		.word	1073887232
 1374              		.cfi_endproc
 1375              	.LFE152:
 1377              		.section	.text.RCC_LTDCCLKDivConfig,"ax",%progbits
 1378              		.align	1
 1379              		.global	RCC_LTDCCLKDivConfig
 1380              		.syntax unified
 1381              		.thumb
 1382              		.thumb_func
 1383              		.fpu fpv4-sp-d16
 1385              	RCC_LTDCCLKDivConfig:
 1386              	.LVL110:
 1387              	.LFB153:
1846:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1847:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F413_423xx)
1848:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1849:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAI clock Divider coming from PLLI2S.
1850:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
1851:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F413_423xx
1852:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
1853:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param   RCC_PLLI2SDivR: specifies the PLLI2S division factor for SAI1 clock.
1854:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 1 and 32.
1855:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          SAI1 clock frequency = f(PLLI2SR) / RCC_PLLI2SDivR 
1856:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1857:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1858:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_SAIPLLI2SRClkDivConfig(uint32_t RCC_PLLI2SDivR)  
1859:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
1860:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1861:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1862:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1863:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2S_DIVR_VALUE(RCC_PLLI2SDivR));
1864:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1865:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1866:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1867:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear PLLI2SDIVR[4:0] bits */
1868:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~(RCC_DCKCFGR_PLLI2SDIVR);
1869:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1870:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set PLLI2SDIVR values */
1871:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= (RCC_PLLI2SDivR-1);
1872:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 58


1873:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
1874:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1875:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
1876:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1877:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1878:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAI clock Divider coming from PLL.
1879:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
1880:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F413_423xx
1881:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *        
1882:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLSAI.
1883:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
1884:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLDivR: specifies the PLL division factor for SAI1 clock.
1885:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 1 and 32.
1886:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          SAI1 clock frequency = f(PLLR) / RCC_PLLDivR 
1887:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *              
1888:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1889:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1890:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_SAIPLLRClkDivConfig(uint32_t RCC_PLLDivR)  
1891:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
1892:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1893:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1894:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1895:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLL_DIVR_VALUE(RCC_PLLDivR));
1896:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1897:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1898:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1899:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear PLLDIVR[12:8] */
1900:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~(RCC_DCKCFGR_PLLDIVR);
1901:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1902:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set PLLDivR values */
1903:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= ((RCC_PLLDivR - 1 ) << 8);
1904:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1905:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
1906:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1907:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
1908:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F413_423xx */
1909:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1910:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1911:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the LTDC clock Divider coming from PLLSAI.
1912:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
1913:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   The LTDC peripheral is only available with STM32F42xxx/43xxx/446xx/469xx/479xx Devices.
1914:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *      
1915:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLSAI.
1916:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
1917:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSAIDivR: specifies the PLLSAI division factor for LTDC clock .
1918:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          LTDC clock frequency = f(PLLSAI_R) / RCC_PLLSAIDivR  
1919:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1920:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div2: LTDC clock = f(PLLSAI_R)/2
1921:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div4: LTDC clock = f(PLLSAI_R)/4
1922:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div8: LTDC clock = f(PLLSAI_R)/8
1923:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div16: LTDC clock = f(PLLSAI_R)/16
1924:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            
1925:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1926:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1927:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_LTDCCLKDivConfig(uint32_t RCC_PLLSAIDivR)
1928:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1388              		.loc 1 1928 1 is_stmt 1 view -0
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 59


 1389              		.cfi_startproc
 1390              		@ args = 0, pretend = 0, frame = 0
 1391              		@ frame_needed = 0, uses_anonymous_args = 0
 1392              		@ link register save eliminated.
1929:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1393              		.loc 1 1929 3 view .LVU366
1930:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1931:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1932:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAI_DIVR_VALUE(RCC_PLLSAIDivR));
 1394              		.loc 1 1932 3 view .LVU367
1933:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1934:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1395              		.loc 1 1934 3 view .LVU368
 1396              		.loc 1 1934 10 is_stmt 0 view .LVU369
 1397 0000 044A     		ldr	r2, .L102
 1398 0002 D2F88C30 		ldr	r3, [r2, #140]
 1399              	.LVL111:
1935:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1936:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear PLLSAIDIVR[2:0] bits */
1937:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_PLLSAIDIVR;
 1400              		.loc 1 1937 3 is_stmt 1 view .LVU370
 1401              		.loc 1 1937 10 is_stmt 0 view .LVU371
 1402 0006 23F44033 		bic	r3, r3, #196608
 1403              	.LVL112:
1938:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1939:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set PLLSAIDIVR values */
1940:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_PLLSAIDivR;
 1404              		.loc 1 1940 3 is_stmt 1 view .LVU372
 1405              		.loc 1 1940 10 is_stmt 0 view .LVU373
 1406 000a 0343     		orrs	r3, r3, r0
 1407              	.LVL113:
1941:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1942:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
1943:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1408              		.loc 1 1943 3 is_stmt 1 view .LVU374
 1409              		.loc 1 1943 16 is_stmt 0 view .LVU375
 1410 000c C2F88C30 		str	r3, [r2, #140]
1944:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1411              		.loc 1 1944 1 view .LVU376
 1412 0010 7047     		bx	lr
 1413              	.L103:
 1414 0012 00BF     		.align	2
 1415              	.L102:
 1416 0014 00380240 		.word	1073887232
 1417              		.cfi_endproc
 1418              	.LFE153:
 1420              		.section	.text.RCC_TIMCLKPresConfig,"ax",%progbits
 1421              		.align	1
 1422              		.global	RCC_TIMCLKPresConfig
 1423              		.syntax unified
 1424              		.thumb
 1425              		.thumb_func
 1426              		.fpu fpv4-sp-d16
 1428              	RCC_TIMCLKPresConfig:
 1429              	.LVL114:
 1430              	.LFB154:
1945:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 60


1946:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG) || defined(STM32F413_423xx)
1947:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1948:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the DFSDM clock source (DFSDMCLK).
1949:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the DFSDM APB clock.
1950:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_DFSDMCLKSource: specifies the DFSDM clock source.
1951:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1952:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDMCLKSource_APB: APB clock used as DFSDM clock source.
1953:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDMCLKSource_SYS: System clock used as DFSDM clock source.
1954:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                                        
1955:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1956:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1957:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_DFSDM1CLKConfig(uint32_t RCC_DFSDMCLKSource)
1958:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
1959:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1960:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1961:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1962:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_DFSDM1CLK_SOURCE(RCC_DFSDMCLKSource));
1963:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1964:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1965:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1966:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear CKDFSDM-SEL  bit */
1967:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_CKDFSDM1SEL;
1968:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1969:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set CKDFSDM-SEL bit according to RCC_DFSDMCLKSource value */
1970:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= (RCC_DFSDMCLKSource << 31) ;
1971:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1972:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
1973:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
1974:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
1975:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1976:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
1977:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the DFSDM Audio clock source (DFSDMACLK).
1978:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the DFSDM APB clock.
1979:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_DFSDM1ACLKSource: specifies the DFSDM clock source.
1980:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1981:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDM1AUDIOCLKSOURCE_I2SAPB1: APB clock used as DFSDM clock source.
1982:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDM1AUDIOCLKSOURCE_I2SAPB2: System clock used as DFSDM clock source.
1983:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                                        
1984:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
1985:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
1986:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_DFSDM1ACLKConfig(uint32_t RCC_DFSDM1ACLKSource)
1987:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
1988:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
1989:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1990:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1991:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_DFSDMACLK_SOURCE(RCC_DFSDM1ACLKSource));
1992:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
1993:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
1994:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1995:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear CKDFSDMA SEL  bit */
1996:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_CKDFSDM1ASEL;
1997:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
1998:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set CKDFSDM-SEL   bt according to RCC_DFSDMCLKSource value */
1999:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_DFSDM1ACLKSource;
2000:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2001:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
2002:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 61


2003:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
2004:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2005:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F413_423xx)
2006:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2007:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the DFSDM Audio clock source (DFSDMACLK).
2008:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the DFSDM APB clock.
2009:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_DFSDM2ACLKSource: specifies the DFSDM clock source.
2010:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2011:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDM2AUDIOCLKSOURCE_I2SAPB1: APB clock used as DFSDM clock source.
2012:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_DFSDM2AUDIOCLKSOURCE_I2SAPB2: System clock used as DFSDM clock source.
2013:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                                        
2014:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2015:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2016:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_DFSDM2ACLKConfig(uint32_t RCC_DFSDMACLKSource)
2017:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
2018:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
2019:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
2020:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2021:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_DFSDMCLK_SOURCE(RCC_DFSDMACLKSource));
2022:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
2023:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
2024:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2025:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear CKDFSDMA SEL  bit */
2026:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_CKDFSDM1ASEL;
2027:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2028:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set CKDFSDM-SEL   bt according to RCC_DFSDMCLKSource value */
2029:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_DFSDMACLKSource;
2030:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2031:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Store the new value */
2032:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
2033:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
2034:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F413_423xx */
2035:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx */
2036:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2037:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2038:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Configures the Timers clocks prescalers selection.
2039:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * 
2040:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx and STM32F401xx/411xE devices. 
2041:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *   
2042:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_TIMCLKPrescaler : specifies the Timers clocks prescalers selection
2043:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         This parameter can be one of the following values:
2044:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_TIMPrescDesactivated: The Timers kernels clocks prescaler is 
2045:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                 equal to HPRE if PPREx is corresponding to division by 1 or 2, 
2046:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                 else it is equal to [(HPRE * PPREx) / 2] if PPREx is corresponding to 
2047:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                 division by 4 or more.
2048:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                   
2049:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_TIMPrescActivated: The Timers kernels clocks prescaler is 
2050:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                 equal to HPRE if PPREx is corresponding to division by 1, 2 or 4, 
2051:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                 else it is equal to [(HPRE * PPREx) / 4] if PPREx is corresponding 
2052:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *                 to division by 8 or more.
2053:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2054:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2055:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_TIMCLKPresConfig(uint32_t RCC_TIMCLKPrescaler)
2056:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1431              		.loc 1 2056 1 is_stmt 1 view -0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 62


 1434              		@ frame_needed = 0, uses_anonymous_args = 0
 1435              		@ link register save eliminated.
2057:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2058:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_TIMCLK_PRESCALER(RCC_TIMCLKPrescaler));
 1436              		.loc 1 2058 3 view .LVU378
2059:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2060:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) DCKCFGR_TIMPRE_BB = RCC_TIMCLKPrescaler;
 1437              		.loc 1 2060 3 view .LVU379
 1438              		.loc 1 2060 40 is_stmt 0 view .LVU380
 1439 0000 014B     		ldr	r3, .L105
 1440 0002 1860     		str	r0, [r3]
2061:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1441              		.loc 1 2061 1 view .LVU381
 1442 0004 7047     		bx	lr
 1443              	.L106:
 1444 0006 00BF     		.align	2
 1445              	.L105:
 1446 0008 E0114742 		.word	1111953888
 1447              		.cfi_endproc
 1448              	.LFE154:
 1450              		.section	.text.RCC_AHB1PeriphClockCmd,"ax",%progbits
 1451              		.align	1
 1452              		.global	RCC_AHB1PeriphClockCmd
 1453              		.syntax unified
 1454              		.thumb
 1455              		.thumb_func
 1456              		.fpu fpv4-sp-d16
 1458              	RCC_AHB1PeriphClockCmd:
 1459              	.LVL115:
 1460              	.LFB155:
2062:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2063:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2064:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB1 peripheral clock.
2065:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2066:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2067:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         using it.   
2068:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB1 peripheral to gates its clock.
2069:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2070:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:       GPIOA clock
2071:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:       GPIOB clock 
2072:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:       GPIOC clock
2073:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:       GPIOD clock
2074:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:       GPIOE clock
2075:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:       GPIOF clock
2076:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
2077:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
2078:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:       GPIOI clock
2079:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOJ:       GPIOJ clock (STM32F42xxx/43xxx devices) 
2080:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOK:       GPIOK clock (STM32F42xxx/43xxx devices)  
2081:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:         CRC clock
2082:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_BKPSRAM:     BKPSRAM interface clock
2083:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CCMDATARAMEN CCM data RAM interface clock
2084:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:        DMA1 clock
2085:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:        DMA2 clock
2086:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2D:       DMA2D clock (STM32F429xx/439xx devices)  
2087:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC:     Ethernet MAC clock
2088:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Tx:  Ethernet Transmission clock
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 63


2089:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Rx:  Ethernet Reception clock
2090:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_PTP: Ethernet PTP clock
2091:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:      USB OTG HS clock
2092:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS_ULPI: USB OTG HS ULPI clock
2093:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2094:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2095:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2096:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2097:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_AHB1PeriphClockCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
2098:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1461              		.loc 1 2098 1 is_stmt 1 view -0
 1462              		.cfi_startproc
 1463              		@ args = 0, pretend = 0, frame = 0
 1464              		@ frame_needed = 0, uses_anonymous_args = 0
 1465              		@ link register save eliminated.
2099:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2100:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_CLOCK_PERIPH(RCC_AHB1Periph));
 1466              		.loc 1 2100 3 view .LVU383
2101:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2102:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1467              		.loc 1 2102 3 view .LVU384
2103:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1468              		.loc 1 2103 3 view .LVU385
 1469              		.loc 1 2103 6 is_stmt 0 view .LVU386
 1470 0000 21B1     		cbz	r1, .L108
2104:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2105:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB1ENR |= RCC_AHB1Periph;
 1471              		.loc 1 2105 5 is_stmt 1 view .LVU387
 1472              		.loc 1 2105 18 is_stmt 0 view .LVU388
 1473 0002 054A     		ldr	r2, .L110
 1474 0004 136B     		ldr	r3, [r2, #48]
 1475 0006 1843     		orrs	r0, r0, r3
 1476              	.LVL116:
 1477              		.loc 1 2105 18 view .LVU389
 1478 0008 1063     		str	r0, [r2, #48]
 1479 000a 7047     		bx	lr
 1480              	.LVL117:
 1481              	.L108:
2106:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2107:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2108:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2109:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB1ENR &= ~RCC_AHB1Periph;
 1482              		.loc 1 2109 5 is_stmt 1 view .LVU390
 1483              		.loc 1 2109 18 is_stmt 0 view .LVU391
 1484 000c 024A     		ldr	r2, .L110
 1485 000e 136B     		ldr	r3, [r2, #48]
 1486 0010 23EA0000 		bic	r0, r3, r0
 1487              	.LVL118:
 1488              		.loc 1 2109 18 view .LVU392
 1489 0014 1063     		str	r0, [r2, #48]
2110:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2111:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1490              		.loc 1 2111 1 view .LVU393
 1491 0016 7047     		bx	lr
 1492              	.L111:
 1493              		.align	2
 1494              	.L110:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 64


 1495 0018 00380240 		.word	1073887232
 1496              		.cfi_endproc
 1497              	.LFE155:
 1499              		.section	.text.RCC_AHB2PeriphClockCmd,"ax",%progbits
 1500              		.align	1
 1501              		.global	RCC_AHB2PeriphClockCmd
 1502              		.syntax unified
 1503              		.thumb
 1504              		.thumb_func
 1505              		.fpu fpv4-sp-d16
 1507              	RCC_AHB2PeriphClockCmd:
 1508              	.LVL119:
 1509              	.LFB156:
2112:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2113:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2114:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB2 peripheral clock.
2115:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2116:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2117:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         using it. 
2118:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB2 peripheral to gates its clock.
2119:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2120:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
2121:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
2122:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
2123:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock
2124:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock
2125:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2126:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2127:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2128:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2129:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_AHB2PeriphClockCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
2130:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1510              		.loc 1 2130 1 is_stmt 1 view -0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 1514              		@ link register save eliminated.
2131:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2132:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
 1515              		.loc 1 2132 3 view .LVU395
2133:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1516              		.loc 1 2133 3 view .LVU396
2134:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2135:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1517              		.loc 1 2135 3 view .LVU397
 1518              		.loc 1 2135 6 is_stmt 0 view .LVU398
 1519 0000 21B1     		cbz	r1, .L113
2136:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2137:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB2ENR |= RCC_AHB2Periph;
 1520              		.loc 1 2137 5 is_stmt 1 view .LVU399
 1521              		.loc 1 2137 18 is_stmt 0 view .LVU400
 1522 0002 054A     		ldr	r2, .L115
 1523 0004 536B     		ldr	r3, [r2, #52]
 1524 0006 1843     		orrs	r0, r0, r3
 1525              	.LVL120:
 1526              		.loc 1 2137 18 view .LVU401
 1527 0008 5063     		str	r0, [r2, #52]
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 65


 1528 000a 7047     		bx	lr
 1529              	.LVL121:
 1530              	.L113:
2138:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2139:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2140:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2141:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB2ENR &= ~RCC_AHB2Periph;
 1531              		.loc 1 2141 5 is_stmt 1 view .LVU402
 1532              		.loc 1 2141 18 is_stmt 0 view .LVU403
 1533 000c 024A     		ldr	r2, .L115
 1534 000e 536B     		ldr	r3, [r2, #52]
 1535 0010 23EA0000 		bic	r0, r3, r0
 1536              	.LVL122:
 1537              		.loc 1 2141 18 view .LVU404
 1538 0014 5063     		str	r0, [r2, #52]
2142:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2143:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1539              		.loc 1 2143 1 view .LVU405
 1540 0016 7047     		bx	lr
 1541              	.L116:
 1542              		.align	2
 1543              	.L115:
 1544 0018 00380240 		.word	1073887232
 1545              		.cfi_endproc
 1546              	.LFE156:
 1548              		.section	.text.RCC_AHB3PeriphClockCmd,"ax",%progbits
 1549              		.align	1
 1550              		.global	RCC_AHB3PeriphClockCmd
 1551              		.syntax unified
 1552              		.thumb
 1553              		.thumb_func
 1554              		.fpu fpv4-sp-d16
 1556              	RCC_AHB3PeriphClockCmd:
 1557              	.LVL123:
 1558              	.LFB157:
2144:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2145:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F42
2146:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2147:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB3 peripheral clock.
2148:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2149:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2150:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         using it. 
2151:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB3 peripheral to gates its clock.
2152:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be: 
2153:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_FSMC or RCC_AHB3Periph_FMC (STM32F412xG/STM32F413_423xx/STM32F429x/4
2154:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_QSPI (STM32F412xG/STM32F413_423xx/STM32F446xx/STM32F469_479xx device
2155:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2156:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2157:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2158:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2159:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_AHB3PeriphClockCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
2160:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1559              		.loc 1 2160 1 is_stmt 1 view -0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 0
 1562              		@ frame_needed = 0, uses_anonymous_args = 0
 1563              		@ link register save eliminated.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 66


2161:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2162:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));  
 1564              		.loc 1 2162 3 view .LVU407
2163:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1565              		.loc 1 2163 3 view .LVU408
2164:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2165:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1566              		.loc 1 2165 3 view .LVU409
 1567              		.loc 1 2165 6 is_stmt 0 view .LVU410
 1568 0000 21B1     		cbz	r1, .L118
2166:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2167:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB3ENR |= RCC_AHB3Periph;
 1569              		.loc 1 2167 5 is_stmt 1 view .LVU411
 1570              		.loc 1 2167 18 is_stmt 0 view .LVU412
 1571 0002 054A     		ldr	r2, .L120
 1572 0004 936B     		ldr	r3, [r2, #56]
 1573 0006 1843     		orrs	r0, r0, r3
 1574              	.LVL124:
 1575              		.loc 1 2167 18 view .LVU413
 1576 0008 9063     		str	r0, [r2, #56]
 1577 000a 7047     		bx	lr
 1578              	.LVL125:
 1579              	.L118:
2168:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2169:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2170:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2171:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB3ENR &= ~RCC_AHB3Periph;
 1580              		.loc 1 2171 5 is_stmt 1 view .LVU414
 1581              		.loc 1 2171 18 is_stmt 0 view .LVU415
 1582 000c 024A     		ldr	r2, .L120
 1583 000e 936B     		ldr	r3, [r2, #56]
 1584 0010 23EA0000 		bic	r0, r3, r0
 1585              	.LVL126:
 1586              		.loc 1 2171 18 view .LVU416
 1587 0014 9063     		str	r0, [r2, #56]
2172:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2173:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1588              		.loc 1 2173 1 view .LVU417
 1589 0016 7047     		bx	lr
 1590              	.L121:
 1591              		.align	2
 1592              	.L120:
 1593 0018 00380240 		.word	1073887232
 1594              		.cfi_endproc
 1595              	.LFE157:
 1597              		.section	.text.RCC_APB1PeriphClockCmd,"ax",%progbits
 1598              		.align	1
 1599              		.global	RCC_APB1PeriphClockCmd
 1600              		.syntax unified
 1601              		.thumb
 1602              		.thumb_func
 1603              		.fpu fpv4-sp-d16
 1605              	RCC_APB1PeriphClockCmd:
 1606              	.LVL127:
 1607              	.LFB158:
2174:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F412xG || STM32F413_423xx || STM32F427_437xx || STM32F429_439xx ||
2175:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 67


2176:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2177:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
2178:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2179:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2180:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         using it. 
2181:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
2182:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2183:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
2184:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
2185:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
2186:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
2187:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
2188:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
2189:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
2190:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
2191:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
2192:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_LPTIM1: LPTIM1 clock (STM32F410xx and STM32F413_423xx devices) 
2193:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
2194:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
2195:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
2196:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPDIF:  SPDIF RX clock (STM32F446xx devices) 
2197:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
2198:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
2199:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
2200:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
2201:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
2202:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
2203:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
2204:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_FMPI2C1:FMPI2C1 clock
2205:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
2206:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
2207:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CEC:    CEC clock (STM32F446xx devices)
2208:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
2209:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
2210:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART7:  UART7 clock
2211:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART8:  UART8 clock
2212:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2213:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2214:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2215:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2216:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
2217:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1608              		.loc 1 2217 1 is_stmt 1 view -0
 1609              		.cfi_startproc
 1610              		@ args = 0, pretend = 0, frame = 0
 1611              		@ frame_needed = 0, uses_anonymous_args = 0
 1612              		@ link register save eliminated.
2218:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2219:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));  
 1613              		.loc 1 2219 3 view .LVU419
2220:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1614              		.loc 1 2220 3 view .LVU420
2221:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2222:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1615              		.loc 1 2222 3 view .LVU421
 1616              		.loc 1 2222 6 is_stmt 0 view .LVU422
 1617 0000 21B1     		cbz	r1, .L123
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 68


2223:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2224:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 1618              		.loc 1 2224 5 is_stmt 1 view .LVU423
 1619              		.loc 1 2224 18 is_stmt 0 view .LVU424
 1620 0002 054A     		ldr	r2, .L125
 1621 0004 136C     		ldr	r3, [r2, #64]
 1622 0006 1843     		orrs	r0, r0, r3
 1623              	.LVL128:
 1624              		.loc 1 2224 18 view .LVU425
 1625 0008 1064     		str	r0, [r2, #64]
 1626 000a 7047     		bx	lr
 1627              	.LVL129:
 1628              	.L123:
2225:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2226:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2227:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2228:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 1629              		.loc 1 2228 5 is_stmt 1 view .LVU426
 1630              		.loc 1 2228 18 is_stmt 0 view .LVU427
 1631 000c 024A     		ldr	r2, .L125
 1632 000e 136C     		ldr	r3, [r2, #64]
 1633 0010 23EA0000 		bic	r0, r3, r0
 1634              	.LVL130:
 1635              		.loc 1 2228 18 view .LVU428
 1636 0014 1064     		str	r0, [r2, #64]
2229:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2230:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1637              		.loc 1 2230 1 view .LVU429
 1638 0016 7047     		bx	lr
 1639              	.L126:
 1640              		.align	2
 1641              	.L125:
 1642 0018 00380240 		.word	1073887232
 1643              		.cfi_endproc
 1644              	.LFE158:
 1646              		.section	.text.RCC_APB2PeriphClockCmd,"ax",%progbits
 1647              		.align	1
 1648              		.global	RCC_APB2PeriphClockCmd
 1649              		.syntax unified
 1650              		.thumb
 1651              		.thumb_func
 1652              		.fpu fpv4-sp-d16
 1654              	RCC_APB2PeriphClockCmd:
 1655              	.LVL131:
 1656              	.LFB159:
2231:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2232:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2233:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
2234:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2235:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2236:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         using it.
2237:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
2238:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2239:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
2240:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
2241:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
2242:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 69


2243:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
2244:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
2245:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
2246:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
2247:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
2248:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI4:   SPI4 clock
2249:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
2250:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_EXTIT:  EXTIIT clock
2251:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
2252:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
2253:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
2254:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI5:   SPI5 clock
2255:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI6:   SPI6 clock
2256:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI1:   SAI1 clock (STM32F42xxx/43xxx/446xx/469xx/479xx/413_423x
2257:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI2:   SAI2 clock (STM32F446xx devices) 
2258:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_LTDC:   LTDC clock (STM32F429xx/439xx devices)
2259:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DSI:    DSI clock (STM32F469_479xx devices)
2260:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM1: DFSDM Clock (STM32F412xG and STM32F413_423xx Devices)
2261:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM2: DFSDM2 Clock (STM32F413_423xx Devices)
2262:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART9:  UART9 Clock (STM32F413_423xx Devices)
2263:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART10: UART10 Clock (STM32F413_423xx Devices)
2264:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2265:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2266:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2267:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2268:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
2269:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1657              		.loc 1 2269 1 is_stmt 1 view -0
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 0
 1660              		@ frame_needed = 0, uses_anonymous_args = 0
 1661              		@ link register save eliminated.
2270:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2271:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
 1662              		.loc 1 2271 3 view .LVU431
2272:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1663              		.loc 1 2272 3 view .LVU432
2273:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2274:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1664              		.loc 1 2274 3 view .LVU433
 1665              		.loc 1 2274 6 is_stmt 0 view .LVU434
 1666 0000 21B1     		cbz	r1, .L128
2275:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2276:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 1667              		.loc 1 2276 5 is_stmt 1 view .LVU435
 1668              		.loc 1 2276 18 is_stmt 0 view .LVU436
 1669 0002 054A     		ldr	r2, .L130
 1670 0004 536C     		ldr	r3, [r2, #68]
 1671 0006 1843     		orrs	r0, r0, r3
 1672              	.LVL132:
 1673              		.loc 1 2276 18 view .LVU437
 1674 0008 5064     		str	r0, [r2, #68]
 1675 000a 7047     		bx	lr
 1676              	.LVL133:
 1677              	.L128:
2277:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2278:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 70


2279:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2280:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 1678              		.loc 1 2280 5 is_stmt 1 view .LVU438
 1679              		.loc 1 2280 18 is_stmt 0 view .LVU439
 1680 000c 024A     		ldr	r2, .L130
 1681 000e 536C     		ldr	r3, [r2, #68]
 1682 0010 23EA0000 		bic	r0, r3, r0
 1683              	.LVL134:
 1684              		.loc 1 2280 18 view .LVU440
 1685 0014 5064     		str	r0, [r2, #68]
2281:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2282:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1686              		.loc 1 2282 1 view .LVU441
 1687 0016 7047     		bx	lr
 1688              	.L131:
 1689              		.align	2
 1690              	.L130:
 1691 0018 00380240 		.word	1073887232
 1692              		.cfi_endproc
 1693              	.LFE159:
 1695              		.section	.text.RCC_AHB1PeriphResetCmd,"ax",%progbits
 1696              		.align	1
 1697              		.global	RCC_AHB1PeriphResetCmd
 1698              		.syntax unified
 1699              		.thumb
 1700              		.thumb_func
 1701              		.fpu fpv4-sp-d16
 1703              	RCC_AHB1PeriphResetCmd:
 1704              	.LVL135:
 1705              	.LFB160:
2283:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2284:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2285:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases AHB1 peripheral reset.
2286:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB1Periph: specifies the AHB1 peripheral to reset.
2287:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2288:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:   GPIOA clock
2289:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:   GPIOB clock 
2290:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:   GPIOC clock
2291:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:   GPIOD clock
2292:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:   GPIOE clock
2293:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:   GPIOF clock
2294:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:   GPIOG clock
2295:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:   GPIOG clock
2296:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:   GPIOI clock
2297:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOJ:   GPIOJ clock (STM32F42xxx/43xxx devices) 
2298:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOK:   GPIOK clock (STM32F42xxx/43xxxdevices)   
2299:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:     CRC clock
2300:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:    DMA1 clock
2301:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:    DMA2 clock
2302:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2D:   DMA2D clock (STM32F429xx/439xx devices)   
2303:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC: Ethernet MAC clock
2304:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:  USB OTG HS clock
2305:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_RNG:     RNG clock for STM32F410xx devices   
2306:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2307:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2308:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2309:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 71


2310:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_AHB1PeriphResetCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
2311:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1706              		.loc 1 2311 1 is_stmt 1 view -0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 0
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710              		@ link register save eliminated.
2312:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2313:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_RESET_PERIPH(RCC_AHB1Periph));
 1711              		.loc 1 2313 3 view .LVU443
2314:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1712              		.loc 1 2314 3 view .LVU444
2315:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2316:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1713              		.loc 1 2316 3 view .LVU445
 1714              		.loc 1 2316 6 is_stmt 0 view .LVU446
 1715 0000 21B1     		cbz	r1, .L133
2317:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2318:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB1RSTR |= RCC_AHB1Periph;
 1716              		.loc 1 2318 5 is_stmt 1 view .LVU447
 1717              		.loc 1 2318 19 is_stmt 0 view .LVU448
 1718 0002 054A     		ldr	r2, .L135
 1719 0004 1369     		ldr	r3, [r2, #16]
 1720 0006 1843     		orrs	r0, r0, r3
 1721              	.LVL136:
 1722              		.loc 1 2318 19 view .LVU449
 1723 0008 1061     		str	r0, [r2, #16]
 1724 000a 7047     		bx	lr
 1725              	.LVL137:
 1726              	.L133:
2319:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2320:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2321:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2322:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB1RSTR &= ~RCC_AHB1Periph;
 1727              		.loc 1 2322 5 is_stmt 1 view .LVU450
 1728              		.loc 1 2322 19 is_stmt 0 view .LVU451
 1729 000c 024A     		ldr	r2, .L135
 1730 000e 1369     		ldr	r3, [r2, #16]
 1731 0010 23EA0000 		bic	r0, r3, r0
 1732              	.LVL138:
 1733              		.loc 1 2322 19 view .LVU452
 1734 0014 1061     		str	r0, [r2, #16]
2323:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2324:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1735              		.loc 1 2324 1 view .LVU453
 1736 0016 7047     		bx	lr
 1737              	.L136:
 1738              		.align	2
 1739              	.L135:
 1740 0018 00380240 		.word	1073887232
 1741              		.cfi_endproc
 1742              	.LFE160:
 1744              		.section	.text.RCC_AHB2PeriphResetCmd,"ax",%progbits
 1745              		.align	1
 1746              		.global	RCC_AHB2PeriphResetCmd
 1747              		.syntax unified
 1748              		.thumb
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 72


 1749              		.thumb_func
 1750              		.fpu fpv4-sp-d16
 1752              	RCC_AHB2PeriphResetCmd:
 1753              	.LVL139:
 1754              	.LFB161:
2325:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2326:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2327:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases AHB2 peripheral reset.
2328:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB2Periph: specifies the AHB2 peripheral to reset.
2329:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2330:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
2331:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
2332:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
2333:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock for STM32F40_41xxx/STM32F412xG/STM32F413_423xx
2334:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock
2335:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2336:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2337:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2338:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2339:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_AHB2PeriphResetCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
2340:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1755              		.loc 1 2340 1 is_stmt 1 view -0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 0
 1758              		@ frame_needed = 0, uses_anonymous_args = 0
 1759              		@ link register save eliminated.
2341:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2342:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
 1760              		.loc 1 2342 3 view .LVU455
2343:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1761              		.loc 1 2343 3 view .LVU456
2344:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2345:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1762              		.loc 1 2345 3 view .LVU457
 1763              		.loc 1 2345 6 is_stmt 0 view .LVU458
 1764 0000 21B1     		cbz	r1, .L138
2346:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2347:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB2RSTR |= RCC_AHB2Periph;
 1765              		.loc 1 2347 5 is_stmt 1 view .LVU459
 1766              		.loc 1 2347 19 is_stmt 0 view .LVU460
 1767 0002 054A     		ldr	r2, .L140
 1768 0004 5369     		ldr	r3, [r2, #20]
 1769 0006 1843     		orrs	r0, r0, r3
 1770              	.LVL140:
 1771              		.loc 1 2347 19 view .LVU461
 1772 0008 5061     		str	r0, [r2, #20]
 1773 000a 7047     		bx	lr
 1774              	.LVL141:
 1775              	.L138:
2348:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2349:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2350:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2351:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB2RSTR &= ~RCC_AHB2Periph;
 1776              		.loc 1 2351 5 is_stmt 1 view .LVU462
 1777              		.loc 1 2351 19 is_stmt 0 view .LVU463
 1778 000c 024A     		ldr	r2, .L140
 1779 000e 5369     		ldr	r3, [r2, #20]
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 73


 1780 0010 23EA0000 		bic	r0, r3, r0
 1781              	.LVL142:
 1782              		.loc 1 2351 19 view .LVU464
 1783 0014 5061     		str	r0, [r2, #20]
2352:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2353:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1784              		.loc 1 2353 1 view .LVU465
 1785 0016 7047     		bx	lr
 1786              	.L141:
 1787              		.align	2
 1788              	.L140:
 1789 0018 00380240 		.word	1073887232
 1790              		.cfi_endproc
 1791              	.LFE161:
 1793              		.section	.text.RCC_AHB3PeriphResetCmd,"ax",%progbits
 1794              		.align	1
 1795              		.global	RCC_AHB3PeriphResetCmd
 1796              		.syntax unified
 1797              		.thumb
 1798              		.thumb_func
 1799              		.fpu fpv4-sp-d16
 1801              	RCC_AHB3PeriphResetCmd:
 1802              	.LVL143:
 1803              	.LFB162:
2354:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2355:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F42
2356:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2357:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases AHB3 peripheral reset.
2358:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB3Periph: specifies the AHB3 peripheral to reset.
2359:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be: 
2360:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_FSMC or RCC_AHB3Periph_FMC (STM32F412xG, STM32F413_423xx and STM32F4
2361:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_QSPI (STM32F412xG/STM32F446xx/STM32F469_479xx devices)
2362:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2363:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2364:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2365:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2366:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_AHB3PeriphResetCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
2367:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1804              		.loc 1 2367 1 is_stmt 1 view -0
 1805              		.cfi_startproc
 1806              		@ args = 0, pretend = 0, frame = 0
 1807              		@ frame_needed = 0, uses_anonymous_args = 0
 1808              		@ link register save eliminated.
2368:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2369:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));
 1809              		.loc 1 2369 3 view .LVU467
2370:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1810              		.loc 1 2370 3 view .LVU468
2371:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2372:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1811              		.loc 1 2372 3 view .LVU469
 1812              		.loc 1 2372 6 is_stmt 0 view .LVU470
 1813 0000 21B1     		cbz	r1, .L143
2373:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2374:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB3RSTR |= RCC_AHB3Periph;
 1814              		.loc 1 2374 5 is_stmt 1 view .LVU471
 1815              		.loc 1 2374 19 is_stmt 0 view .LVU472
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 74


 1816 0002 054A     		ldr	r2, .L145
 1817 0004 9369     		ldr	r3, [r2, #24]
 1818 0006 1843     		orrs	r0, r0, r3
 1819              	.LVL144:
 1820              		.loc 1 2374 19 view .LVU473
 1821 0008 9061     		str	r0, [r2, #24]
 1822 000a 7047     		bx	lr
 1823              	.LVL145:
 1824              	.L143:
2375:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2376:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2377:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2378:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB3RSTR &= ~RCC_AHB3Periph;
 1825              		.loc 1 2378 5 is_stmt 1 view .LVU474
 1826              		.loc 1 2378 19 is_stmt 0 view .LVU475
 1827 000c 024A     		ldr	r2, .L145
 1828 000e 9369     		ldr	r3, [r2, #24]
 1829 0010 23EA0000 		bic	r0, r3, r0
 1830              	.LVL146:
 1831              		.loc 1 2378 19 view .LVU476
 1832 0014 9061     		str	r0, [r2, #24]
2379:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2380:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1833              		.loc 1 2380 1 view .LVU477
 1834 0016 7047     		bx	lr
 1835              	.L146:
 1836              		.align	2
 1837              	.L145:
 1838 0018 00380240 		.word	1073887232
 1839              		.cfi_endproc
 1840              	.LFE162:
 1842              		.section	.text.RCC_APB1PeriphResetCmd,"ax",%progbits
 1843              		.align	1
 1844              		.global	RCC_APB1PeriphResetCmd
 1845              		.syntax unified
 1846              		.thumb
 1847              		.thumb_func
 1848              		.fpu fpv4-sp-d16
 1850              	RCC_APB1PeriphResetCmd:
 1851              	.LVL147:
 1852              	.LFB163:
2381:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F412xG || STM32F413_423xx || STM32F427_437xx || STM32F429_439xx ||
2382:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2383:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2384:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
2385:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
2386:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2387:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
2388:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
2389:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
2390:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
2391:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
2392:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
2393:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
2394:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
2395:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
2396:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_LPTIM1: LPTIM1 clock (STM32F410xx and STM32F413_423xx devices) 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 75


2397:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
2398:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
2399:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
2400:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPDIF:  SPDIF RX clock (STM32F446xx devices) 
2401:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
2402:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
2403:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
2404:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
2405:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
2406:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
2407:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
2408:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_FMPI2C1:FMPI2C1 clock
2409:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
2410:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
2411:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CEC:    CEC clock(STM32F446xx devices)
2412:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
2413:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
2414:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART7:  UART7 clock
2415:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART8:  UART8 clock  
2416:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2417:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2418:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2419:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2420:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
2421:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1853              		.loc 1 2421 1 is_stmt 1 view -0
 1854              		.cfi_startproc
 1855              		@ args = 0, pretend = 0, frame = 0
 1856              		@ frame_needed = 0, uses_anonymous_args = 0
 1857              		@ link register save eliminated.
2422:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2423:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
 1858              		.loc 1 2423 3 view .LVU479
2424:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1859              		.loc 1 2424 3 view .LVU480
2425:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1860              		.loc 1 2425 3 view .LVU481
 1861              		.loc 1 2425 6 is_stmt 0 view .LVU482
 1862 0000 21B1     		cbz	r1, .L148
2426:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2427:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 1863              		.loc 1 2427 5 is_stmt 1 view .LVU483
 1864              		.loc 1 2427 19 is_stmt 0 view .LVU484
 1865 0002 054A     		ldr	r2, .L150
 1866 0004 136A     		ldr	r3, [r2, #32]
 1867 0006 1843     		orrs	r0, r0, r3
 1868              	.LVL148:
 1869              		.loc 1 2427 19 view .LVU485
 1870 0008 1062     		str	r0, [r2, #32]
 1871 000a 7047     		bx	lr
 1872              	.LVL149:
 1873              	.L148:
2428:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2429:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2430:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2431:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 1874              		.loc 1 2431 5 is_stmt 1 view .LVU486
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 76


 1875              		.loc 1 2431 19 is_stmt 0 view .LVU487
 1876 000c 024A     		ldr	r2, .L150
 1877 000e 136A     		ldr	r3, [r2, #32]
 1878 0010 23EA0000 		bic	r0, r3, r0
 1879              	.LVL150:
 1880              		.loc 1 2431 19 view .LVU488
 1881 0014 1062     		str	r0, [r2, #32]
2432:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2433:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1882              		.loc 1 2433 1 view .LVU489
 1883 0016 7047     		bx	lr
 1884              	.L151:
 1885              		.align	2
 1886              	.L150:
 1887 0018 00380240 		.word	1073887232
 1888              		.cfi_endproc
 1889              	.LFE163:
 1891              		.section	.text.RCC_APB2PeriphResetCmd,"ax",%progbits
 1892              		.align	1
 1893              		.global	RCC_APB2PeriphResetCmd
 1894              		.syntax unified
 1895              		.thumb
 1896              		.thumb_func
 1897              		.fpu fpv4-sp-d16
 1899              	RCC_APB2PeriphResetCmd:
 1900              	.LVL151:
 1901              	.LFB164:
2434:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2435:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2436:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
2437:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
2438:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2439:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
2440:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
2441:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
2442:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
2443:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
2444:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
2445:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
2446:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
2447:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
2448:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI4:   SPI4 clock  
2449:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
2450:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
2451:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
2452:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
2453:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI5:   SPI5 clock
2454:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI6:   SPI6 clock
2455:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI1:   SAI1 clock (STM32F42xxx/43xxx/446xx/469xx/479xx/413_423x
2456:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI2:   SAI2 clock (STM32F446xx devices) 
2457:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_LTDC:   LTDC clock (STM32F429xx/439xx devices)
2458:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DSI:    DSI clock (STM32F469_479xx devices)
2459:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM1: DFSDM Clock (STM32F412xG and STM32F413_423xx Devices)
2460:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM2: DFSDM2 Clock (STM32F413_423xx Devices)
2461:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART9:  UART9 Clock (STM32F413_423xx Devices)
2462:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART10: UART10 Clock (STM32F413_423xx Devices)
2463:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 77


2464:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2465:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2466:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2467:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
2468:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1902              		.loc 1 2468 1 is_stmt 1 view -0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 0
 1905              		@ frame_needed = 0, uses_anonymous_args = 0
 1906              		@ link register save eliminated.
2469:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2470:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB2_RESET_PERIPH(RCC_APB2Periph));
 1907              		.loc 1 2470 3 view .LVU491
2471:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1908              		.loc 1 2471 3 view .LVU492
2472:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1909              		.loc 1 2472 3 view .LVU493
 1910              		.loc 1 2472 6 is_stmt 0 view .LVU494
 1911 0000 21B1     		cbz	r1, .L153
2473:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2474:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 1912              		.loc 1 2474 5 is_stmt 1 view .LVU495
 1913              		.loc 1 2474 19 is_stmt 0 view .LVU496
 1914 0002 054A     		ldr	r2, .L155
 1915 0004 536A     		ldr	r3, [r2, #36]
 1916 0006 1843     		orrs	r0, r0, r3
 1917              	.LVL152:
 1918              		.loc 1 2474 19 view .LVU497
 1919 0008 5062     		str	r0, [r2, #36]
 1920 000a 7047     		bx	lr
 1921              	.LVL153:
 1922              	.L153:
2475:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2476:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2477:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2478:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 1923              		.loc 1 2478 5 is_stmt 1 view .LVU498
 1924              		.loc 1 2478 19 is_stmt 0 view .LVU499
 1925 000c 024A     		ldr	r2, .L155
 1926 000e 536A     		ldr	r3, [r2, #36]
 1927 0010 23EA0000 		bic	r0, r3, r0
 1928              	.LVL154:
 1929              		.loc 1 2478 19 view .LVU500
 1930 0014 5062     		str	r0, [r2, #36]
2479:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2480:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1931              		.loc 1 2480 1 view .LVU501
 1932 0016 7047     		bx	lr
 1933              	.L156:
 1934              		.align	2
 1935              	.L155:
 1936 0018 00380240 		.word	1073887232
 1937              		.cfi_endproc
 1938              	.LFE164:
 1940              		.section	.text.RCC_AHB1PeriphClockLPModeCmd,"ax",%progbits
 1941              		.align	1
 1942              		.global	RCC_AHB1PeriphClockLPModeCmd
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 78


 1943              		.syntax unified
 1944              		.thumb
 1945              		.thumb_func
 1946              		.fpu fpv4-sp-d16
 1948              	RCC_AHB1PeriphClockLPModeCmd:
 1949              	.LVL155:
 1950              	.LFB165:
2481:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2482:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2483:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB1 peripheral clock during Low Power (Sleep) mode.
2484:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2485:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         power consumption.
2486:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2487:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2488:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB1 peripheral to gates its clock.
2489:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2490:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:       GPIOA clock
2491:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:       GPIOB clock 
2492:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:       GPIOC clock
2493:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:       GPIOD clock
2494:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:       GPIOE clock
2495:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:       GPIOF clock
2496:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
2497:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
2498:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:       GPIOI clock
2499:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOJ:       GPIOJ clock (STM32F42xxx/43xxx devices) 
2500:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOK:       GPIOK clock (STM32F42xxx/43xxx devices)   
2501:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:         CRC clock
2502:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_BKPSRAM:     BKPSRAM interface clock
2503:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:        DMA1 clock
2504:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:        DMA2 clock
2505:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2D:       DMA2D clock (STM32F429xx/439xx devices) 
2506:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC:     Ethernet MAC clock
2507:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Tx:  Ethernet Transmission clock
2508:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Rx:  Ethernet Reception clock
2509:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_PTP: Ethernet PTP clock
2510:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:      USB OTG HS clock
2511:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS_ULPI: USB OTG HS ULPI clock
2512:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2513:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2514:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2515:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2516:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_AHB1PeriphClockLPModeCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
2517:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 1951              		.loc 1 2517 1 is_stmt 1 view -0
 1952              		.cfi_startproc
 1953              		@ args = 0, pretend = 0, frame = 0
 1954              		@ frame_needed = 0, uses_anonymous_args = 0
 1955              		@ link register save eliminated.
2518:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2519:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_LPMODE_PERIPH(RCC_AHB1Periph));
 1956              		.loc 1 2519 3 view .LVU503
2520:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1957              		.loc 1 2520 3 view .LVU504
2521:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1958              		.loc 1 2521 3 view .LVU505
 1959              		.loc 1 2521 6 is_stmt 0 view .LVU506
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 79


 1960 0000 21B1     		cbz	r1, .L158
2522:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2523:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB1LPENR |= RCC_AHB1Periph;
 1961              		.loc 1 2523 5 is_stmt 1 view .LVU507
 1962              		.loc 1 2523 20 is_stmt 0 view .LVU508
 1963 0002 054A     		ldr	r2, .L160
 1964 0004 136D     		ldr	r3, [r2, #80]
 1965 0006 1843     		orrs	r0, r0, r3
 1966              	.LVL156:
 1967              		.loc 1 2523 20 view .LVU509
 1968 0008 1065     		str	r0, [r2, #80]
 1969 000a 7047     		bx	lr
 1970              	.LVL157:
 1971              	.L158:
2524:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2525:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2526:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2527:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB1LPENR &= ~RCC_AHB1Periph;
 1972              		.loc 1 2527 5 is_stmt 1 view .LVU510
 1973              		.loc 1 2527 20 is_stmt 0 view .LVU511
 1974 000c 024A     		ldr	r2, .L160
 1975 000e 136D     		ldr	r3, [r2, #80]
 1976 0010 23EA0000 		bic	r0, r3, r0
 1977              	.LVL158:
 1978              		.loc 1 2527 20 view .LVU512
 1979 0014 1065     		str	r0, [r2, #80]
2528:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2529:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 1980              		.loc 1 2529 1 view .LVU513
 1981 0016 7047     		bx	lr
 1982              	.L161:
 1983              		.align	2
 1984              	.L160:
 1985 0018 00380240 		.word	1073887232
 1986              		.cfi_endproc
 1987              	.LFE165:
 1989              		.section	.text.RCC_AHB2PeriphClockLPModeCmd,"ax",%progbits
 1990              		.align	1
 1991              		.global	RCC_AHB2PeriphClockLPModeCmd
 1992              		.syntax unified
 1993              		.thumb
 1994              		.thumb_func
 1995              		.fpu fpv4-sp-d16
 1997              	RCC_AHB2PeriphClockLPModeCmd:
 1998              	.LVL159:
 1999              	.LFB166:
2530:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2531:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2532:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB2 peripheral clock during Low Power (Sleep) mode.
2533:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2534:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           power consumption.
2535:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2536:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2537:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB2 peripheral to gates its clock.
2538:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2539:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
2540:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 80


2541:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
2542:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock
2543:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock  
2544:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2545:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2546:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2547:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2548:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_AHB2PeriphClockLPModeCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
2549:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 2000              		.loc 1 2549 1 is_stmt 1 view -0
 2001              		.cfi_startproc
 2002              		@ args = 0, pretend = 0, frame = 0
 2003              		@ frame_needed = 0, uses_anonymous_args = 0
 2004              		@ link register save eliminated.
2550:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2551:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
 2005              		.loc 1 2551 3 view .LVU515
2552:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2006              		.loc 1 2552 3 view .LVU516
2553:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2007              		.loc 1 2553 3 view .LVU517
 2008              		.loc 1 2553 6 is_stmt 0 view .LVU518
 2009 0000 21B1     		cbz	r1, .L163
2554:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2555:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB2LPENR |= RCC_AHB2Periph;
 2010              		.loc 1 2555 5 is_stmt 1 view .LVU519
 2011              		.loc 1 2555 20 is_stmt 0 view .LVU520
 2012 0002 054A     		ldr	r2, .L165
 2013 0004 536D     		ldr	r3, [r2, #84]
 2014 0006 1843     		orrs	r0, r0, r3
 2015              	.LVL160:
 2016              		.loc 1 2555 20 view .LVU521
 2017 0008 5065     		str	r0, [r2, #84]
 2018 000a 7047     		bx	lr
 2019              	.LVL161:
 2020              	.L163:
2556:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2557:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2558:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2559:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB2LPENR &= ~RCC_AHB2Periph;
 2021              		.loc 1 2559 5 is_stmt 1 view .LVU522
 2022              		.loc 1 2559 20 is_stmt 0 view .LVU523
 2023 000c 024A     		ldr	r2, .L165
 2024 000e 536D     		ldr	r3, [r2, #84]
 2025 0010 23EA0000 		bic	r0, r3, r0
 2026              	.LVL162:
 2027              		.loc 1 2559 20 view .LVU524
 2028 0014 5065     		str	r0, [r2, #84]
2560:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2561:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 2029              		.loc 1 2561 1 view .LVU525
 2030 0016 7047     		bx	lr
 2031              	.L166:
 2032              		.align	2
 2033              	.L165:
 2034 0018 00380240 		.word	1073887232
 2035              		.cfi_endproc
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 81


 2036              	.LFE166:
 2038              		.section	.text.RCC_AHB3PeriphClockLPModeCmd,"ax",%progbits
 2039              		.align	1
 2040              		.global	RCC_AHB3PeriphClockLPModeCmd
 2041              		.syntax unified
 2042              		.thumb
 2043              		.thumb_func
 2044              		.fpu fpv4-sp-d16
 2046              	RCC_AHB3PeriphClockLPModeCmd:
 2047              	.LVL163:
 2048              	.LFB167:
2562:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2563:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F42
2564:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2565:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB3 peripheral clock during Low Power (Sleep) mode.
2566:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2567:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         power consumption.
2568:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2569:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2570:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB3 peripheral to gates its clock.
2571:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter must be: 
2572:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_FSMC or RCC_AHB3Periph_FMC (STM32F412xG/STM32F413_423xx/STM32F429x/4
2573:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_QSPI (STM32F412xG/STM32F413_423xx/STM32F446xx/STM32F469_479xx device
2574:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2575:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2576:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2577:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2578:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_AHB3PeriphClockLPModeCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
2579:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 2049              		.loc 1 2579 1 is_stmt 1 view -0
 2050              		.cfi_startproc
 2051              		@ args = 0, pretend = 0, frame = 0
 2052              		@ frame_needed = 0, uses_anonymous_args = 0
 2053              		@ link register save eliminated.
2580:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2581:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));
 2054              		.loc 1 2581 3 view .LVU527
2582:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2055              		.loc 1 2582 3 view .LVU528
2583:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2056              		.loc 1 2583 3 view .LVU529
 2057              		.loc 1 2583 6 is_stmt 0 view .LVU530
 2058 0000 21B1     		cbz	r1, .L168
2584:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2585:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB3LPENR |= RCC_AHB3Periph;
 2059              		.loc 1 2585 5 is_stmt 1 view .LVU531
 2060              		.loc 1 2585 20 is_stmt 0 view .LVU532
 2061 0002 054A     		ldr	r2, .L170
 2062 0004 936D     		ldr	r3, [r2, #88]
 2063 0006 1843     		orrs	r0, r0, r3
 2064              	.LVL164:
 2065              		.loc 1 2585 20 view .LVU533
 2066 0008 9065     		str	r0, [r2, #88]
 2067 000a 7047     		bx	lr
 2068              	.LVL165:
 2069              	.L168:
2586:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 82


2587:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2588:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2589:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->AHB3LPENR &= ~RCC_AHB3Periph;
 2070              		.loc 1 2589 5 is_stmt 1 view .LVU534
 2071              		.loc 1 2589 20 is_stmt 0 view .LVU535
 2072 000c 024A     		ldr	r2, .L170
 2073 000e 936D     		ldr	r3, [r2, #88]
 2074 0010 23EA0000 		bic	r0, r3, r0
 2075              	.LVL166:
 2076              		.loc 1 2589 20 view .LVU536
 2077 0014 9065     		str	r0, [r2, #88]
2590:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2591:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 2078              		.loc 1 2591 1 view .LVU537
 2079 0016 7047     		bx	lr
 2080              	.L171:
 2081              		.align	2
 2082              	.L170:
 2083 0018 00380240 		.word	1073887232
 2084              		.cfi_endproc
 2085              	.LFE167:
 2087              		.section	.text.RCC_APB1PeriphClockLPModeCmd,"ax",%progbits
 2088              		.align	1
 2089              		.global	RCC_APB1PeriphClockLPModeCmd
 2090              		.syntax unified
 2091              		.thumb
 2092              		.thumb_func
 2093              		.fpu fpv4-sp-d16
 2095              	RCC_APB1PeriphClockLPModeCmd:
 2096              	.LVL167:
 2097              	.LFB168:
2592:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F412xG || STM32F413_423xx || STM32F427_437xx || STM32F429_439xx ||
2593:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2594:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2595:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the APB1 peripheral clock during Low Power (Sleep) mode.
2596:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2597:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         power consumption.
2598:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2599:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2600:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
2601:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2602:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
2603:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
2604:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
2605:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
2606:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
2607:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
2608:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
2609:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
2610:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
2611:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_LPTIM1: LPTIM1 clock (STM32F410xx and STM32F413_423xx devices) 
2612:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
2613:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
2614:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
2615:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPDIF:   SPDIF RX clock (STM32F446xx devices) 
2616:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
2617:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 83


2618:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
2619:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
2620:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
2621:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
2622:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
2623:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_FMPI2C1:   FMPI2C1 clock
2624:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
2625:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
2626:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CEC:    CEC clock (STM32F446xx devices)
2627:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
2628:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
2629:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART7:  UART7 clock
2630:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART8:  UART8 clock
2631:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2632:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2633:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2634:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2635:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_APB1PeriphClockLPModeCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
2636:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 2098              		.loc 1 2636 1 is_stmt 1 view -0
 2099              		.cfi_startproc
 2100              		@ args = 0, pretend = 0, frame = 0
 2101              		@ frame_needed = 0, uses_anonymous_args = 0
 2102              		@ link register save eliminated.
2637:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2638:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
 2103              		.loc 1 2638 3 view .LVU539
2639:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2104              		.loc 1 2639 3 view .LVU540
2640:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2105              		.loc 1 2640 3 view .LVU541
 2106              		.loc 1 2640 6 is_stmt 0 view .LVU542
 2107 0000 21B1     		cbz	r1, .L173
2641:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2642:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->APB1LPENR |= RCC_APB1Periph;
 2108              		.loc 1 2642 5 is_stmt 1 view .LVU543
 2109              		.loc 1 2642 20 is_stmt 0 view .LVU544
 2110 0002 054A     		ldr	r2, .L175
 2111 0004 136E     		ldr	r3, [r2, #96]
 2112 0006 1843     		orrs	r0, r0, r3
 2113              	.LVL168:
 2114              		.loc 1 2642 20 view .LVU545
 2115 0008 1066     		str	r0, [r2, #96]
 2116 000a 7047     		bx	lr
 2117              	.LVL169:
 2118              	.L173:
2643:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2644:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2645:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2646:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->APB1LPENR &= ~RCC_APB1Periph;
 2119              		.loc 1 2646 5 is_stmt 1 view .LVU546
 2120              		.loc 1 2646 20 is_stmt 0 view .LVU547
 2121 000c 024A     		ldr	r2, .L175
 2122 000e 136E     		ldr	r3, [r2, #96]
 2123 0010 23EA0000 		bic	r0, r3, r0
 2124              	.LVL170:
 2125              		.loc 1 2646 20 view .LVU548
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 84


 2126 0014 1066     		str	r0, [r2, #96]
2647:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2648:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 2127              		.loc 1 2648 1 view .LVU549
 2128 0016 7047     		bx	lr
 2129              	.L176:
 2130              		.align	2
 2131              	.L175:
 2132 0018 00380240 		.word	1073887232
 2133              		.cfi_endproc
 2134              	.LFE168:
 2136              		.section	.text.RCC_APB2PeriphClockLPModeCmd,"ax",%progbits
 2137              		.align	1
 2138              		.global	RCC_APB2PeriphClockLPModeCmd
 2139              		.syntax unified
 2140              		.thumb
 2141              		.thumb_func
 2142              		.fpu fpv4-sp-d16
 2144              	RCC_APB2PeriphClockLPModeCmd:
 2145              	.LVL171:
 2146              	.LFB169:
2649:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2650:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2651:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the APB2 peripheral clock during Low Power (Sleep) mode.
2652:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2653:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         power consumption.
2654:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2655:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2656:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
2657:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2658:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
2659:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
2660:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
2661:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
2662:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
2663:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
2664:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
2665:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
2666:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
2667:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI4:   SPI4 clock
2668:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
2669:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_EXTIT:  EXTIIT clock
2670:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
2671:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
2672:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
2673:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI5:   SPI5 clock
2674:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI6:   SPI6 clock
2675:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI1:   SAI1 clock (STM32F42xxx/43xxx/446xx/469xx/479xx/413_423x
2676:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI2:   SAI2 clock (STM32F446xx devices)
2677:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_LTDC:   LTDC clock (STM32F429xx/439xx devices)
2678:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DSI:    DSI clock (STM32F469_479xx devices)
2679:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM1: DFSDM Clock (STM32F412xG and STM32F413_423xx Devices)
2680:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DFSDM2: DFSDM2 Clock (STM32F413_423xx Devices)
2681:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART9:  UART9 Clock (STM32F413_423xx Devices)
2682:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_UART10: UART10 Clock (STM32F413_423xx Devices)
2683:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2684:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 85


2685:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2686:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2687:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_APB2PeriphClockLPModeCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
2688:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 2147              		.loc 1 2688 1 is_stmt 1 view -0
 2148              		.cfi_startproc
 2149              		@ args = 0, pretend = 0, frame = 0
 2150              		@ frame_needed = 0, uses_anonymous_args = 0
 2151              		@ link register save eliminated.
2689:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2690:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
 2152              		.loc 1 2690 3 view .LVU551
2691:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2153              		.loc 1 2691 3 view .LVU552
2692:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2154              		.loc 1 2692 3 view .LVU553
 2155              		.loc 1 2692 6 is_stmt 0 view .LVU554
 2156 0000 21B1     		cbz	r1, .L178
2693:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2694:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->APB2LPENR |= RCC_APB2Periph;
 2157              		.loc 1 2694 5 is_stmt 1 view .LVU555
 2158              		.loc 1 2694 20 is_stmt 0 view .LVU556
 2159 0002 054A     		ldr	r2, .L180
 2160 0004 536E     		ldr	r3, [r2, #100]
 2161 0006 1843     		orrs	r0, r0, r3
 2162              	.LVL172:
 2163              		.loc 1 2694 20 view .LVU557
 2164 0008 5066     		str	r0, [r2, #100]
 2165 000a 7047     		bx	lr
 2166              	.LVL173:
 2167              	.L178:
2695:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2696:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2697:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2698:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->APB2LPENR &= ~RCC_APB2Periph;
 2168              		.loc 1 2698 5 is_stmt 1 view .LVU558
 2169              		.loc 1 2698 20 is_stmt 0 view .LVU559
 2170 000c 024A     		ldr	r2, .L180
 2171 000e 536E     		ldr	r3, [r2, #100]
 2172 0010 23EA0000 		bic	r0, r3, r0
 2173              	.LVL174:
 2174              		.loc 1 2698 20 view .LVU560
 2175 0014 5066     		str	r0, [r2, #100]
2699:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2700:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 2176              		.loc 1 2700 1 view .LVU561
 2177 0016 7047     		bx	lr
 2178              	.L181:
 2179              		.align	2
 2180              	.L180:
 2181 0018 00380240 		.word	1073887232
 2182              		.cfi_endproc
 2183              	.LFE169:
 2185              		.section	.text.RCC_LSEModeConfig,"ax",%progbits
 2186              		.align	1
 2187              		.global	RCC_LSEModeConfig
 2188              		.syntax unified
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 86


 2189              		.thumb
 2190              		.thumb_func
 2191              		.fpu fpv4-sp-d16
 2193              	RCC_LSEModeConfig:
 2194              	.LVL175:
 2195              	.LFB170:
2701:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2702:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2703:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief Configures the External Low Speed oscillator mode (LSE mode).
2704:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note This mode is only available for STM32F410xx/STM32F411xx/STM32F446xx/STM32F469_479xx devic
2705:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  Mode: specifies the LSE mode.
2706:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2707:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_LOWPOWER_MODE:  LSE oscillator in low power mode.
2708:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_HIGHDRIVE_MODE: LSE oscillator in High Drive mode.
2709:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2710:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2711:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_LSEModeConfig(uint8_t RCC_Mode)
2712:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 2196              		.loc 1 2712 1 is_stmt 1 view -0
 2197              		.cfi_startproc
 2198              		@ args = 0, pretend = 0, frame = 0
 2199              		@ frame_needed = 0, uses_anonymous_args = 0
 2200              		@ link register save eliminated.
2713:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2714:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_LSE_MODE(RCC_Mode));
 2201              		.loc 1 2714 3 view .LVU563
2715:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
2716:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if(RCC_Mode == RCC_LSE_HIGHDRIVE_MODE)
 2202              		.loc 1 2716 3 view .LVU564
 2203              		.loc 1 2716 5 is_stmt 0 view .LVU565
 2204 0000 0128     		cmp	r0, #1
 2205 0002 05D0     		beq	.L185
2717:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2718:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->BDCR, RCC_BDCR_LSEMOD);
2719:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2720:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2721:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2722:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEMOD);
 2206              		.loc 1 2722 5 is_stmt 1 view .LVU566
 2207 0004 054A     		ldr	r2, .L186
 2208 0006 136F     		ldr	r3, [r2, #112]
 2209 0008 23F00803 		bic	r3, r3, #8
 2210 000c 1367     		str	r3, [r2, #112]
2723:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2724:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 2211              		.loc 1 2724 1 is_stmt 0 view .LVU567
 2212 000e 7047     		bx	lr
 2213              	.L185:
2718:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 2214              		.loc 1 2718 5 is_stmt 1 view .LVU568
 2215 0010 024A     		ldr	r2, .L186
 2216 0012 136F     		ldr	r3, [r2, #112]
 2217 0014 43F00803 		orr	r3, r3, #8
 2218 0018 1367     		str	r3, [r2, #112]
 2219 001a 7047     		bx	lr
 2220              	.L187:
 2221              		.align	2
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 87


 2222              	.L186:
 2223 001c 00380240 		.word	1073887232
 2224              		.cfi_endproc
 2225              	.LFE170:
 2227              		.section	.text.RCC_ITConfig,"ax",%progbits
 2228              		.align	1
 2229              		.global	RCC_ITConfig
 2230              		.syntax unified
 2231              		.thumb
 2232              		.thumb_func
 2233              		.fpu fpv4-sp-d16
 2235              	RCC_ITConfig:
 2236              	.LVL176:
 2237              	.LFB171:
2725:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2726:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx) || defined(STM32F413_423xx)
2727:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2728:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief Configures the LPTIM1 clock Source.
2729:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F410xx devices.
2730:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the LPTIM1 clock Source.
2731:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2732:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_PCLK: LPTIM1 clock from APB1 selected.
2733:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_HSI:  LPTIM1 clock from HSI selected.
2734:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_LSI:  LPTIM1 clock from LSI selected.
2735:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_LSE:  LPTIM1 clock from LSE selected.
2736:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2737:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2738:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_LPTIM1ClockSourceConfig(uint32_t RCC_ClockSource)
2739:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
2740:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2741:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_LPTIM1_CLOCKSOURCE(RCC_ClockSource));
2742:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2743:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear LPTIM1 clock source selection source bits */
2744:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 &= ~RCC_DCKCFGR2_LPTIM1SEL;
2745:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set new LPTIM1 clock source */
2746:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 |= RCC_ClockSource;
2747:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
2748:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx || STM32F413_423xx */
2749:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2750:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx)
2751:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2752:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief Configures the DSI clock Source.
2753:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F469_479xx devices.
2754:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the DSI clock Source.
2755:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2756:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_DSICLKSource_PHY: DSI-PHY used as DSI byte lane clock source (usual case).
2757:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_DSICLKSource_PLLR: PLL_R used as DSI byte lane clock source, used in case D
2758:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2759:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2760:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_DSIClockSourceConfig(uint8_t RCC_ClockSource)
2761:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
2762:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2763:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_DSI_CLOCKSOURCE(RCC_ClockSource));
2764:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
2765:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_DSICLKSource_PLLR)
2766:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2767:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR, RCC_DCKCFGR_DSISEL);
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 88


2768:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2769:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2770:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2771:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR, RCC_DCKCFGR_DSISEL);
2772:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2773:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
2774:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /*  STM32F469_479xx */
2775:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2776:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx) || defined(STM32F469_4
2777:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2778:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief Configures the 48MHz clock Source.
2779:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx/STM32F469_479xx devices.
2780:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the 48MHz clock Source.
2781:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2782:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_48MHZCLKSource_PLL: 48MHz from PLL selected.
2783:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_48MHZCLKSource_PLLSAI: 48MHz from PLLSAI selected.
2784:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_CK48CLKSOURCE_PLLI2SQ : 48MHz from PLLI2SQ
2785:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2786:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2787:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_48MHzClockSourceConfig(uint8_t RCC_ClockSource)
2788:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
2789:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2790:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_48MHZ_CLOCKSOURCE(RCC_ClockSource));
2791:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx) 
2792:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_48MHZCLKSource_PLLSAI)
2793:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2794:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR, RCC_DCKCFGR_CK48MSEL);
2795:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2796:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2797:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2798:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR, RCC_DCKCFGR_CK48MSEL);
2799:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2800:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #elif  defined(STM32F446xx)
2801:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_48MHZCLKSource_PLLSAI)
2802:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2803:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL);
2804:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2805:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2806:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2807:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL);
2808:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2809:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #elif defined(STM32F412xG) || defined(STM32F413_423xx)
2810:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_CK48CLKSOURCE_PLLI2SQ)
2811:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2812:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL);
2813:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2814:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2815:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2816:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL);
2817:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2818:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #else
2819:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F469_479xx */  
2820:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
2821:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2822:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2823:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief Configures the SDIO clock Source.
2824:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F469_479xx/STM32F446xx devices.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 89


2825:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the SDIO clock Source.
2826:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2827:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SDIOCLKSource_48MHZ: 48MHz clock selected.
2828:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SDIOCLKSource_SYSCLK: system clock selected.
2829:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2830:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2831:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_SDIOClockSourceConfig(uint8_t RCC_ClockSource)
2832:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
2833:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2834:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SDIO_CLOCKSOURCE(RCC_ClockSource));
2835:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx)   
2836:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_SDIOCLKSource_SYSCLK)
2837:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2838:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR, RCC_DCKCFGR_SDIOSEL);
2839:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2840:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2841:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2842:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR, RCC_DCKCFGR_SDIOSEL);
2843:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2844:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #elif defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx)
2845:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_SDIOCLKSource_SYSCLK)
2846:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2847:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SDIOSEL);
2848:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2849:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2850:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2851:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SDIOSEL);
2852:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2853:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #else
2854:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F469_479xx */ 
2855:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
2856:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F412xG || STM32F413_423xx || STM32F446xx || STM32F469_479xx */
2857:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2858:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)
2859:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2860:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB1 clock gating for the specified IPs.
2861:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2862:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB1ClockGating: specifies the AHB1 clock gating.
2863:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2864:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_APB1Bridge: AHB1 to APB1 clock
2865:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_APB2Bridge: AHB1 to APB2 clock 
2866:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_CM4DBG: Cortex M4 ETM clock
2867:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_SPARE: Spare clock
2868:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_SRAM: SRAM controller clock
2869:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_FLITF: Flash interface clock
2870:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_RCC: RCC clock
2871:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2872:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2873:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2874:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2875:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_AHB1ClockGatingCmd(uint32_t RCC_AHB1ClockGating, FunctionalState NewState)
2876:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
2877:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2878:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_CLOCKGATING(RCC_AHB1ClockGating));
2879:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2880:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2881:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 90


2882:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2883:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->CKGATENR &= ~RCC_AHB1ClockGating;
2884:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2885:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2886:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2887:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     RCC->CKGATENR |= RCC_AHB1ClockGating;
2888:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2889:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
2890:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2891:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2892:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief Configures the SPDIFRX clock Source.
2893:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2894:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the SPDIFRX clock Source.
2895:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2896:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SPDIFRXCLKSource_PLLR: SPDIFRX clock from PLL_R selected.
2897:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_SPDIFRXCLKSource_PLLI2SP: SPDIFRX clock from PLLI2S_P selected.
2898:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2899:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2900:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_SPDIFRXClockSourceConfig(uint8_t RCC_ClockSource)
2901:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
2902:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2903:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SPDIFRX_CLOCKSOURCE(RCC_ClockSource));
2904:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
2905:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_SPDIFRXCLKSource_PLLI2SP)
2906:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2907:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SPDIFRXSEL);
2908:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2909:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2910:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2911:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SPDIFRXSEL);
2912:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2913:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
2914:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2915:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2916:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief Configures the CEC clock Source.
2917:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2918:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the CEC clock Source.
2919:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2920:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_CECCLKSource_HSIDiv488: CEC clock from HSI/488 selected.
2921:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_CECCLKSource_LSE: CEC clock from LSE selected.
2922:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2923:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2924:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_CECClockSourceConfig(uint8_t RCC_ClockSource)
2925:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
2926:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2927:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_CEC_CLOCKSOURCE(RCC_ClockSource));
2928:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   
2929:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_CECCLKSource_LSE)
2930:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2931:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CECSEL);
2932:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2933:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
2934:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
2935:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CECSEL);
2936:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
2937:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
2938:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 91


2939:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2940:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx) || defined(STM32F412xG) || defined(STM32F413_423xx) || defined(STM32F446xx
2941:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2942:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief Configures the FMPI2C1 clock Source.
2943:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2944:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the FMPI2C1 clock Source.
2945:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2946:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FMPI2C1CLKSource_APB1: FMPI2C1 clock from APB1 selected.
2947:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FMPI2C1CLKSource_SYSCLK: FMPI2C1 clock from Sytem clock selected.
2948:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FMPI2C1CLKSource_HSI: FMPI2C1 clock from HSI selected.
2949:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2950:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2951:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_FMPI2C1ClockSourceConfig(uint32_t RCC_ClockSource)
2952:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
2953:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2954:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_FMPI2C1_CLOCKSOURCE(RCC_ClockSource));
2955:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2956:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Clear FMPI2C1 clock source selection source bits */
2957:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 &= ~RCC_DCKCFGR2_FMPI2C1SEL;
2958:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set new FMPI2C1 clock source */
2959:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 |= RCC_ClockSource;
2960:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
2961:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx || STM32F412xG || STM32F413_423xx || STM32F446xx */
2962:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2963:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @}
2964:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2965:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2966:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
2967:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2968:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the MCO1.
2969:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the MCO1.
2970:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2971:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2972:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2973:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_MCO1Cmd(FunctionalState NewState)
2974:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
2975:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2976:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2977:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2978:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) RCC_CFGR_MCO1EN_BB = (uint32_t)NewState;
2979:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
2980:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2981:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
2982:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the MCO2.
2983:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the MCO2.
2984:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2985:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
2986:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
2987:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_MCO2Cmd(FunctionalState NewState)
2988:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
2989:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2990:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2991:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
2992:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) RCC_CFGR_MCO2EN_BB = (uint32_t)NewState;
2993:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
2994:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */
2995:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 92


2996:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group4 Interrupts and flags management functions
2997:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  *  @brief   Interrupts and flags management functions 
2998:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  *
2999:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** @verbatim   
3000:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  ===============================================================================
3001:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****                 ##### Interrupts and flags management functions #####
3002:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****  ===============================================================================  
3003:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
3004:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** @endverbatim
3005:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @{
3006:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
3007:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
3008:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
3009:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
3010:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
3011:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
3012:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
3013:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
3014:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
3015:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
3016:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
3017:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt
3018:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLSAIRDY: PLLSAI ready interrupt (only for STM32F42xxx/43xxx/446xx/469x
3019:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
3020:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
3021:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
3022:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
3023:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
3024:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 2238              		.loc 1 3024 1 view -0
 2239              		.cfi_startproc
 2240              		@ args = 0, pretend = 0, frame = 0
 2241              		@ frame_needed = 0, uses_anonymous_args = 0
 2242              		@ link register save eliminated.
3025:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
3026:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 2243              		.loc 1 3026 3 view .LVU570
3027:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2244              		.loc 1 3027 3 view .LVU571
3028:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2245              		.loc 1 3028 3 view .LVU572
 2246              		.loc 1 3028 6 is_stmt 0 view .LVU573
 2247 0000 21B1     		cbz	r1, .L189
3029:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
3030:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* Perform Byte access to RCC_CIR[14:8] bits to enable the selected interrupts */
3031:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 2248              		.loc 1 3031 5 is_stmt 1 view .LVU574
 2249              		.loc 1 3031 41 is_stmt 0 view .LVU575
 2250 0002 054A     		ldr	r2, .L191
 2251 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2252 0006 1843     		orrs	r0, r0, r3
 2253              	.LVL177:
 2254              		.loc 1 3031 41 view .LVU576
 2255 0008 1070     		strb	r0, [r2]
 2256 000a 7047     		bx	lr
 2257              	.LVL178:
 2258              	.L189:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 93


3032:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
3033:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
3034:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
3035:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     /* Perform Byte access to RCC_CIR[14:8] bits to disable the selected interrupts */
3036:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 2259              		.loc 1 3036 5 is_stmt 1 view .LVU577
 2260              		.loc 1 3036 41 is_stmt 0 view .LVU578
 2261 000c 024A     		ldr	r2, .L191
 2262 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2263 0010 23EA0000 		bic	r0, r3, r0
 2264              	.LVL179:
 2265              		.loc 1 3036 41 view .LVU579
 2266 0014 1070     		strb	r0, [r2]
3037:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
3038:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 2267              		.loc 1 3038 1 view .LVU580
 2268 0016 7047     		bx	lr
 2269              	.L192:
 2270              		.align	2
 2271              	.L191:
 2272 0018 0D380240 		.word	1073887245
 2273              		.cfi_endproc
 2274              	.LFE171:
 2276              		.section	.text.RCC_GetFlagStatus,"ax",%progbits
 2277              		.align	1
 2278              		.global	RCC_GetFlagStatus
 2279              		.syntax unified
 2280              		.thumb
 2281              		.thumb_func
 2282              		.fpu fpv4-sp-d16
 2284              	RCC_GetFlagStatus:
 2285              	.LVL180:
 2286              	.LFB172:
3039:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
3040:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
3041:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
3042:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
3043:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
3044:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
3045:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
3046:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PLLRDY: main PLL clock ready
3047:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PLLI2SRDY: PLLI2S clock ready
3048:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PLLSAIRDY: PLLSAI clock ready (only for STM32F42xxx/43xxx/446xx/469xx/
3049:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
3050:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
3051:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_BORRST: POR/PDR or BOR reset
3052:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PINRST: Pin reset
3053:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PORRST: POR/PDR reset
3054:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_SFTRST: Software reset
3055:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
3056:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_WWDGRST: Window Watchdog reset
3057:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_LPWRRST: Low Power reset
3058:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
3059:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
3060:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
3061:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 2287              		.loc 1 3061 1 is_stmt 1 view -0
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 94


 2288              		.cfi_startproc
 2289              		@ args = 0, pretend = 0, frame = 0
 2290              		@ frame_needed = 0, uses_anonymous_args = 0
 2291              		@ link register save eliminated.
3062:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t tmp = 0;
 2292              		.loc 1 3062 3 view .LVU582
3063:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   uint32_t statusreg = 0;
 2293              		.loc 1 3063 3 view .LVU583
3064:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   FlagStatus bitstatus = RESET;
 2294              		.loc 1 3064 3 view .LVU584
3065:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
3066:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
3067:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
 2295              		.loc 1 3067 3 view .LVU585
3068:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
3069:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Get the RCC register index */
3070:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmp = RCC_FLAG >> 5;
 2296              		.loc 1 3070 3 view .LVU586
 2297              		.loc 1 3070 18 is_stmt 0 view .LVU587
 2298 0000 4309     		lsrs	r3, r0, #5
 2299              	.LVL181:
3071:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 2300              		.loc 1 3071 3 is_stmt 1 view .LVU588
 2301              		.loc 1 3071 6 is_stmt 0 view .LVU589
 2302 0002 012B     		cmp	r3, #1
 2303 0004 0CD0     		beq	.L199
3072:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
3073:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     statusreg = RCC->CR;
3074:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
3075:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 2304              		.loc 1 3075 8 is_stmt 1 view .LVU590
 2305              		.loc 1 3075 11 is_stmt 0 view .LVU591
 2306 0006 022B     		cmp	r3, #2
 2307 0008 0DD0     		beq	.L200
3076:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
3077:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     statusreg = RCC->BDCR;
3078:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
3079:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else                       /* The flag to check is in CSR register */
3080:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
3081:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     statusreg = RCC->CSR;
 2308              		.loc 1 3081 5 is_stmt 1 view .LVU592
 2309              		.loc 1 3081 15 is_stmt 0 view .LVU593
 2310 000a 094B     		ldr	r3, .L201
 2311              	.LVL182:
 2312              		.loc 1 3081 15 view .LVU594
 2313 000c 5B6F     		ldr	r3, [r3, #116]
 2314              	.LVL183:
 2315              	.L195:
3082:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
3083:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
3084:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Get the flag position */
3085:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   tmp = RCC_FLAG & FLAG_MASK;
 2316              		.loc 1 3085 3 is_stmt 1 view .LVU595
 2317              		.loc 1 3085 7 is_stmt 0 view .LVU596
 2318 000e 00F01F00 		and	r0, r0, #31
 2319              	.LVL184:
3086:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 95


 2320              		.loc 1 3086 3 is_stmt 1 view .LVU597
 2321              		.loc 1 3086 42 is_stmt 0 view .LVU598
 2322 0012 23FA00F0 		lsr	r0, r3, r0
 2323              	.LVL185:
 2324              		.loc 1 3086 6 view .LVU599
 2325 0016 10F0010F 		tst	r0, #1
 2326 001a 07D0     		beq	.L198
3087:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
3088:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     bitstatus = SET;
 2327              		.loc 1 3088 15 view .LVU600
 2328 001c 0120     		movs	r0, #1
 2329 001e 7047     		bx	lr
 2330              	.LVL186:
 2331              	.L199:
3073:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 2332              		.loc 1 3073 5 is_stmt 1 view .LVU601
3073:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 2333              		.loc 1 3073 15 is_stmt 0 view .LVU602
 2334 0020 034B     		ldr	r3, .L201
 2335              	.LVL187:
3073:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 2336              		.loc 1 3073 15 view .LVU603
 2337 0022 1B68     		ldr	r3, [r3]
 2338              	.LVL188:
3073:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 2339              		.loc 1 3073 15 view .LVU604
 2340 0024 F3E7     		b	.L195
 2341              	.LVL189:
 2342              	.L200:
3077:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 2343              		.loc 1 3077 5 is_stmt 1 view .LVU605
3077:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 2344              		.loc 1 3077 15 is_stmt 0 view .LVU606
 2345 0026 024B     		ldr	r3, .L201
 2346              	.LVL190:
3077:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 2347              		.loc 1 3077 15 view .LVU607
 2348 0028 1B6F     		ldr	r3, [r3, #112]
 2349              	.LVL191:
3077:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 2350              		.loc 1 3077 15 view .LVU608
 2351 002a F0E7     		b	.L195
 2352              	.LVL192:
 2353              	.L198:
3089:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
3090:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
3091:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
3092:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     bitstatus = RESET;
 2354              		.loc 1 3092 15 view .LVU609
 2355 002c 0020     		movs	r0, #0
 2356              	.LVL193:
3093:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
3094:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Return the flag status */
3095:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   return bitstatus;
 2357              		.loc 1 3095 3 is_stmt 1 view .LVU610
3096:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 2358              		.loc 1 3096 1 is_stmt 0 view .LVU611
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 96


 2359 002e 7047     		bx	lr
 2360              	.L202:
 2361              		.align	2
 2362              	.L201:
 2363 0030 00380240 		.word	1073887232
 2364              		.cfi_endproc
 2365              	.LFE172:
 2367              		.section	.text.RCC_WaitForHSEStartUp,"ax",%progbits
 2368              		.align	1
 2369              		.global	RCC_WaitForHSEStartUp
 2370              		.syntax unified
 2371              		.thumb
 2372              		.thumb_func
 2373              		.fpu fpv4-sp-d16
 2375              	RCC_WaitForHSEStartUp:
 2376              	.LFB125:
 302:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   __IO uint32_t startupcounter = 0;
 2377              		.loc 1 302 1 is_stmt 1 view -0
 2378              		.cfi_startproc
 2379              		@ args = 0, pretend = 0, frame = 8
 2380              		@ frame_needed = 0, uses_anonymous_args = 0
 2381 0000 00B5     		push	{lr}
 2382              	.LCFI3:
 2383              		.cfi_def_cfa_offset 4
 2384              		.cfi_offset 14, -4
 2385 0002 83B0     		sub	sp, sp, #12
 2386              	.LCFI4:
 2387              		.cfi_def_cfa_offset 16
 303:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   ErrorStatus status = ERROR;
 2388              		.loc 1 303 3 view .LVU613
 303:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   ErrorStatus status = ERROR;
 2389              		.loc 1 303 17 is_stmt 0 view .LVU614
 2390 0004 0023     		movs	r3, #0
 2391 0006 0193     		str	r3, [sp, #4]
 304:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   FlagStatus hsestatus = RESET;
 2392              		.loc 1 304 3 is_stmt 1 view .LVU615
 2393              	.LVL194:
 305:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 2394              		.loc 1 305 3 view .LVU616
 2395              	.L205:
 307:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
 2396              		.loc 1 307 3 discriminator 2 view .LVU617
 309:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     startupcounter++;
 2397              		.loc 1 309 5 discriminator 2 view .LVU618
 309:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     startupcounter++;
 2398              		.loc 1 309 17 is_stmt 0 discriminator 2 view .LVU619
 2399 0008 3120     		movs	r0, #49
 2400 000a FFF7FEFF 		bl	RCC_GetFlagStatus
 2401              	.LVL195:
 310:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   } while((startupcounter != HSE_STARTUP_TIMEOUT) && (hsestatus == RESET));
 2402              		.loc 1 310 5 is_stmt 1 discriminator 2 view .LVU620
 310:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   } while((startupcounter != HSE_STARTUP_TIMEOUT) && (hsestatus == RESET));
 2403              		.loc 1 310 19 is_stmt 0 discriminator 2 view .LVU621
 2404 000e 019B     		ldr	r3, [sp, #4]
 2405 0010 0133     		adds	r3, r3, #1
 2406 0012 0193     		str	r3, [sp, #4]
 311:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 97


 2407              		.loc 1 311 10 is_stmt 1 discriminator 2 view .LVU622
 311:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 2408              		.loc 1 311 27 is_stmt 0 discriminator 2 view .LVU623
 2409 0014 019B     		ldr	r3, [sp, #4]
 311:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 2410              		.loc 1 311 3 discriminator 2 view .LVU624
 2411 0016 B3F5A04F 		cmp	r3, #20480
 2412 001a 01D0     		beq	.L204
 311:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 2413              		.loc 1 311 51 discriminator 1 view .LVU625
 2414 001c 0028     		cmp	r0, #0
 2415 001e F3D0     		beq	.L205
 2416              	.L204:
 313:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
 2417              		.loc 1 313 3 is_stmt 1 view .LVU626
 313:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
 2418              		.loc 1 313 7 is_stmt 0 view .LVU627
 2419 0020 3120     		movs	r0, #49
 2420              	.LVL196:
 313:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
 2421              		.loc 1 313 7 view .LVU628
 2422 0022 FFF7FEFF 		bl	RCC_GetFlagStatus
 2423              	.LVL197:
 313:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
 2424              		.loc 1 313 6 view .LVU629
 2425 0026 00B1     		cbz	r0, .L206
 315:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
 2426              		.loc 1 315 12 view .LVU630
 2427 0028 0120     		movs	r0, #1
 2428              	.L206:
 2429              	.LVL198:
 321:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 2430              		.loc 1 321 3 is_stmt 1 view .LVU631
 322:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
 2431              		.loc 1 322 1 is_stmt 0 view .LVU632
 2432 002a 03B0     		add	sp, sp, #12
 2433              	.LCFI5:
 2434              		.cfi_def_cfa_offset 4
 2435              		@ sp needed
 2436 002c 5DF804FB 		ldr	pc, [sp], #4
 2437              		.cfi_endproc
 2438              	.LFE125:
 2440              		.section	.text.RCC_ClearFlag,"ax",%progbits
 2441              		.align	1
 2442              		.global	RCC_ClearFlag
 2443              		.syntax unified
 2444              		.thumb
 2445              		.thumb_func
 2446              		.fpu fpv4-sp-d16
 2448              	RCC_ClearFlag:
 2449              	.LFB173:
3097:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
3098:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
3099:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Clears the RCC reset flags.
3100:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST,  RCC_FLAG_SFTRST,
3101:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *         RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
3102:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  None
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 98


3103:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
3104:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
3105:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_ClearFlag(void)
3106:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 2450              		.loc 1 3106 1 is_stmt 1 view -0
 2451              		.cfi_startproc
 2452              		@ args = 0, pretend = 0, frame = 0
 2453              		@ frame_needed = 0, uses_anonymous_args = 0
 2454              		@ link register save eliminated.
3107:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Set RMVF bit to clear the reset flags */
3108:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   RCC->CSR |= RCC_CSR_RMVF;
 2455              		.loc 1 3108 3 view .LVU634
 2456              		.loc 1 3108 12 is_stmt 0 view .LVU635
 2457 0000 024A     		ldr	r2, .L209
 2458 0002 536F     		ldr	r3, [r2, #116]
 2459 0004 43F08073 		orr	r3, r3, #16777216
 2460 0008 5367     		str	r3, [r2, #116]
3109:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 2461              		.loc 1 3109 1 view .LVU636
 2462 000a 7047     		bx	lr
 2463              	.L210:
 2464              		.align	2
 2465              	.L209:
 2466 000c 00380240 		.word	1073887232
 2467              		.cfi_endproc
 2468              	.LFE173:
 2470              		.section	.text.RCC_GetITStatus,"ax",%progbits
 2471              		.align	1
 2472              		.global	RCC_GetITStatus
 2473              		.syntax unified
 2474              		.thumb
 2475              		.thumb_func
 2476              		.fpu fpv4-sp-d16
 2478              	RCC_GetITStatus:
 2479              	.LVL199:
 2480              	.LFB174:
3110:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
3111:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
3112:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
3113:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
3114:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
3115:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
3116:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
3117:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
3118:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
3119:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
3120:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt
3121:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLSAIRDY: PLLSAI clock ready interrupt (only for STM32F42xxx/43xxx/446x
3122:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_CSS: Clock Security System interrupt
3123:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
3124:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
3125:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
3126:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 2481              		.loc 1 3126 1 is_stmt 1 view -0
 2482              		.cfi_startproc
 2483              		@ args = 0, pretend = 0, frame = 0
 2484              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 99


 2485              		@ link register save eliminated.
3127:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   ITStatus bitstatus = RESET;
 2486              		.loc 1 3127 3 view .LVU638
3128:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
3129:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
3130:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
 2487              		.loc 1 3130 3 view .LVU639
3131:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
3132:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the status of the specified RCC interrupt */
3133:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 2488              		.loc 1 3133 3 view .LVU640
 2489              		.loc 1 3133 11 is_stmt 0 view .LVU641
 2490 0000 034B     		ldr	r3, .L214
 2491 0002 DB68     		ldr	r3, [r3, #12]
 2492              		.loc 1 3133 6 view .LVU642
 2493 0004 1842     		tst	r0, r3
 2494 0006 01D0     		beq	.L213
3134:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
3135:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     bitstatus = SET;
 2495              		.loc 1 3135 15 view .LVU643
 2496 0008 0120     		movs	r0, #1
 2497              	.LVL200:
 2498              		.loc 1 3135 15 view .LVU644
 2499 000a 7047     		bx	lr
 2500              	.LVL201:
 2501              	.L213:
3136:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
3137:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   else
3138:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   {
3139:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****     bitstatus = RESET;
 2502              		.loc 1 3139 15 view .LVU645
 2503 000c 0020     		movs	r0, #0
 2504              	.LVL202:
3140:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   }
3141:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Return the RCC_IT status */
3142:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   return  bitstatus;
 2505              		.loc 1 3142 3 is_stmt 1 view .LVU646
3143:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 2506              		.loc 1 3143 1 is_stmt 0 view .LVU647
 2507 000e 7047     		bx	lr
 2508              	.L215:
 2509              		.align	2
 2510              	.L214:
 2511 0010 00380240 		.word	1073887232
 2512              		.cfi_endproc
 2513              	.LFE174:
 2515              		.section	.text.RCC_ClearITPendingBit,"ax",%progbits
 2516              		.align	1
 2517              		.global	RCC_ClearITPendingBit
 2518              		.syntax unified
 2519              		.thumb
 2520              		.thumb_func
 2521              		.fpu fpv4-sp-d16
 2523              	RCC_ClearITPendingBit:
 2524              	.LVL203:
 2525              	.LFB175:
3144:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 100


3145:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** /**
3146:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
3147:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
3148:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
3149:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
3150:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
3151:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
3152:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
3153:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
3154:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt  
3155:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLSAIRDY: PLLSAI ready interrupt (only for STM32F42xxx/43xxx/446xx/469x
3156:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_CSS: Clock Security System interrupt
3157:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   * @retval None
3158:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   */
3159:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
3160:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** {
 2526              		.loc 1 3160 1 is_stmt 1 view -0
 2527              		.cfi_startproc
 2528              		@ args = 0, pretend = 0, frame = 0
 2529              		@ frame_needed = 0, uses_anonymous_args = 0
 2530              		@ link register save eliminated.
3161:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Check the parameters */
3162:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
 2531              		.loc 1 3162 3 view .LVU649
3163:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** 
3164:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
3165:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****      pending bits */
3166:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 2532              		.loc 1 3166 3 view .LVU650
 2533              		.loc 1 3166 39 is_stmt 0 view .LVU651
 2534 0000 014B     		ldr	r3, .L217
 2535 0002 1870     		strb	r0, [r3]
3167:STM32F4xx_LIB/periph/src/stm32f4xx_rcc.c **** }
 2536              		.loc 1 3167 1 view .LVU652
 2537 0004 7047     		bx	lr
 2538              	.L218:
 2539 0006 00BF     		.align	2
 2540              	.L217:
 2541 0008 0E380240 		.word	1073887246
 2542              		.cfi_endproc
 2543              	.LFE175:
 2545              		.section	.data.APBAHBPrescTable,"aw"
 2546              		.align	2
 2547              		.set	.LANCHOR0,. + 0
 2550              	APBAHBPrescTable:
 2551 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
 2551      01020304 
 2551      01020304 
 2551      06
 2552 000d 070809   		.ascii	"\007\010\011"
 2553              		.text
 2554              	.Letext0:
 2555              		.file 2 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\machine\\_default_types.h"
 2556              		.file 3 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 2557              		.file 4 "STM32F4xx_LIB/core/core_cm4.h"
 2558              		.file 5 "User/system_stm32f4xx.h"
 2559              		.file 6 "User/stm32f4xx.h"
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 101


 2560              		.file 7 "STM32F4xx_LIB/periph/inc/stm32f4xx_rcc.h"
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 102


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_rcc.c
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:18     .text.RCC_DeInit:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:26     .text.RCC_DeInit:00000000 RCC_DeInit
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:78     .text.RCC_DeInit:0000003c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:85     .text.RCC_HSEConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:92     .text.RCC_HSEConfig:00000000 RCC_HSEConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:114    .text.RCC_HSEConfig:0000000c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:119    .text.RCC_AdjustHSICalibrationValue:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:126    .text.RCC_AdjustHSICalibrationValue:00000000 RCC_AdjustHSICalibrationValue
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:157    .text.RCC_AdjustHSICalibrationValue:00000010 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:162    .text.RCC_HSICmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:169    .text.RCC_HSICmd:00000000 RCC_HSICmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:187    .text.RCC_HSICmd:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:192    .text.RCC_LSEConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:199    .text.RCC_LSEConfig:00000000 RCC_LSEConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:242    .text.RCC_LSEConfig:00000024 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:247    .text.RCC_LSICmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:254    .text.RCC_LSICmd:00000000 RCC_LSICmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:272    .text.RCC_LSICmd:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:277    .text.RCC_PLLConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:284    .text.RCC_PLLConfig:00000000 RCC_PLLConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:324    .text.RCC_PLLConfig:0000001c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:329    .text.RCC_PLLCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:336    .text.RCC_PLLCmd:00000000 RCC_PLLCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:354    .text.RCC_PLLCmd:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:359    .text.RCC_PLLI2SConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:366    .text.RCC_PLLI2SConfig:00000000 RCC_PLLI2SConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:390    .text.RCC_PLLI2SConfig:00000010 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:395    .text.RCC_PLLI2SCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:402    .text.RCC_PLLI2SCmd:00000000 RCC_PLLI2SCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:420    .text.RCC_PLLI2SCmd:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:425    .text.RCC_PLLSAIConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:432    .text.RCC_PLLSAIConfig:00000000 RCC_PLLSAIConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:459    .text.RCC_PLLSAIConfig:00000014 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:464    .text.RCC_PLLSAICmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:471    .text.RCC_PLLSAICmd:00000000 RCC_PLLSAICmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:489    .text.RCC_PLLSAICmd:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:494    .text.RCC_ClockSecuritySystemCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:501    .text.RCC_ClockSecuritySystemCmd:00000000 RCC_ClockSecuritySystemCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:519    .text.RCC_ClockSecuritySystemCmd:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:524    .text.RCC_MCO1Config:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:531    .text.RCC_MCO1Config:00000000 RCC_MCO1Config
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:566    .text.RCC_MCO1Config:00000010 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:571    .text.RCC_MCO2Config:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:578    .text.RCC_MCO2Config:00000000 RCC_MCO2Config
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:613    .text.RCC_MCO2Config:00000010 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:618    .text.RCC_SYSCLKConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:625    .text.RCC_SYSCLKConfig:00000000 RCC_SYSCLKConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:656    .text.RCC_SYSCLKConfig:00000010 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:661    .text.RCC_GetSYSCLKSource:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:668    .text.RCC_GetSYSCLKSource:00000000 RCC_GetSYSCLKSource
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:685    .text.RCC_GetSYSCLKSource:0000000c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:690    .text.RCC_HCLKConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:697    .text.RCC_HCLKConfig:00000000 RCC_HCLKConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:728    .text.RCC_HCLKConfig:00000010 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:733    .text.RCC_PCLK1Config:00000000 $t
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 103


C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:740    .text.RCC_PCLK1Config:00000000 RCC_PCLK1Config
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:771    .text.RCC_PCLK1Config:00000010 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:776    .text.RCC_PCLK2Config:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:783    .text.RCC_PCLK2Config:00000000 RCC_PCLK2Config
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:814    .text.RCC_PCLK2Config:00000010 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:819    .text.RCC_GetClocksFreq:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:826    .text.RCC_GetClocksFreq:00000000 RCC_GetClocksFreq
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1035   .text.RCC_GetClocksFreq:000000a8 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1043   .text.RCC_RTCCLKConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1050   .text.RCC_RTCCLKConfig:00000000 RCC_RTCCLKConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1105   .text.RCC_RTCCLKConfig:00000030 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1110   .text.RCC_RTCCLKCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1117   .text.RCC_RTCCLKCmd:00000000 RCC_RTCCLKCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1135   .text.RCC_RTCCLKCmd:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1140   .text.RCC_BackupResetCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1147   .text.RCC_BackupResetCmd:00000000 RCC_BackupResetCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1165   .text.RCC_BackupResetCmd:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1170   .text.RCC_I2SCLKConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1177   .text.RCC_I2SCLKConfig:00000000 RCC_I2SCLKConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1195   .text.RCC_I2SCLKConfig:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1200   .text.RCC_SAIBlockACLKConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1207   .text.RCC_SAIBlockACLKConfig:00000000 RCC_SAIBlockACLKConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1238   .text.RCC_SAIBlockACLKConfig:00000014 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1243   .text.RCC_SAIBlockBCLKConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1250   .text.RCC_SAIBlockBCLKConfig:00000000 RCC_SAIBlockBCLKConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1281   .text.RCC_SAIBlockBCLKConfig:00000014 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1286   .text.RCC_SAIPLLI2SClkDivConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1293   .text.RCC_SAIPLLI2SClkDivConfig:00000000 RCC_SAIPLLI2SClkDivConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1327   .text.RCC_SAIPLLI2SClkDivConfig:00000014 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1332   .text.RCC_SAIPLLSAIClkDivConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1339   .text.RCC_SAIPLLSAIClkDivConfig:00000000 RCC_SAIPLLSAIClkDivConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1373   .text.RCC_SAIPLLSAIClkDivConfig:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1378   .text.RCC_LTDCCLKDivConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1385   .text.RCC_LTDCCLKDivConfig:00000000 RCC_LTDCCLKDivConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1416   .text.RCC_LTDCCLKDivConfig:00000014 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1421   .text.RCC_TIMCLKPresConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1428   .text.RCC_TIMCLKPresConfig:00000000 RCC_TIMCLKPresConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1446   .text.RCC_TIMCLKPresConfig:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1451   .text.RCC_AHB1PeriphClockCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1458   .text.RCC_AHB1PeriphClockCmd:00000000 RCC_AHB1PeriphClockCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1495   .text.RCC_AHB1PeriphClockCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1500   .text.RCC_AHB2PeriphClockCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1507   .text.RCC_AHB2PeriphClockCmd:00000000 RCC_AHB2PeriphClockCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1544   .text.RCC_AHB2PeriphClockCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1549   .text.RCC_AHB3PeriphClockCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1556   .text.RCC_AHB3PeriphClockCmd:00000000 RCC_AHB3PeriphClockCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1593   .text.RCC_AHB3PeriphClockCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1598   .text.RCC_APB1PeriphClockCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1605   .text.RCC_APB1PeriphClockCmd:00000000 RCC_APB1PeriphClockCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1642   .text.RCC_APB1PeriphClockCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1647   .text.RCC_APB2PeriphClockCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1654   .text.RCC_APB2PeriphClockCmd:00000000 RCC_APB2PeriphClockCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1691   .text.RCC_APB2PeriphClockCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1696   .text.RCC_AHB1PeriphResetCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1703   .text.RCC_AHB1PeriphResetCmd:00000000 RCC_AHB1PeriphResetCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1740   .text.RCC_AHB1PeriphResetCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1745   .text.RCC_AHB2PeriphResetCmd:00000000 $t
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s 			page 104


C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1752   .text.RCC_AHB2PeriphResetCmd:00000000 RCC_AHB2PeriphResetCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1789   .text.RCC_AHB2PeriphResetCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1794   .text.RCC_AHB3PeriphResetCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1801   .text.RCC_AHB3PeriphResetCmd:00000000 RCC_AHB3PeriphResetCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1838   .text.RCC_AHB3PeriphResetCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1843   .text.RCC_APB1PeriphResetCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1850   .text.RCC_APB1PeriphResetCmd:00000000 RCC_APB1PeriphResetCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1887   .text.RCC_APB1PeriphResetCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1892   .text.RCC_APB2PeriphResetCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1899   .text.RCC_APB2PeriphResetCmd:00000000 RCC_APB2PeriphResetCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1936   .text.RCC_APB2PeriphResetCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1941   .text.RCC_AHB1PeriphClockLPModeCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1948   .text.RCC_AHB1PeriphClockLPModeCmd:00000000 RCC_AHB1PeriphClockLPModeCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1985   .text.RCC_AHB1PeriphClockLPModeCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1990   .text.RCC_AHB2PeriphClockLPModeCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:1997   .text.RCC_AHB2PeriphClockLPModeCmd:00000000 RCC_AHB2PeriphClockLPModeCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2034   .text.RCC_AHB2PeriphClockLPModeCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2039   .text.RCC_AHB3PeriphClockLPModeCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2046   .text.RCC_AHB3PeriphClockLPModeCmd:00000000 RCC_AHB3PeriphClockLPModeCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2083   .text.RCC_AHB3PeriphClockLPModeCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2088   .text.RCC_APB1PeriphClockLPModeCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2095   .text.RCC_APB1PeriphClockLPModeCmd:00000000 RCC_APB1PeriphClockLPModeCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2132   .text.RCC_APB1PeriphClockLPModeCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2137   .text.RCC_APB2PeriphClockLPModeCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2144   .text.RCC_APB2PeriphClockLPModeCmd:00000000 RCC_APB2PeriphClockLPModeCmd
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2181   .text.RCC_APB2PeriphClockLPModeCmd:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2186   .text.RCC_LSEModeConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2193   .text.RCC_LSEModeConfig:00000000 RCC_LSEModeConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2223   .text.RCC_LSEModeConfig:0000001c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2228   .text.RCC_ITConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2235   .text.RCC_ITConfig:00000000 RCC_ITConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2272   .text.RCC_ITConfig:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2277   .text.RCC_GetFlagStatus:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2284   .text.RCC_GetFlagStatus:00000000 RCC_GetFlagStatus
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2363   .text.RCC_GetFlagStatus:00000030 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2368   .text.RCC_WaitForHSEStartUp:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2375   .text.RCC_WaitForHSEStartUp:00000000 RCC_WaitForHSEStartUp
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2441   .text.RCC_ClearFlag:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2448   .text.RCC_ClearFlag:00000000 RCC_ClearFlag
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2466   .text.RCC_ClearFlag:0000000c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2471   .text.RCC_GetITStatus:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2478   .text.RCC_GetITStatus:00000000 RCC_GetITStatus
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2511   .text.RCC_GetITStatus:00000010 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2516   .text.RCC_ClearITPendingBit:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2523   .text.RCC_ClearITPendingBit:00000000 RCC_ClearITPendingBit
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2541   .text.RCC_ClearITPendingBit:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2546   .data.APBAHBPrescTable:00000000 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cc6HlEkT.s:2550   .data.APBAHBPrescTable:00000000 APBAHBPrescTable

NO UNDEFINED SYMBOLS
