ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HASH_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HASH_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HASH_DeInit:
  27              	.LFB123:
  28              		.file 1 "STM32F4xx_LIB/periph/src/stm32f4xx_hash.c"
   1:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
   2:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   ******************************************************************************
   3:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @file    stm32f4xx_hash.c
   4:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @author  MCD Application Team
   5:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @version V1.8.1
   6:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @date    27-January-2022
   7:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief   This file provides firmware functions to manage the following 
   8:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *          functionalities of the HASH / HMAC Processor (HASH) peripheral:           
   9:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *           - Initialization and Configuration functions
  10:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *           - Message Digest generation functions
  11:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *           - context swapping functions   
  12:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *           - DMA interface function       
  13:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *           - Interrupts and flags management       
  14:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         
  15:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** @verbatim
  16:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ===================================================================      
  17:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                  ##### How to use this driver #####
  18:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ===================================================================
  19:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****             
  20:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *** HASH operation : *** 
  21:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ========================                 
  22:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..]
  23:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) Enable the HASH controller clock using 
  24:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_HASH, ENABLE) function.
  25:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****              
  26:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) Initialize the HASH using HASH_Init() function. 
  27:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                  
  28:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) Reset the HASH processor core, so that the HASH will be ready 
  29:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        to compute he message digest of a new message by using HASH_Reset() function.
  30:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 2


  31:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) Enable the HASH controller using the HASH_Cmd() function. 
  32:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                   
  33:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) if using DMA for Data input transfer, Activate the DMA Request 
  34:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        using HASH_DMACmd() function 
  35:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                       
  36:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) if DMA is not used for data transfer, use HASH_DataIn() function 
  37:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        to enter data to IN FIFO.
  38:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                
  39:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****             
  40:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) Configure the Number of valid bits in last word of the message 
  41:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        using HASH_SetLastWordValidBitsNbr() function.
  42:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                
  43:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) if the message length is not an exact multiple of 512 bits, 
  44:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        then the function HASH_StartDigest() must be called to launch the computation
  45:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        of the final digest.     
  46:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                
  47:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) Once computed, the digest can be read using HASH_GetDigest() function.         
  48:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                      
  49:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) To control HASH events you can use one of the following wo methods:
  50:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        (++) Check on HASH flags using the HASH_GetFlagStatus() function.  
  51:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        (++) Use HASH interrupts through the function HASH_ITConfig() at 
  52:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****             initialization phase and HASH_GetITStatus() function into 
  53:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****             interrupt routines in hashing phase.
  54:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****             After checking on a flag you should clear it using HASH_ClearFlag()
  55:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****             function. And after checking on an interrupt event you should 
  56:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****             clear it using HASH_ClearITPendingBit() function.     
  57:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                        
  58:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) Save and restore hash processor context using 
  59:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        HASH_SaveContext() and HASH_RestoreContext() functions.     
  60:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                 
  61:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
  62:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****               
  63:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *** HMAC operation : *** 
  64:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ========================
  65:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..] The HMAC algorithm is used for message authentication, by 
  66:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       irreversibly binding the message being processed to a key chosen 
  67:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       by the user. 
  68:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       For HMAC specifications, refer to "HMAC: keyed-hashing for message 
  69:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       authentication, H. Krawczyk, M. Bellare, R. Canetti, February 1997"
  70:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****             
  71:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..] Basically, the HMAC algorithm consists of two nested hash operations:
  72:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       HMAC(message) = Hash[((key | pad) XOR 0x5C) | Hash(((key | pad) XOR 0x36) | message)]
  73:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       where:
  74:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       (+) "pad" is a sequence of zeroes needed to extend the key to the 
  75:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****           length of the underlying hash function data block (that is 
  76:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****           512 bits for both the SHA-1 and MD5 hash algorithms)
  77:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       (+) "|"   represents the concatenation operator 
  78:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****             
  79:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****            
  80:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..]To compute the HMAC, four different phases are required:                  
  81:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) Initialize the HASH using HASH_Init() function to do HMAC 
  82:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        operation. 
  83:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                   
  84:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) The key (to be used for the inner hash function) is then given to the core. 
  85:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        This operation follows the same mechanism as the one used to send the 
  86:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        message in the hash operation (that is, by HASH_DataIn() function and, 
  87:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        finally, HASH_StartDigest() function.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 3


  88:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****             
  89:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) Once the last word has been entered and computation has started, 
  90:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        the hash processor elaborates the key. It is then ready to accept the message
  91:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        text using the same mechanism as the one used to send the message in the
  92:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        hash operation.
  93:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****          
  94:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) After the first hash round, the hash processor returns "ready" to indicate 
  95:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        that it is ready to receive the key to be used for the outer hash function 
  96:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        (normally, this key is the same as the one used for the inner hash function). 
  97:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        When the last word of the key is entered and computation starts, the HMAC 
  98:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        result is made available using HASH_GetDigest() function.
  99:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 100:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** @endverbatim
 101:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         
 102:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   ******************************************************************************
 103:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @attention
 104:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *
 105:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * Copyright (c) 2016 STMicroelectronics.
 106:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * All rights reserved.
 107:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *
 108:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * This software is licensed under terms that can be found in the LICENSE file
 109:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * in the root directory of this software component.
 110:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
 111:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *
 112:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   ******************************************************************************
 113:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 114:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 115:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /* Includes ------------------------------------------------------------------*/
 116:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** #include "stm32f4xx_hash.h"
 117:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** #include "stm32f4xx_rcc.h"
 118:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 119:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 120:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @{
 121:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 122:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 123:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /** @defgroup HASH 
 124:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief HASH driver modules
 125:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @{
 126:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */ 
 127:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 128:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /* Private typedef -----------------------------------------------------------*/
 129:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /* Private define ------------------------------------------------------------*/
 130:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /* Private macro -------------------------------------------------------------*/
 131:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /* Private variables ---------------------------------------------------------*/
 132:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /* Private function prototypes -----------------------------------------------*/
 133:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /* Private functions ---------------------------------------------------------*/ 
 134:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 135:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /** @defgroup HASH_Private_Functions
 136:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @{
 137:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */ 
 138:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 139:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group1 Initialization and Configuration functions
 140:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *  @brief    Initialization and Configuration functions 
 141:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *
 142:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** @verbatim    
 143:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ===============================================================================
 144:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****               ##### Initialization and Configuration functions #####
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 4


 145:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ===============================================================================  
 146:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..] This section provides functions allowing to 
 147:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (+) Initialize the HASH peripheral
 148:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (+) Configure the HASH Processor 
 149:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (+) MD5/SHA1, 
 150:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (+) HASH/HMAC, 
 151:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (+) datatype 
 152:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (+) HMAC Key (if mode = HMAC)
 153:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (+) Reset the HASH Processor 
 154:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    
 155:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** @endverbatim
 156:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @{
 157:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 158:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 159:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 160:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  De-initializes the HASH peripheral registers to their default reset values
 161:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  None
 162:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 163:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 164:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_DeInit(void)
 165:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
  29              		.loc 1 165 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 166:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Enable HASH reset state */
 167:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_HASH, ENABLE);
  38              		.loc 1 167 3 view .LVU1
  39 0002 0121     		movs	r1, #1
  40 0004 2020     		movs	r0, #32
  41 0006 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
  42              	.LVL0:
 168:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Release HASH from reset state */
 169:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_HASH, DISABLE);
  43              		.loc 1 169 3 view .LVU2
  44 000a 0021     		movs	r1, #0
  45 000c 2020     		movs	r0, #32
  46 000e FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
  47              	.LVL1:
 170:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
  48              		.loc 1 170 1 is_stmt 0 view .LVU3
  49 0012 08BD     		pop	{r3, pc}
  50              		.cfi_endproc
  51              	.LFE123:
  53              		.section	.text.HASH_Init,"ax",%progbits
  54              		.align	1
  55              		.global	HASH_Init
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	HASH_Init:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 5


  62              	.LVL2:
  63              	.LFB124:
 171:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 172:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 173:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Initializes the HASH peripheral according to the specified parameters
 174:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         in the HASH_InitStruct structure.
 175:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @note   the hash processor is reset when calling this function so that the
 176:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         HASH will be ready to compute the message digest of a new message.
 177:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         There is no need to call HASH_Reset() function.           
 178:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  HASH_InitStruct: pointer to a HASH_InitTypeDef structure that contains
 179:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         the configuration information for the HASH peripheral.
 180:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @note   The field HASH_HMACKeyType in HASH_InitTypeDef must be filled only 
 181:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *          if the algorithm mode is HMAC.       
 182:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 183:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 184:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_Init(HASH_InitTypeDef* HASH_InitStruct)
 185:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
  64              		.loc 1 185 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69              		.loc 1 185 1 is_stmt 0 view .LVU5
  70 0000 10B4     		push	{r4}
  71              	.LCFI1:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 4, -4
 186:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Check the parameters */
 187:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_ALGOSELECTION(HASH_InitStruct->HASH_AlgoSelection));
  74              		.loc 1 187 3 is_stmt 1 view .LVU6
 188:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_DATATYPE(HASH_InitStruct->HASH_DataType));
  75              		.loc 1 188 3 view .LVU7
 189:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_ALGOMODE(HASH_InitStruct->HASH_AlgoMode));
  76              		.loc 1 189 3 view .LVU8
 190:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 191:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Configure the Algorithm used, algorithm mode and the datatype */
 192:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->CR &= ~ (HASH_CR_ALGO | HASH_CR_DATATYPE | HASH_CR_MODE);
  77              		.loc 1 192 3 view .LVU9
  78              		.loc 1 192 12 is_stmt 0 view .LVU10
  79 0002 124A     		ldr	r2, .L7
  80 0004 1368     		ldr	r3, [r2]
  81 0006 23F48023 		bic	r3, r3, #262144
  82 000a 23F0F003 		bic	r3, r3, #240
  83 000e 1360     		str	r3, [r2]
 193:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
  84              		.loc 1 193 3 is_stmt 1 view .LVU11
  85              		.loc 1 193 12 is_stmt 0 view .LVU12
  86 0010 1168     		ldr	r1, [r2]
  87              		.loc 1 193 31 view .LVU13
  88 0012 0368     		ldr	r3, [r0]
 194:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_DataType | \
  89              		.loc 1 194 31 view .LVU14
  90 0014 8468     		ldr	r4, [r0, #8]
 193:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
  91              		.loc 1 193 52 view .LVU15
  92 0016 2343     		orrs	r3, r3, r4
 195:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_AlgoMode);
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 6


  93              		.loc 1 195 31 view .LVU16
  94 0018 4468     		ldr	r4, [r0, #4]
 194:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_DataType | \
  95              		.loc 1 194 47 view .LVU17
  96 001a 2343     		orrs	r3, r3, r4
 193:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
  97              		.loc 1 193 12 view .LVU18
  98 001c 0B43     		orrs	r3, r3, r1
  99 001e 1360     		str	r3, [r2]
 196:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 197:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* if algorithm mode is HMAC, set the Key */  
 198:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   if(HASH_InitStruct->HASH_AlgoMode == HASH_AlgoMode_HMAC) 
 100              		.loc 1 198 3 is_stmt 1 view .LVU19
 101              		.loc 1 198 21 is_stmt 0 view .LVU20
 102 0020 4368     		ldr	r3, [r0, #4]
 103              		.loc 1 198 5 view .LVU21
 104 0022 402B     		cmp	r3, #64
 105 0024 07D0     		beq	.L6
 106              	.L4:
 199:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 200:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     assert_param(IS_HASH_HMAC_KEYTYPE(HASH_InitStruct->HASH_HMACKeyType));
 201:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_LKEY;
 202:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     HASH->CR |= HASH_InitStruct->HASH_HMACKeyType;
 203:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 204:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 205:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Reset the HASH processor core, so that the HASH will be ready to compute 
 206:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****      the message digest of a new message */
 207:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT;  
 107              		.loc 1 207 3 is_stmt 1 view .LVU22
 108              		.loc 1 207 12 is_stmt 0 view .LVU23
 109 0026 094A     		ldr	r2, .L7
 110 0028 1368     		ldr	r3, [r2]
 111 002a 43F00403 		orr	r3, r3, #4
 112 002e 1360     		str	r3, [r2]
 208:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 113              		.loc 1 208 1 view .LVU24
 114 0030 5DF8044B 		ldr	r4, [sp], #4
 115              	.LCFI2:
 116              		.cfi_remember_state
 117              		.cfi_restore 4
 118              		.cfi_def_cfa_offset 0
 119 0034 7047     		bx	lr
 120              	.L6:
 121              	.LCFI3:
 122              		.cfi_restore_state
 200:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_LKEY;
 123              		.loc 1 200 5 is_stmt 1 view .LVU25
 201:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     HASH->CR |= HASH_InitStruct->HASH_HMACKeyType;
 124              		.loc 1 201 5 view .LVU26
 201:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     HASH->CR |= HASH_InitStruct->HASH_HMACKeyType;
 125              		.loc 1 201 14 is_stmt 0 view .LVU27
 126 0036 1346     		mov	r3, r2
 127 0038 1268     		ldr	r2, [r2]
 128 003a 22F48032 		bic	r2, r2, #65536
 129 003e 1A60     		str	r2, [r3]
 202:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 130              		.loc 1 202 5 is_stmt 1 view .LVU28
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 7


 202:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 131              		.loc 1 202 14 is_stmt 0 view .LVU29
 132 0040 1A68     		ldr	r2, [r3]
 202:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 133              		.loc 1 202 32 view .LVU30
 134 0042 C168     		ldr	r1, [r0, #12]
 202:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 135              		.loc 1 202 14 view .LVU31
 136 0044 0A43     		orrs	r2, r2, r1
 137 0046 1A60     		str	r2, [r3]
 138 0048 EDE7     		b	.L4
 139              	.L8:
 140 004a 00BF     		.align	2
 141              	.L7:
 142 004c 00040650 		.word	1342571520
 143              		.cfi_endproc
 144              	.LFE124:
 146              		.section	.text.HASH_StructInit,"ax",%progbits
 147              		.align	1
 148              		.global	HASH_StructInit
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu fpv4-sp-d16
 154              	HASH_StructInit:
 155              	.LVL3:
 156              	.LFB125:
 209:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 210:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 211:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Fills each HASH_InitStruct member with its default value.
 212:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  HASH_InitStruct : pointer to a HASH_InitTypeDef structure which will
 213:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *          be initialized.  
 214:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *  @note  The default values set are : Processor mode is HASH, Algorithm selected is SHA1,
 215:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *          Data type selected is 32b and HMAC Key Type is short key.  
 216:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 217:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 218:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_StructInit(HASH_InitTypeDef* HASH_InitStruct)
 219:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 157              		.loc 1 219 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 220:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Initialize the HASH_AlgoSelection member */
 221:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
 162              		.loc 1 221 3 view .LVU33
 163              		.loc 1 221 39 is_stmt 0 view .LVU34
 164 0000 0023     		movs	r3, #0
 165 0002 0360     		str	r3, [r0]
 222:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 223:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Initialize the HASH_AlgoMode member */
 224:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_AlgoMode = HASH_AlgoMode_HASH;
 166              		.loc 1 224 3 is_stmt 1 view .LVU35
 167              		.loc 1 224 34 is_stmt 0 view .LVU36
 168 0004 4360     		str	r3, [r0, #4]
 225:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 226:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Initialize the HASH_DataType member */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 8


 227:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_DataType = HASH_DataType_32b;
 169              		.loc 1 227 3 is_stmt 1 view .LVU37
 170              		.loc 1 227 34 is_stmt 0 view .LVU38
 171 0006 8360     		str	r3, [r0, #8]
 228:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 229:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Initialize the HASH_HMACKeyType member */
 230:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
 172              		.loc 1 230 3 is_stmt 1 view .LVU39
 173              		.loc 1 230 37 is_stmt 0 view .LVU40
 174 0008 C360     		str	r3, [r0, #12]
 231:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 175              		.loc 1 231 1 view .LVU41
 176 000a 7047     		bx	lr
 177              		.cfi_endproc
 178              	.LFE125:
 180              		.section	.text.HASH_Reset,"ax",%progbits
 181              		.align	1
 182              		.global	HASH_Reset
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv4-sp-d16
 188              	HASH_Reset:
 189              	.LFB126:
 232:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 233:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 234:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Resets the HASH processor core, so that the HASH will be ready
 235:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         to compute the message digest of a new message.
 236:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @note   Calling this function will clear the HASH_SR_DCIS (Digest calculation 
 237:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         completion interrupt status) bit corresponding to HASH_IT_DCI 
 238:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         interrupt and HASH_FLAG_DCIS flag. 
 239:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  None
 240:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 241:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 242:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_Reset(void)
 243:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 190              		.loc 1 243 1 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 244:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Reset the HASH processor core */
 245:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT;
 195              		.loc 1 245 3 view .LVU43
 196              		.loc 1 245 12 is_stmt 0 view .LVU44
 197 0000 024A     		ldr	r2, .L11
 198 0002 1368     		ldr	r3, [r2]
 199 0004 43F00403 		orr	r3, r3, #4
 200 0008 1360     		str	r3, [r2]
 246:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 201              		.loc 1 246 1 view .LVU45
 202 000a 7047     		bx	lr
 203              	.L12:
 204              		.align	2
 205              	.L11:
 206 000c 00040650 		.word	1342571520
 207              		.cfi_endproc
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 9


 208              	.LFE126:
 210              		.section	.text.HASH_SetLastWordValidBitsNbr,"ax",%progbits
 211              		.align	1
 212              		.global	HASH_SetLastWordValidBitsNbr
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv4-sp-d16
 218              	HASH_SetLastWordValidBitsNbr:
 219              	.LVL4:
 220              	.LFB127:
 247:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 248:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @}
 249:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 250:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  
 251:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group2 Message Digest generation functions
 252:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *  @brief    Message Digest generation functions
 253:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *
 254:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** @verbatim    
 255:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ===============================================================================
 256:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                   ##### Message Digest generation functions #####
 257:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ===============================================================================  
 258:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..] This section provides functions allowing the generation of message digest: 
 259:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (+) Push data in the IN FIFO : using HASH_DataIn()
 260:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (+) Get the number of words set in IN FIFO, use HASH_GetInFIFOWordsNbr()  
 261:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (+) set the last word valid bits number using HASH_SetLastWordValidBitsNbr() 
 262:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (+) start digest calculation : using HASH_StartDigest()
 263:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (+) Get the Digest message : using HASH_GetDigest()
 264:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  
 265:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** @endverbatim
 266:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @{
 267:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 268:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 269:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 270:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 271:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Configure the Number of valid bits in last word of the message
 272:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  ValidNumber: Number of valid bits in last word of the message.
 273:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *           This parameter must be a number between 0 and 0x1F.
 274:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *             - 0x00: All 32 bits of the last data written are valid
 275:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *             - 0x01: Only bit [0] of the last data written is valid
 276:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *             - 0x02: Only bits[1:0] of the last data written are valid
 277:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *             - 0x03: Only bits[2:0] of the last data written are valid
 278:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *             - ...
 279:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *             - 0x1F: Only bits[30:0] of the last data written are valid    
 280:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @note   The Number of valid bits must be set before to start the message 
 281:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         digest competition (in Hash and HMAC) and key treatment(in HMAC).    
 282:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 283:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 284:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_SetLastWordValidBitsNbr(uint16_t ValidNumber)
 285:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 221              		.loc 1 285 1 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 286:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Check the parameters */
 287:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_VALIDBITSNUMBER(ValidNumber));
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 10


 226              		.loc 1 287 3 view .LVU47
 288:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 289:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Configure the Number of valid bits in last word of the message */
 290:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->STR &= ~(HASH_STR_NBW);
 227              		.loc 1 290 3 view .LVU48
 228              		.loc 1 290 13 is_stmt 0 view .LVU49
 229 0000 044B     		ldr	r3, .L14
 230 0002 9A68     		ldr	r2, [r3, #8]
 231 0004 22F01F02 		bic	r2, r2, #31
 232 0008 9A60     		str	r2, [r3, #8]
 291:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->STR |= ValidNumber;
 233              		.loc 1 291 3 is_stmt 1 view .LVU50
 234              		.loc 1 291 13 is_stmt 0 view .LVU51
 235 000a 9A68     		ldr	r2, [r3, #8]
 236 000c 1043     		orrs	r0, r0, r2
 237              	.LVL5:
 238              		.loc 1 291 13 view .LVU52
 239 000e 9860     		str	r0, [r3, #8]
 292:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 240              		.loc 1 292 1 view .LVU53
 241 0010 7047     		bx	lr
 242              	.L15:
 243 0012 00BF     		.align	2
 244              	.L14:
 245 0014 00040650 		.word	1342571520
 246              		.cfi_endproc
 247              	.LFE127:
 249              		.section	.text.HASH_DataIn,"ax",%progbits
 250              		.align	1
 251              		.global	HASH_DataIn
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv4-sp-d16
 257              	HASH_DataIn:
 258              	.LVL6:
 259              	.LFB128:
 293:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 294:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 295:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Writes data in the Data Input FIFO
 296:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  Data: new data of the message to be processed.
 297:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 298:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 299:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_DataIn(uint32_t Data)
 300:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 260              		.loc 1 300 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 301:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Write in the DIN register a new data */
 302:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->DIN = Data;
 265              		.loc 1 302 3 view .LVU55
 266              		.loc 1 302 13 is_stmt 0 view .LVU56
 267 0000 014B     		ldr	r3, .L17
 268 0002 5860     		str	r0, [r3, #4]
 303:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 11


 269              		.loc 1 303 1 view .LVU57
 270 0004 7047     		bx	lr
 271              	.L18:
 272 0006 00BF     		.align	2
 273              	.L17:
 274 0008 00040650 		.word	1342571520
 275              		.cfi_endproc
 276              	.LFE128:
 278              		.section	.text.HASH_GetInFIFOWordsNbr,"ax",%progbits
 279              		.align	1
 280              		.global	HASH_GetInFIFOWordsNbr
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 284              		.fpu fpv4-sp-d16
 286              	HASH_GetInFIFOWordsNbr:
 287              	.LFB129:
 304:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 305:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 306:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Returns the number of words already pushed into the IN FIFO.
 307:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  None
 308:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval The value of words already pushed into the IN FIFO.
 309:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 310:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** uint8_t HASH_GetInFIFOWordsNbr(void)
 311:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 288              		.loc 1 311 1 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 312:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Return the value of NBW bits */
 313:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   return ((HASH->CR & HASH_CR_NBW) >> 8);
 293              		.loc 1 313 3 view .LVU59
 294              		.loc 1 313 16 is_stmt 0 view .LVU60
 295 0000 024B     		ldr	r3, .L20
 296 0002 1868     		ldr	r0, [r3]
 314:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 297              		.loc 1 314 1 view .LVU61
 298 0004 C0F30320 		ubfx	r0, r0, #8, #4
 299 0008 7047     		bx	lr
 300              	.L21:
 301 000a 00BF     		.align	2
 302              	.L20:
 303 000c 00040650 		.word	1342571520
 304              		.cfi_endproc
 305              	.LFE129:
 307              		.section	.text.HASH_GetDigest,"ax",%progbits
 308              		.align	1
 309              		.global	HASH_GetDigest
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 313              		.fpu fpv4-sp-d16
 315              	HASH_GetDigest:
 316              	.LVL7:
 317              	.LFB130:
 315:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 12


 316:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 317:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Provides the message digest result.
 318:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @note   In MD5 mode, Data[7] to Data[4] filed of HASH_MsgDigest structure is not used
 319:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         and is read as zero.
 320:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         In SHA-1 mode, Data[7] to Data[5] filed of HASH_MsgDigest structure is not used
 321:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         and is read as zero.    
 322:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         In SHA-224 mode, Data[7] filed of HASH_MsgDigest structure is not used
 323:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         and is read as zero.  
 324:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  HASH_MessageDigest: pointer to a HASH_MsgDigest structure which will 
 325:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         hold the message digest result 
 326:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 327:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 328:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_GetDigest(HASH_MsgDigest* HASH_MessageDigest)
 329:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 318              		.loc 1 329 1 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 330:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Get the data field */
 331:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[0] = HASH->HR[0];
 323              		.loc 1 331 3 view .LVU63
 324              		.loc 1 331 41 is_stmt 0 view .LVU64
 325 0000 094B     		ldr	r3, .L23
 326 0002 DA68     		ldr	r2, [r3, #12]
 327              		.loc 1 331 31 view .LVU65
 328 0004 0260     		str	r2, [r0]
 332:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[1] = HASH->HR[1];
 329              		.loc 1 332 3 is_stmt 1 view .LVU66
 330              		.loc 1 332 41 is_stmt 0 view .LVU67
 331 0006 1A69     		ldr	r2, [r3, #16]
 332              		.loc 1 332 31 view .LVU68
 333 0008 4260     		str	r2, [r0, #4]
 333:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[2] = HASH->HR[2];
 334              		.loc 1 333 3 is_stmt 1 view .LVU69
 335              		.loc 1 333 41 is_stmt 0 view .LVU70
 336 000a 5A69     		ldr	r2, [r3, #20]
 337              		.loc 1 333 31 view .LVU71
 338 000c 8260     		str	r2, [r0, #8]
 334:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[3] = HASH->HR[3];
 339              		.loc 1 334 3 is_stmt 1 view .LVU72
 340              		.loc 1 334 41 is_stmt 0 view .LVU73
 341 000e 9A69     		ldr	r2, [r3, #24]
 342              		.loc 1 334 31 view .LVU74
 343 0010 C260     		str	r2, [r0, #12]
 335:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[4] = HASH->HR[4];
 344              		.loc 1 335 3 is_stmt 1 view .LVU75
 345              		.loc 1 335 41 is_stmt 0 view .LVU76
 346 0012 DB69     		ldr	r3, [r3, #28]
 347              		.loc 1 335 31 view .LVU77
 348 0014 0361     		str	r3, [r0, #16]
 336:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[5] = HASH_DIGEST->HR[5];
 349              		.loc 1 336 3 is_stmt 1 view .LVU78
 350              		.loc 1 336 48 is_stmt 0 view .LVU79
 351 0016 054B     		ldr	r3, .L23+4
 352 0018 5A69     		ldr	r2, [r3, #20]
 353              		.loc 1 336 31 view .LVU80
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 13


 354 001a 4261     		str	r2, [r0, #20]
 337:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[6] = HASH_DIGEST->HR[6];
 355              		.loc 1 337 3 is_stmt 1 view .LVU81
 356              		.loc 1 337 48 is_stmt 0 view .LVU82
 357 001c 9A69     		ldr	r2, [r3, #24]
 358              		.loc 1 337 31 view .LVU83
 359 001e 8261     		str	r2, [r0, #24]
 338:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[7] = HASH_DIGEST->HR[7];
 360              		.loc 1 338 3 is_stmt 1 view .LVU84
 361              		.loc 1 338 48 is_stmt 0 view .LVU85
 362 0020 DB69     		ldr	r3, [r3, #28]
 363              		.loc 1 338 31 view .LVU86
 364 0022 C361     		str	r3, [r0, #28]
 339:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 365              		.loc 1 339 1 view .LVU87
 366 0024 7047     		bx	lr
 367              	.L24:
 368 0026 00BF     		.align	2
 369              	.L23:
 370 0028 00040650 		.word	1342571520
 371 002c 10070650 		.word	1342572304
 372              		.cfi_endproc
 373              	.LFE130:
 375              		.section	.text.HASH_StartDigest,"ax",%progbits
 376              		.align	1
 377              		.global	HASH_StartDigest
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 381              		.fpu fpv4-sp-d16
 383              	HASH_StartDigest:
 384              	.LFB131:
 340:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 341:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 342:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Starts the message padding and calculation of the final message     
 343:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  None
 344:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 345:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 346:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_StartDigest(void)
 347:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 385              		.loc 1 347 1 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 348:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Start the Digest calculation */
 349:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->STR |= HASH_STR_DCAL;
 390              		.loc 1 349 3 view .LVU89
 391              		.loc 1 349 13 is_stmt 0 view .LVU90
 392 0000 024A     		ldr	r2, .L26
 393 0002 9368     		ldr	r3, [r2, #8]
 394 0004 43F48073 		orr	r3, r3, #256
 395 0008 9360     		str	r3, [r2, #8]
 350:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 396              		.loc 1 350 1 view .LVU91
 397 000a 7047     		bx	lr
 398              	.L27:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 14


 399              		.align	2
 400              	.L26:
 401 000c 00040650 		.word	1342571520
 402              		.cfi_endproc
 403              	.LFE131:
 405              		.section	.text.HASH_SaveContext,"ax",%progbits
 406              		.align	1
 407              		.global	HASH_SaveContext
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 411              		.fpu fpv4-sp-d16
 413              	HASH_SaveContext:
 414              	.LVL8:
 415              	.LFB132:
 351:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 352:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @}
 353:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 354:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 355:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group3 Context swapping functions
 356:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *  @brief   Context swapping functions
 357:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *
 358:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** @verbatim   
 359:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ===============================================================================
 360:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                       ##### Context swapping functions #####
 361:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ===============================================================================  
 362:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  
 363:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..] This section provides functions allowing to save and store HASH Context
 364:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 365:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..] It is possible to interrupt a HASH/HMAC process to perform another processing 
 366:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       with a higher priority, and to complete the interrupted process later on, when 
 367:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       the higher priority task is complete. To do so, the context of the interrupted 
 368:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       task must be saved from the HASH registers to memory, and then be restored 
 369:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       from memory to the HASH registers.
 370:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 371:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) To save the current context, use HASH_SaveContext() function
 372:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) To restore the saved context, use HASH_RestoreContext() function 
 373:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 374:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 375:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** @endverbatim
 376:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @{
 377:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 378:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 379:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 380:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Save the Hash peripheral Context. 
 381:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @note   The context can be saved only when no block is currently being 
 382:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         processed. So user must wait for DINIS = 1 (the last block has been 
 383:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         processed and the input FIFO is empty) or NBW != 0 (the FIFO is not 
 384:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         full and no processing is ongoing).   
 385:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  HASH_ContextSave: pointer to a HASH_Context structure that contains
 386:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         the repository for current context.
 387:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 388:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 389:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_SaveContext(HASH_Context* HASH_ContextSave)
 390:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 416              		.loc 1 390 1 is_stmt 1 view -0
 417              		.cfi_startproc
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 15


 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 391:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   uint8_t i = 0;
 421              		.loc 1 391 3 view .LVU93
 392:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 393:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* save context registers */
 394:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_IMR = HASH->IMR;  
 422              		.loc 1 394 3 view .LVU94
 423              		.loc 1 394 36 is_stmt 0 view .LVU95
 424 0000 0B4B     		ldr	r3, .L31
 425 0002 1A6A     		ldr	r2, [r3, #32]
 426              		.loc 1 394 30 view .LVU96
 427 0004 0260     		str	r2, [r0]
 395:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_STR = HASH->STR;      
 428              		.loc 1 395 3 is_stmt 1 view .LVU97
 429              		.loc 1 395 36 is_stmt 0 view .LVU98
 430 0006 9A68     		ldr	r2, [r3, #8]
 431              		.loc 1 395 30 view .LVU99
 432 0008 4260     		str	r2, [r0, #4]
 396:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_CR  = HASH->CR;     
 433              		.loc 1 396 3 is_stmt 1 view .LVU100
 434              		.loc 1 396 36 is_stmt 0 view .LVU101
 435 000a 1B68     		ldr	r3, [r3]
 436              		.loc 1 396 30 view .LVU102
 437 000c 8360     		str	r3, [r0, #8]
 397:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 438              		.loc 1 397 3 is_stmt 1 view .LVU103
 439              		.loc 1 397 8 is_stmt 0 view .LVU104
 440 000e 0023     		movs	r3, #0
 441              		.loc 1 397 3 view .LVU105
 442 0010 0AE0     		b	.L29
 443              	.LVL9:
 444              	.L30:
 398:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 399:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****      HASH_ContextSave->HASH_CSR[i] = HASH->CSR[i];
 445              		.loc 1 399 6 is_stmt 1 discriminator 3 view .LVU106
 446              		.loc 1 399 47 is_stmt 0 discriminator 3 view .LVU107
 447 0012 03F13E01 		add	r1, r3, #62
 448 0016 064A     		ldr	r2, .L31
 449 0018 52F82110 		ldr	r1, [r2, r1, lsl #2]
 450              		.loc 1 399 36 discriminator 3 view .LVU108
 451 001c 9A1C     		adds	r2, r3, #2
 452 001e 00EB8202 		add	r2, r0, r2, lsl #2
 453 0022 5160     		str	r1, [r2, #4]
 397:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 454              		.loc 1 397 18 is_stmt 1 discriminator 3 view .LVU109
 397:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 455              		.loc 1 397 19 is_stmt 0 discriminator 3 view .LVU110
 456 0024 0133     		adds	r3, r3, #1
 457              	.LVL10:
 397:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 458              		.loc 1 397 19 discriminator 3 view .LVU111
 459 0026 DBB2     		uxtb	r3, r3
 460              	.LVL11:
 461              	.L29:
 397:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 16


 462              		.loc 1 397 12 is_stmt 1 discriminator 1 view .LVU112
 397:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 463              		.loc 1 397 3 is_stmt 0 discriminator 1 view .LVU113
 464 0028 352B     		cmp	r3, #53
 465 002a F2D9     		bls	.L30
 400:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }   
 401:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 466              		.loc 1 401 1 view .LVU114
 467 002c 7047     		bx	lr
 468              	.L32:
 469 002e 00BF     		.align	2
 470              	.L31:
 471 0030 00040650 		.word	1342571520
 472              		.cfi_endproc
 473              	.LFE132:
 475              		.section	.text.HASH_RestoreContext,"ax",%progbits
 476              		.align	1
 477              		.global	HASH_RestoreContext
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
 481              		.fpu fpv4-sp-d16
 483              	HASH_RestoreContext:
 484              	.LVL12:
 485              	.LFB133:
 402:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 403:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 404:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Restore the Hash peripheral Context.  
 405:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @note   After calling this function, user can restart the processing from the
 406:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         point where it has been interrupted.  
 407:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  HASH_ContextRestore: pointer to a HASH_Context structure that contains
 408:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         the repository for saved context.
 409:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 410:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 411:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_RestoreContext(HASH_Context* HASH_ContextRestore)  
 412:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 486              		.loc 1 412 1 is_stmt 1 view -0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 413:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   uint8_t i = 0;
 491              		.loc 1 413 3 view .LVU116
 414:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 415:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* restore context registers */
 416:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->IMR = HASH_ContextRestore->HASH_IMR;   
 492              		.loc 1 416 3 view .LVU117
 493              		.loc 1 416 34 is_stmt 0 view .LVU118
 494 0000 0268     		ldr	r2, [r0]
 495              		.loc 1 416 13 view .LVU119
 496 0002 0F4B     		ldr	r3, .L40
 497 0004 1A62     		str	r2, [r3, #32]
 417:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->STR = HASH_ContextRestore->HASH_STR;     
 498              		.loc 1 417 3 is_stmt 1 view .LVU120
 499              		.loc 1 417 34 is_stmt 0 view .LVU121
 500 0006 4268     		ldr	r2, [r0, #4]
 501              		.loc 1 417 13 view .LVU122
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 17


 502 0008 9A60     		str	r2, [r3, #8]
 418:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->CR = HASH_ContextRestore->HASH_CR;
 503              		.loc 1 418 3 is_stmt 1 view .LVU123
 504              		.loc 1 418 33 is_stmt 0 view .LVU124
 505 000a 8268     		ldr	r2, [r0, #8]
 506              		.loc 1 418 12 view .LVU125
 507 000c 1A60     		str	r2, [r3]
 419:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 420:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Initialize the hash processor */
 421:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT; 
 508              		.loc 1 421 3 is_stmt 1 view .LVU126
 509              		.loc 1 421 12 is_stmt 0 view .LVU127
 510 000e 1A68     		ldr	r2, [r3]
 511 0010 42F00402 		orr	r2, r2, #4
 512 0014 1A60     		str	r2, [r3]
 422:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 423:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    /* continue restoring context registers */     
 424:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 513              		.loc 1 424 3 is_stmt 1 view .LVU128
 514              		.loc 1 424 8 is_stmt 0 view .LVU129
 515 0016 0023     		movs	r3, #0
 516              	.LVL13:
 517              		.loc 1 424 12 is_stmt 1 view .LVU130
 518              		.loc 1 424 3 is_stmt 0 view .LVU131
 519 0018 352B     		cmp	r3, #53
 520 001a 10D8     		bhi	.L39
 412:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   uint8_t i = 0;
 521              		.loc 1 412 1 view .LVU132
 522 001c 10B4     		push	{r4}
 523              	.LCFI4:
 524              		.cfi_def_cfa_offset 4
 525              		.cfi_offset 4, -4
 526              	.L35:
 425:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 426:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****      HASH->CSR[i] = HASH_ContextRestore->HASH_CSR[i];
 527              		.loc 1 426 6 is_stmt 1 discriminator 3 view .LVU133
 528              		.loc 1 426 50 is_stmt 0 discriminator 3 view .LVU134
 529 001e 9A1C     		adds	r2, r3, #2
 530 0020 00EB8202 		add	r2, r0, r2, lsl #2
 531 0024 5468     		ldr	r4, [r2, #4]
 532              		.loc 1 426 19 discriminator 3 view .LVU135
 533 0026 03F13E01 		add	r1, r3, #62
 534 002a 054A     		ldr	r2, .L40
 535 002c 42F82140 		str	r4, [r2, r1, lsl #2]
 424:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 536              		.loc 1 424 18 is_stmt 1 discriminator 3 view .LVU136
 424:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 537              		.loc 1 424 19 is_stmt 0 discriminator 3 view .LVU137
 538 0030 0133     		adds	r3, r3, #1
 539              	.LVL14:
 424:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 540              		.loc 1 424 19 discriminator 3 view .LVU138
 541 0032 DBB2     		uxtb	r3, r3
 542              	.LVL15:
 424:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 543              		.loc 1 424 12 is_stmt 1 discriminator 3 view .LVU139
 424:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 18


 544              		.loc 1 424 3 is_stmt 0 discriminator 3 view .LVU140
 545 0034 352B     		cmp	r3, #53
 546 0036 F2D9     		bls	.L35
 427:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }   
 428:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 547              		.loc 1 428 1 view .LVU141
 548 0038 5DF8044B 		ldr	r4, [sp], #4
 549              	.LCFI5:
 550              		.cfi_restore 4
 551              		.cfi_def_cfa_offset 0
 552 003c 7047     		bx	lr
 553              	.L39:
 554              		.loc 1 428 1 view .LVU142
 555 003e 7047     		bx	lr
 556              	.L41:
 557              		.align	2
 558              	.L40:
 559 0040 00040650 		.word	1342571520
 560              		.cfi_endproc
 561              	.LFE133:
 563              		.section	.text.HASH_AutoStartDigest,"ax",%progbits
 564              		.align	1
 565              		.global	HASH_AutoStartDigest
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 569              		.fpu fpv4-sp-d16
 571              	HASH_AutoStartDigest:
 572              	.LVL16:
 573              	.LFB134:
 429:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 430:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @}
 431:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 432:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 433:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group4 HASH's DMA interface Configuration function
 434:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *  @brief   HASH's DMA interface Configuration function 
 435:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *
 436:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** @verbatim   
 437:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ===============================================================================
 438:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                ##### HASH's DMA interface Configuration function #####
 439:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ===============================================================================  
 440:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 441:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..] This section provides functions allowing to configure the DMA interface for 
 442:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       HASH/ HMAC data input transfer.
 443:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    
 444:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..] When the DMA mode is enabled (using the HASH_DMACmd() function), data can be 
 445:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       sent to the IN FIFO using the DMA peripheral.
 446:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 447:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** @endverbatim
 448:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @{
 449:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 450:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 451:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 452:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Enables or disables auto-start message padding and
 453:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *         calculation of the final message digest at the end of DMA transfer.
 454:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  NewState: new state of the selected HASH DMA transfer request.
 455:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *          This parameter can be: ENABLE or DISABLE.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 19


 456:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 457:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 458:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_AutoStartDigest(FunctionalState NewState)
 459:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 574              		.loc 1 459 1 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 460:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Check the parameters */
 461:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 579              		.loc 1 461 3 view .LVU144
 462:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 463:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 580              		.loc 1 463 3 view .LVU145
 581              		.loc 1 463 6 is_stmt 0 view .LVU146
 582 0000 28B1     		cbz	r0, .L43
 464:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 465:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     /* Enable the auto start of the final message digest at the end of DMA transfer */
 466:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_MDMAT;
 583              		.loc 1 466 5 is_stmt 1 view .LVU147
 584              		.loc 1 466 14 is_stmt 0 view .LVU148
 585 0002 064A     		ldr	r2, .L45
 586 0004 1368     		ldr	r3, [r2]
 587 0006 23F40053 		bic	r3, r3, #8192
 588 000a 1360     		str	r3, [r2]
 589 000c 7047     		bx	lr
 590              	.L43:
 467:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 468:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   else
 469:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 470:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     /* Disable the auto start of the final message digest at the end of DMA transfer */
 471:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     HASH->CR |= HASH_CR_MDMAT;
 591              		.loc 1 471 5 is_stmt 1 view .LVU149
 592              		.loc 1 471 14 is_stmt 0 view .LVU150
 593 000e 034A     		ldr	r2, .L45
 594 0010 1368     		ldr	r3, [r2]
 595 0012 43F40053 		orr	r3, r3, #8192
 596 0016 1360     		str	r3, [r2]
 472:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 473:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 597              		.loc 1 473 1 view .LVU151
 598 0018 7047     		bx	lr
 599              	.L46:
 600 001a 00BF     		.align	2
 601              	.L45:
 602 001c 00040650 		.word	1342571520
 603              		.cfi_endproc
 604              	.LFE134:
 606              		.section	.text.HASH_DMACmd,"ax",%progbits
 607              		.align	1
 608              		.global	HASH_DMACmd
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv4-sp-d16
 614              	HASH_DMACmd:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 20


 615              	.LVL17:
 616              	.LFB135:
 474:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 475:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 476:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Enables or disables the HASH DMA interface.
 477:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @note   The DMA is disabled by hardware after the end of transfer.
 478:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  NewState: new state of the selected HASH DMA transfer request.
 479:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *          This parameter can be: ENABLE or DISABLE.
 480:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 481:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 482:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_DMACmd(FunctionalState NewState)
 483:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 617              		.loc 1 483 1 is_stmt 1 view -0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 484:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Check the parameters */
 485:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 622              		.loc 1 485 3 view .LVU153
 486:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 487:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 623              		.loc 1 487 3 view .LVU154
 624              		.loc 1 487 6 is_stmt 0 view .LVU155
 625 0000 28B1     		cbz	r0, .L48
 488:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 489:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     /* Enable the HASH DMA request */
 490:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     HASH->CR |= HASH_CR_DMAE;
 626              		.loc 1 490 5 is_stmt 1 view .LVU156
 627              		.loc 1 490 14 is_stmt 0 view .LVU157
 628 0002 064A     		ldr	r2, .L50
 629 0004 1368     		ldr	r3, [r2]
 630 0006 43F00803 		orr	r3, r3, #8
 631 000a 1360     		str	r3, [r2]
 632 000c 7047     		bx	lr
 633              	.L48:
 491:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 492:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   else
 493:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 494:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     /* Disable the HASH DMA request */
 495:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_DMAE;
 634              		.loc 1 495 5 is_stmt 1 view .LVU158
 635              		.loc 1 495 14 is_stmt 0 view .LVU159
 636 000e 034A     		ldr	r2, .L50
 637 0010 1368     		ldr	r3, [r2]
 638 0012 23F00803 		bic	r3, r3, #8
 639 0016 1360     		str	r3, [r2]
 496:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 497:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 640              		.loc 1 497 1 view .LVU160
 641 0018 7047     		bx	lr
 642              	.L51:
 643 001a 00BF     		.align	2
 644              	.L50:
 645 001c 00040650 		.word	1342571520
 646              		.cfi_endproc
 647              	.LFE135:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 21


 649              		.section	.text.HASH_ITConfig,"ax",%progbits
 650              		.align	1
 651              		.global	HASH_ITConfig
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 655              		.fpu fpv4-sp-d16
 657              	HASH_ITConfig:
 658              	.LVL18:
 659              	.LFB136:
 498:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 499:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @}
 500:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 501:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 502:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group5 Interrupts and flags management functions
 503:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *  @brief   Interrupts and flags management functions
 504:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *
 505:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** @verbatim   
 506:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ===============================================================================
 507:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                ##### Interrupts and flags management functions #####
 508:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ===============================================================================  
 509:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 510:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..] This section provides functions allowing to configure the HASH Interrupts and 
 511:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       to get the status and clear flags and Interrupts pending bits.
 512:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 513:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..] The HASH provides 2 Interrupts sources and 5 Flags:
 514:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 515:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *** Flags : ***
 516:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  =============== 
 517:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..]
 518:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) HASH_FLAG_DINIS : set when 16 locations are free in the Data IN FIFO 
 519:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       which means that a  new block (512 bit) can be entered into the input buffer.
 520:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                           
 521:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) HASH_FLAG_DCIS :  set when Digest calculation is complete
 522:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       
 523:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) HASH_FLAG_DMAS :  set when HASH's DMA interface is enabled (DMAE=1) or 
 524:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        a transfer is ongoing. This Flag is cleared only by hardware.
 525:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                            
 526:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) HASH_FLAG_BUSY :  set when The hash core is processing a block of data
 527:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        This Flag is cleared only by hardware. 
 528:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****                            
 529:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) HASH_FLAG_DINNE : set when Data IN FIFO is not empty which means that 
 530:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        the Data IN FIFO contains at least one word of data. This Flag is cleared 
 531:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        only by hardware.
 532:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****      
 533:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *** Interrupts : ***
 534:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  ====================
 535:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..]   
 536:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) HASH_IT_DINI  : if enabled, this interrupt source is pending when 16 
 537:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        locations are free in the Data IN FIFO  which means that a new block (512 bit)
 538:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        can be entered into the input buffer. This interrupt source is cleared using 
 539:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        HASH_ClearITPendingBit(HASH_IT_DINI) function.
 540:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    
 541:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) HASH_IT_DCI   : if enabled, this interrupt source is pending when Digest 
 542:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        calculation is complete. This interrupt source is cleared using 
 543:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        HASH_ClearITPendingBit(HASH_IT_DCI) function.
 544:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 22


 545:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  *** Managing the HASH controller events : ***
 546:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  =============================================
 547:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****  [..] The user should identify which mode will be used in his application to manage 
 548:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****       the HASH controller events: Polling mode or Interrupt mode.
 549:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 550:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#) In the Polling Mode it is advised to use the following functions:
 551:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        (++) HASH_GetFlagStatus() : to check if flags events occur. 
 552:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        (++) HASH_ClearFlag()     : to clear the flags events.
 553:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     
 554:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****    (#)  In the Interrupt Mode it is advised to use the following functions:
 555:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        (++) HASH_ITConfig()       : to enable or disable the interrupt source.
 556:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        (++) HASH_GetITStatus()    : to check if Interrupt occurs.
 557:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****        (++) HASH_ClearITPendingBit() : to clear the Interrupt pending Bit 
 558:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****             (corresponding Flag). 
 559:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 560:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** @endverbatim
 561:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @{
 562:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */ 
 563:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 564:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 565:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Enables or disables the specified HASH interrupts.
 566:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt source to be enabled or disabled.
 567:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 568:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 569:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 570:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  NewState: new state of the specified HASH interrupt.
 571:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *           This parameter can be: ENABLE or DISABLE.
 572:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 573:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 574:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_ITConfig(uint32_t HASH_IT, FunctionalState NewState)
 575:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 660              		.loc 1 575 1 is_stmt 1 view -0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 576:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Check the parameters */
 577:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_IT(HASH_IT));
 665              		.loc 1 577 3 view .LVU162
 578:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 666              		.loc 1 578 3 view .LVU163
 579:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 580:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 667              		.loc 1 580 3 view .LVU164
 668              		.loc 1 580 6 is_stmt 0 view .LVU165
 669 0000 21B1     		cbz	r1, .L53
 581:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 582:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     /* Enable the selected HASH interrupt */
 583:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     HASH->IMR |= HASH_IT;
 670              		.loc 1 583 5 is_stmt 1 view .LVU166
 671              		.loc 1 583 15 is_stmt 0 view .LVU167
 672 0002 054A     		ldr	r2, .L55
 673 0004 136A     		ldr	r3, [r2, #32]
 674 0006 1843     		orrs	r0, r0, r3
 675              	.LVL19:
 676              		.loc 1 583 15 view .LVU168
 677 0008 1062     		str	r0, [r2, #32]
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 23


 678 000a 7047     		bx	lr
 679              	.LVL20:
 680              	.L53:
 584:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 585:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   else
 586:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 587:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     /* Disable the selected HASH interrupt */
 588:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     HASH->IMR &= (uint32_t)(~HASH_IT);
 681              		.loc 1 588 5 is_stmt 1 view .LVU169
 682              		.loc 1 588 15 is_stmt 0 view .LVU170
 683 000c 024A     		ldr	r2, .L55
 684 000e 136A     		ldr	r3, [r2, #32]
 685 0010 23EA0000 		bic	r0, r3, r0
 686              	.LVL21:
 687              		.loc 1 588 15 view .LVU171
 688 0014 1062     		str	r0, [r2, #32]
 589:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 590:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 689              		.loc 1 590 1 view .LVU172
 690 0016 7047     		bx	lr
 691              	.L56:
 692              		.align	2
 693              	.L55:
 694 0018 00040650 		.word	1342571520
 695              		.cfi_endproc
 696              	.LFE136:
 698              		.section	.text.HASH_GetFlagStatus,"ax",%progbits
 699              		.align	1
 700              		.global	HASH_GetFlagStatus
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 704              		.fpu fpv4-sp-d16
 706              	HASH_GetFlagStatus:
 707              	.LVL22:
 708              	.LFB137:
 591:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 592:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 593:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Checks whether the specified HASH flag is set or not.
 594:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  HASH_FLAG: specifies the HASH flag to check.
 595:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *          This parameter can be one of the following values:
 596:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINIS: Data input interrupt status flag
 597:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DCIS: Digest calculation completion interrupt status flag
 598:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_BUSY: Busy flag
 599:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DMAS: DMAS Status flag
 600:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINNE: Data Input register (DIN) not empty status flag
 601:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval The new state of HASH_FLAG (SET or RESET)
 602:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 603:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** FlagStatus HASH_GetFlagStatus(uint32_t HASH_FLAG)
 604:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 709              		.loc 1 604 1 is_stmt 1 view -0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 605:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   FlagStatus bitstatus = RESET;
 714              		.loc 1 605 3 view .LVU174
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 24


 606:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   uint32_t tempreg = 0;
 715              		.loc 1 606 3 view .LVU175
 607:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 608:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Check the parameters */
 609:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_GET_FLAG(HASH_FLAG));
 716              		.loc 1 609 3 view .LVU176
 610:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 611:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* check if the FLAG is in CR register */
 612:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   if ((HASH_FLAG & HASH_FLAG_DINNE) != (uint32_t)RESET ) 
 717              		.loc 1 612 3 view .LVU177
 718              		.loc 1 612 6 is_stmt 0 view .LVU178
 719 0000 10F4805F 		tst	r0, #4096
 720 0004 05D0     		beq	.L58
 613:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 614:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     tempreg = HASH->CR;
 721              		.loc 1 614 5 is_stmt 1 view .LVU179
 722              		.loc 1 614 13 is_stmt 0 view .LVU180
 723 0006 054B     		ldr	r3, .L62
 724 0008 1B68     		ldr	r3, [r3]
 725              	.LVL23:
 726              	.L59:
 615:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 616:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   else /* The FLAG is in SR register */
 617:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 618:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     tempreg = HASH->SR;
 619:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 620:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 621:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Check the status of the specified HASH flag */
 622:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   if ((tempreg & HASH_FLAG) != (uint32_t)RESET)
 727              		.loc 1 622 3 is_stmt 1 view .LVU181
 728              		.loc 1 622 6 is_stmt 0 view .LVU182
 729 000a 0342     		tst	r3, r0
 730 000c 04D0     		beq	.L61
 623:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 624:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     /* HASH is set */
 625:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     bitstatus = SET;
 731              		.loc 1 625 15 view .LVU183
 732 000e 0120     		movs	r0, #1
 733              	.LVL24:
 734              		.loc 1 625 15 view .LVU184
 735 0010 7047     		bx	lr
 736              	.LVL25:
 737              	.L58:
 618:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 738              		.loc 1 618 5 is_stmt 1 view .LVU185
 618:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 739              		.loc 1 618 13 is_stmt 0 view .LVU186
 740 0012 024B     		ldr	r3, .L62
 741 0014 5B6A     		ldr	r3, [r3, #36]
 742              	.LVL26:
 618:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 743              		.loc 1 618 13 view .LVU187
 744 0016 F8E7     		b	.L59
 745              	.L61:
 626:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 627:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   else
 628:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 25


 629:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     /* HASH_FLAG is reset */
 630:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     bitstatus = RESET;
 746              		.loc 1 630 15 view .LVU188
 747 0018 0020     		movs	r0, #0
 748              	.LVL27:
 631:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 632:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 633:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Return the HASH_FLAG status */
 634:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   return  bitstatus;
 749              		.loc 1 634 3 is_stmt 1 view .LVU189
 635:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 750              		.loc 1 635 1 is_stmt 0 view .LVU190
 751 001a 7047     		bx	lr
 752              	.L63:
 753              		.align	2
 754              	.L62:
 755 001c 00040650 		.word	1342571520
 756              		.cfi_endproc
 757              	.LFE137:
 759              		.section	.text.HASH_ClearFlag,"ax",%progbits
 760              		.align	1
 761              		.global	HASH_ClearFlag
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 765              		.fpu fpv4-sp-d16
 767              	HASH_ClearFlag:
 768              	.LVL28:
 769              	.LFB138:
 636:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 637:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Clears the HASH flags.
 638:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  HASH_FLAG: specifies the flag to clear. 
 639:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 640:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINIS: Data Input Flag
 641:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DCIS: Digest Calculation Completion Flag                       
 642:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 643:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 644:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_ClearFlag(uint32_t HASH_FLAG)
 645:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 770              		.loc 1 645 1 is_stmt 1 view -0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 646:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Check the parameters */
 647:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_CLEAR_FLAG(HASH_FLAG));
 775              		.loc 1 647 3 view .LVU192
 648:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   
 649:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Clear the selected HASH flags */
 650:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->SR = ~(uint32_t)HASH_FLAG;
 776              		.loc 1 650 3 view .LVU193
 777              		.loc 1 650 14 is_stmt 0 view .LVU194
 778 0000 C043     		mvns	r0, r0
 779              	.LVL29:
 780              		.loc 1 650 12 view .LVU195
 781 0002 014B     		ldr	r3, .L65
 782 0004 5862     		str	r0, [r3, #36]
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 26


 651:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 783              		.loc 1 651 1 view .LVU196
 784 0006 7047     		bx	lr
 785              	.L66:
 786              		.align	2
 787              	.L65:
 788 0008 00040650 		.word	1342571520
 789              		.cfi_endproc
 790              	.LFE138:
 792              		.section	.text.HASH_GetITStatus,"ax",%progbits
 793              		.align	1
 794              		.global	HASH_GetITStatus
 795              		.syntax unified
 796              		.thumb
 797              		.thumb_func
 798              		.fpu fpv4-sp-d16
 800              	HASH_GetITStatus:
 801              	.LVL30:
 802              	.LFB139:
 652:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 653:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Checks whether the specified HASH interrupt has occurred or not.
 654:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt source to check.
 655:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *          This parameter can be one of the following values:
 656:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 657:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 658:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval The new state of HASH_IT (SET or RESET).
 659:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 660:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** ITStatus HASH_GetITStatus(uint32_t HASH_IT)
 661:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 803              		.loc 1 661 1 is_stmt 1 view -0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 0
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807              		@ link register save eliminated.
 662:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   ITStatus bitstatus = RESET;
 808              		.loc 1 662 3 view .LVU198
 663:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   uint32_t tmpreg = 0;
 809              		.loc 1 663 3 view .LVU199
 664:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 665:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Check the parameters */
 666:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_GET_IT(HASH_IT));  
 810              		.loc 1 666 3 view .LVU200
 667:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 668:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 669:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Check the status of the specified HASH interrupt */
 670:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   tmpreg =  HASH->SR;
 811              		.loc 1 670 3 view .LVU201
 812              		.loc 1 670 10 is_stmt 0 view .LVU202
 813 0000 044A     		ldr	r2, .L70
 814 0002 516A     		ldr	r1, [r2, #36]
 815              	.LVL31:
 671:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 672:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   if (((HASH->IMR & tmpreg) & HASH_IT) != RESET)
 816              		.loc 1 672 3 is_stmt 1 view .LVU203
 817              		.loc 1 672 13 is_stmt 0 view .LVU204
 818 0004 136A     		ldr	r3, [r2, #32]
 819              		.loc 1 672 19 view .LVU205
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 27


 820 0006 0B40     		ands	r3, r3, r1
 821              		.loc 1 672 6 view .LVU206
 822 0008 0342     		tst	r3, r0
 823 000a 01D0     		beq	.L69
 673:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 674:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     /* HASH_IT is set */
 675:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     bitstatus = SET;
 824              		.loc 1 675 15 view .LVU207
 825 000c 0120     		movs	r0, #1
 826              	.LVL32:
 827              		.loc 1 675 15 view .LVU208
 828 000e 7047     		bx	lr
 829              	.LVL33:
 830              	.L69:
 676:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 677:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   else
 678:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   {
 679:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     /* HASH_IT is reset */
 680:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****     bitstatus = RESET;
 831              		.loc 1 680 15 view .LVU209
 832 0010 0020     		movs	r0, #0
 833              	.LVL34:
 681:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   }
 682:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Return the HASH_IT status */
 683:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   return bitstatus;
 834              		.loc 1 683 3 is_stmt 1 view .LVU210
 684:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 835              		.loc 1 684 1 is_stmt 0 view .LVU211
 836 0012 7047     		bx	lr
 837              	.L71:
 838              		.align	2
 839              	.L70:
 840 0014 00040650 		.word	1342571520
 841              		.cfi_endproc
 842              	.LFE139:
 844              		.section	.text.HASH_ClearITPendingBit,"ax",%progbits
 845              		.align	1
 846              		.global	HASH_ClearITPendingBit
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 850              		.fpu fpv4-sp-d16
 852              	HASH_ClearITPendingBit:
 853              	.LVL35:
 854              	.LFB140:
 685:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 686:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** /**
 687:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @brief  Clears the HASH interrupt pending bit(s).
 688:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt pending bit(s) to clear.
 689:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 690:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 691:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 692:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   * @retval None
 693:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   */
 694:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** void HASH_ClearITPendingBit(uint32_t HASH_IT)
 695:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** {
 855              		.loc 1 695 1 is_stmt 1 view -0
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 28


 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              		@ link register save eliminated.
 696:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Check the parameters */
 697:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_IT(HASH_IT));
 860              		.loc 1 697 3 view .LVU213
 698:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** 
 699:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   /* Clear the selected HASH interrupt pending bit */
 700:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c ****   HASH->SR = (uint32_t)(~HASH_IT);
 861              		.loc 1 700 3 view .LVU214
 862              		.loc 1 700 25 is_stmt 0 view .LVU215
 863 0000 C043     		mvns	r0, r0
 864              	.LVL36:
 865              		.loc 1 700 12 view .LVU216
 866 0002 014B     		ldr	r3, .L73
 867 0004 5862     		str	r0, [r3, #36]
 701:STM32F4xx_LIB/periph/src/stm32f4xx_hash.c **** }
 868              		.loc 1 701 1 view .LVU217
 869 0006 7047     		bx	lr
 870              	.L74:
 871              		.align	2
 872              	.L73:
 873 0008 00040650 		.word	1342571520
 874              		.cfi_endproc
 875              	.LFE140:
 877              		.text
 878              	.Letext0:
 879              		.file 2 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\machine\\_default_types.h"
 880              		.file 3 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 881              		.file 4 "STM32F4xx_LIB/core/core_cm4.h"
 882              		.file 5 "User/system_stm32f4xx.h"
 883              		.file 6 "User/stm32f4xx.h"
 884              		.file 7 "STM32F4xx_LIB/periph/inc/stm32f4xx_hash.h"
 885              		.file 8 "STM32F4xx_LIB/periph/inc/stm32f4xx_rcc.h"
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hash.c
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:18     .text.HASH_DeInit:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:26     .text.HASH_DeInit:00000000 HASH_DeInit
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:54     .text.HASH_Init:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:61     .text.HASH_Init:00000000 HASH_Init
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:142    .text.HASH_Init:0000004c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:147    .text.HASH_StructInit:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:154    .text.HASH_StructInit:00000000 HASH_StructInit
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:181    .text.HASH_Reset:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:188    .text.HASH_Reset:00000000 HASH_Reset
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:206    .text.HASH_Reset:0000000c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:211    .text.HASH_SetLastWordValidBitsNbr:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:218    .text.HASH_SetLastWordValidBitsNbr:00000000 HASH_SetLastWordValidBitsNbr
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:245    .text.HASH_SetLastWordValidBitsNbr:00000014 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:250    .text.HASH_DataIn:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:257    .text.HASH_DataIn:00000000 HASH_DataIn
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:274    .text.HASH_DataIn:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:279    .text.HASH_GetInFIFOWordsNbr:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:286    .text.HASH_GetInFIFOWordsNbr:00000000 HASH_GetInFIFOWordsNbr
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:303    .text.HASH_GetInFIFOWordsNbr:0000000c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:308    .text.HASH_GetDigest:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:315    .text.HASH_GetDigest:00000000 HASH_GetDigest
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:370    .text.HASH_GetDigest:00000028 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:376    .text.HASH_StartDigest:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:383    .text.HASH_StartDigest:00000000 HASH_StartDigest
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:401    .text.HASH_StartDigest:0000000c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:406    .text.HASH_SaveContext:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:413    .text.HASH_SaveContext:00000000 HASH_SaveContext
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:471    .text.HASH_SaveContext:00000030 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:476    .text.HASH_RestoreContext:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:483    .text.HASH_RestoreContext:00000000 HASH_RestoreContext
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:559    .text.HASH_RestoreContext:00000040 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:564    .text.HASH_AutoStartDigest:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:571    .text.HASH_AutoStartDigest:00000000 HASH_AutoStartDigest
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:602    .text.HASH_AutoStartDigest:0000001c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:607    .text.HASH_DMACmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:614    .text.HASH_DMACmd:00000000 HASH_DMACmd
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:645    .text.HASH_DMACmd:0000001c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:650    .text.HASH_ITConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:657    .text.HASH_ITConfig:00000000 HASH_ITConfig
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:694    .text.HASH_ITConfig:00000018 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:699    .text.HASH_GetFlagStatus:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:706    .text.HASH_GetFlagStatus:00000000 HASH_GetFlagStatus
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:755    .text.HASH_GetFlagStatus:0000001c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:760    .text.HASH_ClearFlag:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:767    .text.HASH_ClearFlag:00000000 HASH_ClearFlag
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:788    .text.HASH_ClearFlag:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:793    .text.HASH_GetITStatus:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:800    .text.HASH_GetITStatus:00000000 HASH_GetITStatus
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:840    .text.HASH_GetITStatus:00000014 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:845    .text.HASH_ClearITPendingBit:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:852    .text.HASH_ClearITPendingBit:00000000 HASH_ClearITPendingBit
C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s:873    .text.HASH_ClearITPendingBit:00000008 $d

UNDEFINED SYMBOLS
RCC_AHB2PeriphResetCmd
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cczx1vcT.s 			page 30


