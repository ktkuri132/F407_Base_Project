ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_iwdg.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.IWDG_WriteAccessCmd,"ax",%progbits
  18              		.align	1
  19              		.global	IWDG_WriteAccessCmd
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	IWDG_WriteAccessCmd:
  27              	.LVL0:
  28              	.LFB123:
  29              		.file 1 "STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c"
   1:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /**
   2:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   ******************************************************************************
   3:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @file    stm32f4xx_iwdg.c
   4:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @author  MCD Application Team
   5:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @version V1.8.1
   6:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @date    27-January-2022
   7:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *          functionalities of the Independent watchdog (IWDG) peripheral:           
   9:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *           + Prescaler and Counter configuration
  10:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *           + IWDG activation
  11:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *           + Flag management
  12:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *
  13:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****     @verbatim    
  14:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  ===============================================================================
  15:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****                           ##### IWDG features #####
  16:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  ===============================================================================
  17:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****     [..]  
  18:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       The IWDG can be started by either software or hardware (configurable
  19:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       through option byte).
  20:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****               
  21:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       The IWDG is clocked by its own dedicated low-speed clock (LSI) and
  22:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       thus stays active even if the main clock fails.
  23:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       Once the IWDG is started, the LSI is forced ON and cannot be disabled
  24:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       (LSI cannot be disabled too), and the counter starts counting down from 
  25:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       the reset value of 0xFFF. When it reaches the end of count value (0x000)
  26:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       a system reset is generated.
  27:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       The IWDG counter should be reloaded at regular intervals to prevent
  28:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       an MCU reset.
  29:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****                              
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s 			page 2


  30:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       The IWDG is implemented in the VDD voltage domain that is still functional
  31:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       in STOP and STANDBY mode (IWDG reset can wake-up from STANDBY).          
  32:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****               
  33:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       IWDGRST flag in RCC_CSR register can be used to inform when a IWDG
  34:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       reset occurs.
  35:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****               
  36:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       Min-max timeout value @32KHz (LSI): ~125us / ~32.7s
  37:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       The IWDG timeout may vary due to LSI frequency dispersion. STM32F4xx
  38:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       devices provide the capability to measure the LSI frequency (LSI clock
  39:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       connected internally to TIM5 CH4 input capture). The measured value
  40:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       can be used to have an IWDG timeout with an acceptable accuracy. 
  41:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       For more information, please refer to the STM32F4xx Reference manual
  42:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****             
  43:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****                      ##### How to use this driver #####
  44:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  ===============================================================================
  45:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****     [..]
  46:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       (#) Enable write access to IWDG_PR and IWDG_RLR registers using
  47:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****           IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable) function
  48:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****                  
  49:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       (#) Configure the IWDG prescaler using IWDG_SetPrescaler() function
  50:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****               
  51:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       (#) Configure the IWDG counter value using IWDG_SetReload() function.
  52:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****           This value will be loaded in the IWDG counter each time the counter
  53:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****           is reloaded, then the IWDG will start counting down from this value.
  54:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****               
  55:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       (#) Start the IWDG using IWDG_Enable() function, when the IWDG is used
  56:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****           in software mode (no need to enable the LSI, it will be enabled
  57:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****           by hardware)
  58:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****                
  59:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****       (#) Then the application program must reload the IWDG counter at regular
  60:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****           intervals during normal operation to prevent an MCU reset, using
  61:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****           IWDG_ReloadCounter() function.      
  62:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****             
  63:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****     @endverbatim    
  64:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   ******************************************************************************
  65:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @attention
  66:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *
  67:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * Copyright (c) 2016 STMicroelectronics.
  68:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * All rights reserved.
  69:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *
  70:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * This software is licensed under terms that can be found in the LICENSE file
  71:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * in the root directory of this software component.
  72:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  73:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *
  74:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   ******************************************************************************
  75:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */
  76:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
  77:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /* Includes ------------------------------------------------------------------*/
  78:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** #include "stm32f4xx_iwdg.h"
  79:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
  80:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  81:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @{
  82:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */
  83:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
  84:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG 
  85:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @brief IWDG driver modules
  86:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @{
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s 			page 3


  87:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */ 
  88:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
  89:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /* Private typedef -----------------------------------------------------------*/
  90:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /* Private define ------------------------------------------------------------*/
  91:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
  92:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /* KR register bit mask */
  93:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** #define KR_KEY_RELOAD    ((uint16_t)0xAAAA)
  94:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** #define KR_KEY_ENABLE    ((uint16_t)0xCCCC)
  95:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
  96:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /* Private macro -------------------------------------------------------------*/
  97:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /* Private variables ---------------------------------------------------------*/
  98:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /* Private function prototypes -----------------------------------------------*/
  99:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /* Private functions ---------------------------------------------------------*/
 100:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 101:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Private_Functions
 102:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @{
 103:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */
 104:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 105:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group1 Prescaler and Counter configuration functions
 106:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  *  @brief   Prescaler and Counter configuration functions
 107:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  *
 108:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** @verbatim   
 109:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  ===============================================================================
 110:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****               ##### Prescaler and Counter configuration functions #####
 111:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 112:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 113:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** @endverbatim
 114:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @{
 115:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */
 116:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 117:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /**
 118:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @brief  Enables or disables write access to IWDG_PR and IWDG_RLR registers.
 119:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @param  IWDG_WriteAccess: new state of write access to IWDG_PR and IWDG_RLR registers.
 120:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 121:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_WriteAccess_Enable: Enable write access to IWDG_PR and IWDG_RLR registers
 122:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_WriteAccess_Disable: Disable write access to IWDG_PR and IWDG_RLR register
 123:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @retval None
 124:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */
 125:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
 126:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** {
  30              		.loc 1 126 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 127:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 128:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
  35              		.loc 1 128 3 view .LVU1
 129:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   IWDG->KR = IWDG_WriteAccess;
  36              		.loc 1 129 3 view .LVU2
  37              		.loc 1 129 12 is_stmt 0 view .LVU3
  38 0000 014B     		ldr	r3, .L2
  39 0002 1860     		str	r0, [r3]
 130:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** }
  40              		.loc 1 130 1 view .LVU4
  41 0004 7047     		bx	lr
  42              	.L3:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s 			page 4


  43 0006 00BF     		.align	2
  44              	.L2:
  45 0008 00300040 		.word	1073754112
  46              		.cfi_endproc
  47              	.LFE123:
  49              		.section	.text.IWDG_SetPrescaler,"ax",%progbits
  50              		.align	1
  51              		.global	IWDG_SetPrescaler
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv4-sp-d16
  57              	IWDG_SetPrescaler:
  58              	.LVL1:
  59              	.LFB124:
 131:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 132:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /**
 133:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @brief  Sets IWDG Prescaler value.
 134:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @param  IWDG_Prescaler: specifies the IWDG Prescaler value.
 135:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 136:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_4: IWDG prescaler set to 4
 137:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_8: IWDG prescaler set to 8
 138:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_16: IWDG prescaler set to 16
 139:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_32: IWDG prescaler set to 32
 140:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_64: IWDG prescaler set to 64
 141:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_128: IWDG prescaler set to 128
 142:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_256: IWDG prescaler set to 256
 143:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @retval None
 144:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */
 145:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
 146:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** {
  60              		.loc 1 146 1 is_stmt 1 view -0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
 147:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 148:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
  65              		.loc 1 148 3 view .LVU6
 149:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   IWDG->PR = IWDG_Prescaler;
  66              		.loc 1 149 3 view .LVU7
  67              		.loc 1 149 12 is_stmt 0 view .LVU8
  68 0000 014B     		ldr	r3, .L5
  69 0002 5860     		str	r0, [r3, #4]
 150:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** }
  70              		.loc 1 150 1 view .LVU9
  71 0004 7047     		bx	lr
  72              	.L6:
  73 0006 00BF     		.align	2
  74              	.L5:
  75 0008 00300040 		.word	1073754112
  76              		.cfi_endproc
  77              	.LFE124:
  79              		.section	.text.IWDG_SetReload,"ax",%progbits
  80              		.align	1
  81              		.global	IWDG_SetReload
  82              		.syntax unified
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s 			page 5


  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	IWDG_SetReload:
  88              	.LVL2:
  89              	.LFB125:
 151:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 152:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /**
 153:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @brief  Sets IWDG Reload value.
 154:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @param  Reload: specifies the IWDG Reload value.
 155:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *          This parameter must be a number between 0 and 0x0FFF.
 156:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @retval None
 157:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */
 158:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** void IWDG_SetReload(uint16_t Reload)
 159:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** {
  90              		.loc 1 159 1 is_stmt 1 view -0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
 160:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 161:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_RELOAD(Reload));
  95              		.loc 1 161 3 view .LVU11
 162:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   IWDG->RLR = Reload;
  96              		.loc 1 162 3 view .LVU12
  97              		.loc 1 162 13 is_stmt 0 view .LVU13
  98 0000 014B     		ldr	r3, .L8
  99 0002 9860     		str	r0, [r3, #8]
 163:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** }
 100              		.loc 1 163 1 view .LVU14
 101 0004 7047     		bx	lr
 102              	.L9:
 103 0006 00BF     		.align	2
 104              	.L8:
 105 0008 00300040 		.word	1073754112
 106              		.cfi_endproc
 107              	.LFE125:
 109              		.section	.text.IWDG_ReloadCounter,"ax",%progbits
 110              		.align	1
 111              		.global	IWDG_ReloadCounter
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu fpv4-sp-d16
 117              	IWDG_ReloadCounter:
 118              	.LFB126:
 164:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 165:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /**
 166:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @brief  Reloads IWDG counter with value defined in the reload register
 167:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *         (write access to IWDG_PR and IWDG_RLR registers disabled).
 168:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @param  None
 169:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @retval None
 170:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */
 171:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** void IWDG_ReloadCounter(void)
 172:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** {
 119              		.loc 1 172 1 is_stmt 1 view -0
 120              		.cfi_startproc
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s 			page 6


 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 173:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   IWDG->KR = KR_KEY_RELOAD;
 124              		.loc 1 173 3 view .LVU16
 125              		.loc 1 173 12 is_stmt 0 view .LVU17
 126 0000 024B     		ldr	r3, .L11
 127 0002 4AF6AA22 		movw	r2, #43690
 128 0006 1A60     		str	r2, [r3]
 174:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** }
 129              		.loc 1 174 1 view .LVU18
 130 0008 7047     		bx	lr
 131              	.L12:
 132 000a 00BF     		.align	2
 133              	.L11:
 134 000c 00300040 		.word	1073754112
 135              		.cfi_endproc
 136              	.LFE126:
 138              		.section	.text.IWDG_Enable,"ax",%progbits
 139              		.align	1
 140              		.global	IWDG_Enable
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv4-sp-d16
 146              	IWDG_Enable:
 147              	.LFB127:
 175:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 176:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /**
 177:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @}
 178:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */
 179:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 180:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group2 IWDG activation function
 181:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  *  @brief   IWDG activation function 
 182:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  *
 183:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** @verbatim   
 184:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  ===============================================================================
 185:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****                     ##### IWDG activation function #####
 186:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 187:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 188:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** @endverbatim
 189:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @{
 190:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */
 191:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 192:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /**
 193:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @brief  Enables IWDG (write access to IWDG_PR and IWDG_RLR registers disabled).
 194:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @param  None
 195:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @retval None
 196:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */
 197:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** void IWDG_Enable(void)
 198:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** {
 148              		.loc 1 198 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 199:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   IWDG->KR = KR_KEY_ENABLE;
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s 			page 7


 153              		.loc 1 199 3 view .LVU20
 154              		.loc 1 199 12 is_stmt 0 view .LVU21
 155 0000 024B     		ldr	r3, .L14
 156 0002 4CF6CC42 		movw	r2, #52428
 157 0006 1A60     		str	r2, [r3]
 200:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** }
 158              		.loc 1 200 1 view .LVU22
 159 0008 7047     		bx	lr
 160              	.L15:
 161 000a 00BF     		.align	2
 162              	.L14:
 163 000c 00300040 		.word	1073754112
 164              		.cfi_endproc
 165              	.LFE127:
 167              		.section	.text.IWDG_GetFlagStatus,"ax",%progbits
 168              		.align	1
 169              		.global	IWDG_GetFlagStatus
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
 175              	IWDG_GetFlagStatus:
 176              	.LVL3:
 177              	.LFB128:
 201:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 202:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /**
 203:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @}
 204:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */
 205:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 206:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group3 Flag management function 
 207:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  *  @brief  Flag management function  
 208:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  *
 209:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** @verbatim   
 210:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  ===============================================================================
 211:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****                     ##### Flag management function #####
 212:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 213:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 214:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** @endverbatim
 215:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @{
 216:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */
 217:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** 
 218:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** /**
 219:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @brief  Checks whether the specified IWDG flag is set or not.
 220:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @param  IWDG_FLAG: specifies the flag to check.
 221:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 222:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_FLAG_PVU: Prescaler Value Update on going
 223:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_FLAG_RVU: Reload Value Update on going
 224:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   * @retval The new state of IWDG_FLAG (SET or RESET).
 225:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   */
 226:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
 227:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** {
 178              		.loc 1 227 1 is_stmt 1 view -0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 228:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   FlagStatus bitstatus = RESET;
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s 			page 8


 183              		.loc 1 228 3 view .LVU24
 229:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 230:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_FLAG(IWDG_FLAG));
 184              		.loc 1 230 3 view .LVU25
 231:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
 185              		.loc 1 231 3 view .LVU26
 186              		.loc 1 231 12 is_stmt 0 view .LVU27
 187 0000 034B     		ldr	r3, .L19
 188 0002 DB68     		ldr	r3, [r3, #12]
 189              		.loc 1 231 6 view .LVU28
 190 0004 1842     		tst	r0, r3
 191 0006 01D0     		beq	.L18
 232:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   {
 233:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****     bitstatus = SET;
 192              		.loc 1 233 15 view .LVU29
 193 0008 0120     		movs	r0, #1
 194              	.LVL4:
 195              		.loc 1 233 15 view .LVU30
 196 000a 7047     		bx	lr
 197              	.LVL5:
 198              	.L18:
 234:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   }
 235:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   else
 236:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   {
 237:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****     bitstatus = RESET;
 199              		.loc 1 237 15 view .LVU31
 200 000c 0020     		movs	r0, #0
 201              	.LVL6:
 238:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   }
 239:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   /* Return the flag status */
 240:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c ****   return bitstatus;
 202              		.loc 1 240 3 is_stmt 1 view .LVU32
 241:STM32F4xx_LIB/periph/src/stm32f4xx_iwdg.c **** }
 203              		.loc 1 241 1 is_stmt 0 view .LVU33
 204 000e 7047     		bx	lr
 205              	.L20:
 206              		.align	2
 207              	.L19:
 208 0010 00300040 		.word	1073754112
 209              		.cfi_endproc
 210              	.LFE128:
 212              		.text
 213              	.Letext0:
 214              		.file 2 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\machine\\_default_types.h"
 215              		.file 3 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 216              		.file 4 "STM32F4xx_LIB/core/core_cm4.h"
 217              		.file 5 "User/system_stm32f4xx.h"
 218              		.file 6 "User/stm32f4xx.h"
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_iwdg.c
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:18     .text.IWDG_WriteAccessCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:26     .text.IWDG_WriteAccessCmd:00000000 IWDG_WriteAccessCmd
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:45     .text.IWDG_WriteAccessCmd:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:50     .text.IWDG_SetPrescaler:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:57     .text.IWDG_SetPrescaler:00000000 IWDG_SetPrescaler
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:75     .text.IWDG_SetPrescaler:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:80     .text.IWDG_SetReload:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:87     .text.IWDG_SetReload:00000000 IWDG_SetReload
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:105    .text.IWDG_SetReload:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:110    .text.IWDG_ReloadCounter:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:117    .text.IWDG_ReloadCounter:00000000 IWDG_ReloadCounter
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:134    .text.IWDG_ReloadCounter:0000000c $d
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:139    .text.IWDG_Enable:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:146    .text.IWDG_Enable:00000000 IWDG_Enable
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:163    .text.IWDG_Enable:0000000c $d
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:168    .text.IWDG_GetFlagStatus:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:175    .text.IWDG_GetFlagStatus:00000000 IWDG_GetFlagStatus
C:\Users\æ©€Ú\AppData\Local\Temp\ccDpRsSh.s:208    .text.IWDG_GetFlagStatus:00000010 $d

NO UNDEFINED SYMBOLS
