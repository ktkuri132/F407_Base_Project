ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hash_md5.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HASH_MD5,"ax",%progbits
  18              		.align	1
  19              		.global	HASH_MD5
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HASH_MD5:
  27              	.LVL0:
  28              	.LFB123:
  29              		.file 1 "STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c"
   1:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** /**
   2:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   ******************************************************************************
   3:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @file    stm32f4xx_hash_md5.c
   4:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @author  MCD Application Team
   5:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @version V1.8.1
   6:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @date    27-January-2022
   7:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @brief   This file provides high level functions to compute the HASH MD5 and
   8:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   *          HMAC MD5 Digest of an input message.
   9:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   *          It uses the stm32f4xx_hash.c/.h drivers to access the STM32F4xx HASH
  10:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   *          peripheral.
  11:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   *
  12:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** @verbatim
  13:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****  ===================================================================
  14:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****                   ##### How to use this driver #####
  15:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****  ===================================================================
  16:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****  [..]
  17:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****    (#) Enable The HASH controller clock using 
  18:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_HASH, ENABLE); function.
  19:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   
  20:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****    (#) Calculate the HASH MD5 Digest using HASH_MD5() function.
  21:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   
  22:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****    (#) Calculate the HMAC MD5 Digest using HMAC_MD5() function.
  23:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   
  24:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** @endverbatim
  25:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   *
  26:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   ******************************************************************************
  27:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @attention
  28:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   *
  29:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * Copyright (c) 2016 STMicroelectronics.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 2


  30:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * All rights reserved.
  31:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   *
  32:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * This software is licensed under terms that can be found in the LICENSE file
  33:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * in the root directory of this software component.
  34:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  35:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   *
  36:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   ******************************************************************************
  37:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   */
  38:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
  39:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** /* Includes ------------------------------------------------------------------*/
  40:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** #include "stm32f4xx_hash.h"
  41:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
  42:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  43:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @{
  44:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   */
  45:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
  46:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** /** @defgroup HASH 
  47:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @brief HASH driver modules
  48:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @{
  49:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   */
  50:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
  51:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** /* Private typedef -----------------------------------------------------------*/
  52:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** /* Private define ------------------------------------------------------------*/
  53:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** #define MD5BUSY_TIMEOUT    ((uint32_t) 0x00010000)
  54:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
  55:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** /* Private macro -------------------------------------------------------------*/
  56:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** /* Private variables ---------------------------------------------------------*/
  57:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** /* Private function prototypes -----------------------------------------------*/
  58:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** /* Private functions ---------------------------------------------------------*/
  59:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
  60:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** /** @defgroup HASH_Private_Functions
  61:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @{
  62:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   */ 
  63:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
  64:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** /** @defgroup HASH_Group7 High Level MD5 functions
  65:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****  *  @brief   High Level MD5 Hash and HMAC functions 
  66:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****  *
  67:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** @verbatim   
  68:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****  ===============================================================================
  69:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****               ##### High Level MD5 Hash and HMAC functions #####
  70:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****  ===============================================================================
  71:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
  72:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
  73:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** @endverbatim
  74:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @{
  75:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   */
  76:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
  77:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** /**
  78:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @brief  Compute the HASH MD5 digest.
  79:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @param  Input: pointer to the Input buffer to be treated.
  80:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @param  Ilen: length of the Input buffer.
  81:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @param  Output: the returned digest
  82:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @retval An ErrorStatus enumeration value:
  83:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   *          - SUCCESS: digest computation done
  84:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   *          - ERROR: digest computation failed
  85:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   */
  86:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** ErrorStatus HASH_MD5(uint8_t *Input, uint32_t Ilen, uint8_t Output[16])
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 3


  87:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** {
  30              		.loc 1 87 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 56
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 87 1 is_stmt 0 view .LVU1
  35 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 20
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8FB0     		sub	sp, sp, #60
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 80
  46 0004 0F46     		mov	r7, r1
  47 0006 1646     		mov	r6, r2
  88:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   HASH_InitTypeDef MD5_HASH_InitStructure;
  48              		.loc 1 88 3 is_stmt 1 view .LVU2
  89:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   HASH_MsgDigest MD5_MessageDigest;
  49              		.loc 1 89 3 view .LVU3
  90:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   __IO uint16_t nbvalidbitsdata = 0;
  50              		.loc 1 90 3 view .LVU4
  51              		.loc 1 90 17 is_stmt 0 view .LVU5
  52 0008 0024     		movs	r4, #0
  53 000a ADF80640 		strh	r4, [sp, #6]	@ movhi
  91:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   uint32_t i = 0;
  54              		.loc 1 91 3 is_stmt 1 view .LVU6
  55              	.LVL1:
  92:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   __IO uint32_t counter = 0;
  56              		.loc 1 92 3 view .LVU7
  57              		.loc 1 92 17 is_stmt 0 view .LVU8
  58 000e 0094     		str	r4, [sp]
  93:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   uint32_t busystatus = 0;
  59              		.loc 1 93 3 is_stmt 1 view .LVU9
  60              	.LVL2:
  94:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   ErrorStatus status = SUCCESS;
  61              		.loc 1 94 3 view .LVU10
  95:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   uint32_t inputaddr  = (uint32_t)Input;
  62              		.loc 1 95 3 view .LVU11
  63              		.loc 1 95 12 is_stmt 0 view .LVU12
  64 0010 0546     		mov	r5, r0
  65              	.LVL3:
  96:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   uint32_t outputaddr = (uint32_t)Output;
  66              		.loc 1 96 3 is_stmt 1 view .LVU13
  97:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
  98:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
  99:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* Number of valid bits in last word of the Input data */
 100:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   nbvalidbitsdata = 8 * (Ilen % 4);
  67              		.loc 1 100 3 view .LVU14
  68              		.loc 1 100 19 is_stmt 0 view .LVU15
  69 0012 01F00303 		and	r3, r1, #3
  70 0016 DB00     		lsls	r3, r3, #3
  71 0018 ADF80630 		strh	r3, [sp, #6]	@ movhi
 101:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 4


 102:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* HASH peripheral initialization */
 103:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   HASH_DeInit();
  72              		.loc 1 103 3 is_stmt 1 view .LVU16
  73 001c FFF7FEFF 		bl	HASH_DeInit
  74              	.LVL4:
 104:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 105:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* HASH Configuration */
 106:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_MD5;
  75              		.loc 1 106 3 view .LVU17
  76              		.loc 1 106 45 is_stmt 0 view .LVU18
  77 0020 8023     		movs	r3, #128
  78 0022 0A93     		str	r3, [sp, #40]
 107:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HASH;
  79              		.loc 1 107 3 is_stmt 1 view .LVU19
  80              		.loc 1 107 40 is_stmt 0 view .LVU20
  81 0024 0B94     		str	r4, [sp, #44]
 108:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
  82              		.loc 1 108 3 is_stmt 1 view .LVU21
  83              		.loc 1 108 40 is_stmt 0 view .LVU22
  84 0026 2023     		movs	r3, #32
  85 0028 0C93     		str	r3, [sp, #48]
 109:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   HASH_Init(&MD5_HASH_InitStructure);
  86              		.loc 1 109 3 is_stmt 1 view .LVU23
  87 002a 0AA8     		add	r0, sp, #40
  88 002c FFF7FEFF 		bl	HASH_Init
  89              	.LVL5:
 110:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 111:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* Configure the number of valid bits in last word of the data */
 112:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   HASH_SetLastWordValidBitsNbr(nbvalidbitsdata);
  90              		.loc 1 112 3 view .LVU24
  91 0030 BDF80600 		ldrh	r0, [sp, #6]
  92 0034 80B2     		uxth	r0, r0
  93 0036 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
  94              	.LVL6:
 113:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 114:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* Write the Input block in the IN FIFO */
 115:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   for(i=0; i<Ilen; i+=4)
  95              		.loc 1 115 3 view .LVU25
  96              	.L2:
  97              		.loc 1 115 12 discriminator 1 view .LVU26
  98              		.loc 1 115 3 is_stmt 0 discriminator 1 view .LVU27
  99 003a BC42     		cmp	r4, r7
 100 003c 05D2     		bcs	.L9
 116:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 117:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     HASH_DataIn(*(uint32_t*)inputaddr);
 101              		.loc 1 117 5 is_stmt 1 discriminator 3 view .LVU28
 102 003e 55F8040B 		ldr	r0, [r5], #4
 103              	.LVL7:
 104              		.loc 1 117 5 is_stmt 0 discriminator 3 view .LVU29
 105 0042 FFF7FEFF 		bl	HASH_DataIn
 106              	.LVL8:
 118:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     inputaddr+=4;
 107              		.loc 1 118 5 is_stmt 1 discriminator 3 view .LVU30
 115:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 108              		.loc 1 115 20 discriminator 3 view .LVU31
 115:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 109              		.loc 1 115 21 is_stmt 0 discriminator 3 view .LVU32
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 5


 110 0046 0434     		adds	r4, r4, #4
 111              	.LVL9:
 115:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 112              		.loc 1 115 21 discriminator 3 view .LVU33
 113 0048 F7E7     		b	.L2
 114              	.L9:
 119:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }
 120:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 121:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* Start the HASH processor */
 122:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   HASH_StartDigest();
 115              		.loc 1 122 3 is_stmt 1 view .LVU34
 116 004a FFF7FEFF 		bl	HASH_StartDigest
 117              	.LVL10:
 118              	.L5:
 123:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 124:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* wait until the Busy flag is RESET */
 125:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   do
 119              		.loc 1 125 3 discriminator 2 view .LVU35
 126:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 127:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 120              		.loc 1 127 5 discriminator 2 view .LVU36
 121              		.loc 1 127 18 is_stmt 0 discriminator 2 view .LVU37
 122 004e 0820     		movs	r0, #8
 123 0050 FFF7FEFF 		bl	HASH_GetFlagStatus
 124              	.LVL11:
 125              		.loc 1 127 16 discriminator 2 view .LVU38
 126 0054 0246     		mov	r2, r0
 127              	.LVL12:
 128:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     counter++;
 128              		.loc 1 128 5 is_stmt 1 discriminator 2 view .LVU39
 129              		.loc 1 128 12 is_stmt 0 discriminator 2 view .LVU40
 130 0056 009B     		ldr	r3, [sp]
 131 0058 0133     		adds	r3, r3, #1
 132 005a 0093     		str	r3, [sp]
 129:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 133              		.loc 1 129 10 is_stmt 1 discriminator 2 view .LVU41
 134              		.loc 1 129 20 is_stmt 0 discriminator 2 view .LVU42
 135 005c 009B     		ldr	r3, [sp]
 136              		.loc 1 129 3 discriminator 2 view .LVU43
 137 005e B3F5803F 		cmp	r3, #65536
 138 0062 01D0     		beq	.L4
 139              		.loc 1 129 40 discriminator 1 view .LVU44
 140 0064 0028     		cmp	r0, #0
 141 0066 F2D1     		bne	.L5
 142              	.L4:
 130:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 131:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   if (busystatus != RESET)
 143              		.loc 1 131 3 is_stmt 1 view .LVU45
 144              		.loc 1 131 6 is_stmt 0 view .LVU46
 145 0068 12B1     		cbz	r2, .L10
 132:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 133:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****      status = ERROR;
 146              		.loc 1 133 13 view .LVU47
 147 006a 0020     		movs	r0, #0
 148              	.LVL13:
 149              	.L6:
 134:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 6


 135:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   else
 136:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 137:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     /* Read the message digest */
 138:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     HASH_GetDigest(&MD5_MessageDigest);
 139:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[0]);
 140:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 141:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[1]);
 142:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 143:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[2]);
 144:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 145:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[3]);
 146:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }
 147:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   return status; 
 150              		.loc 1 147 3 is_stmt 1 view .LVU48
 148:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** }
 151              		.loc 1 148 1 is_stmt 0 view .LVU49
 152 006c 0FB0     		add	sp, sp, #60
 153              	.LCFI2:
 154              		.cfi_remember_state
 155              		.cfi_def_cfa_offset 20
 156              		@ sp needed
 157 006e F0BD     		pop	{r4, r5, r6, r7, pc}
 158              	.LVL14:
 159              	.L10:
 160              	.LCFI3:
 161              		.cfi_restore_state
 138:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[0]);
 162              		.loc 1 138 5 is_stmt 1 view .LVU50
 163 0070 02A8     		add	r0, sp, #8
 164              	.LVL15:
 138:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[0]);
 165              		.loc 1 138 5 is_stmt 0 view .LVU51
 166 0072 FFF7FEFF 		bl	HASH_GetDigest
 167              	.LVL16:
 139:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 168              		.loc 1 139 5 is_stmt 1 view .LVU52
 139:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 169              		.loc 1 139 33 is_stmt 0 view .LVU53
 170 0076 029B     		ldr	r3, [sp, #8]
 171              	.LVL17:
 172              	.LBB18:
 173              	.LBI18:
 174              		.file 2 "STM32F4xx_LIB/core/core_cmInstr.h"
   1:STM32F4xx_LIB/core/core_cmInstr.h **** /**************************************************************************//**
   2:STM32F4xx_LIB/core/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:STM32F4xx_LIB/core/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:STM32F4xx_LIB/core/core_cmInstr.h ****  * @version  V4.10
   5:STM32F4xx_LIB/core/core_cmInstr.h ****  * @date     18. March 2015
   6:STM32F4xx_LIB/core/core_cmInstr.h ****  *
   7:STM32F4xx_LIB/core/core_cmInstr.h ****  * @note
   8:STM32F4xx_LIB/core/core_cmInstr.h ****  *
   9:STM32F4xx_LIB/core/core_cmInstr.h ****  ******************************************************************************/
  10:STM32F4xx_LIB/core/core_cmInstr.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:STM32F4xx_LIB/core/core_cmInstr.h **** 
  12:STM32F4xx_LIB/core/core_cmInstr.h ****    All rights reserved.
  13:STM32F4xx_LIB/core/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:STM32F4xx_LIB/core/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 7


  15:STM32F4xx_LIB/core/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:STM32F4xx_LIB/core/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:STM32F4xx_LIB/core/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:STM32F4xx_LIB/core/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:STM32F4xx_LIB/core/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:STM32F4xx_LIB/core/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:STM32F4xx_LIB/core/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:STM32F4xx_LIB/core/core_cmInstr.h ****      specific prior written permission.
  23:STM32F4xx_LIB/core/core_cmInstr.h ****    *
  24:STM32F4xx_LIB/core/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:STM32F4xx_LIB/core/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:STM32F4xx_LIB/core/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:STM32F4xx_LIB/core/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:STM32F4xx_LIB/core/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:STM32F4xx_LIB/core/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:STM32F4xx_LIB/core/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:STM32F4xx_LIB/core/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:STM32F4xx_LIB/core/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:STM32F4xx_LIB/core/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:STM32F4xx_LIB/core/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:STM32F4xx_LIB/core/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:STM32F4xx_LIB/core/core_cmInstr.h **** 
  37:STM32F4xx_LIB/core/core_cmInstr.h **** 
  38:STM32F4xx_LIB/core/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:STM32F4xx_LIB/core/core_cmInstr.h **** 
  41:STM32F4xx_LIB/core/core_cmInstr.h **** 
  42:STM32F4xx_LIB/core/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:STM32F4xx_LIB/core/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:STM32F4xx_LIB/core/core_cmInstr.h ****   Access to dedicated instructions
  45:STM32F4xx_LIB/core/core_cmInstr.h ****   @{
  46:STM32F4xx_LIB/core/core_cmInstr.h **** */
  47:STM32F4xx_LIB/core/core_cmInstr.h **** 
  48:STM32F4xx_LIB/core/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:STM32F4xx_LIB/core/core_cmInstr.h **** /* ARM armcc specific functions */
  50:STM32F4xx_LIB/core/core_cmInstr.h **** 
  51:STM32F4xx_LIB/core/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:STM32F4xx_LIB/core/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
  54:STM32F4xx_LIB/core/core_cmInstr.h **** 
  55:STM32F4xx_LIB/core/core_cmInstr.h **** 
  56:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  No Operation
  57:STM32F4xx_LIB/core/core_cmInstr.h **** 
  58:STM32F4xx_LIB/core/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  60:STM32F4xx_LIB/core/core_cmInstr.h **** #define __NOP                             __nop
  61:STM32F4xx_LIB/core/core_cmInstr.h **** 
  62:STM32F4xx_LIB/core/core_cmInstr.h **** 
  63:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:STM32F4xx_LIB/core/core_cmInstr.h **** 
  65:STM32F4xx_LIB/core/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:STM32F4xx_LIB/core/core_cmInstr.h ****     until one of a number of events occurs.
  67:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  68:STM32F4xx_LIB/core/core_cmInstr.h **** #define __WFI                             __wfi
  69:STM32F4xx_LIB/core/core_cmInstr.h **** 
  70:STM32F4xx_LIB/core/core_cmInstr.h **** 
  71:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Wait For Event
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 8


  72:STM32F4xx_LIB/core/core_cmInstr.h **** 
  73:STM32F4xx_LIB/core/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:STM32F4xx_LIB/core/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  76:STM32F4xx_LIB/core/core_cmInstr.h **** #define __WFE                             __wfe
  77:STM32F4xx_LIB/core/core_cmInstr.h **** 
  78:STM32F4xx_LIB/core/core_cmInstr.h **** 
  79:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Send Event
  80:STM32F4xx_LIB/core/core_cmInstr.h **** 
  81:STM32F4xx_LIB/core/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  83:STM32F4xx_LIB/core/core_cmInstr.h **** #define __SEV                             __sev
  84:STM32F4xx_LIB/core/core_cmInstr.h **** 
  85:STM32F4xx_LIB/core/core_cmInstr.h **** 
  86:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:STM32F4xx_LIB/core/core_cmInstr.h **** 
  88:STM32F4xx_LIB/core/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:STM32F4xx_LIB/core/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:STM32F4xx_LIB/core/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  92:STM32F4xx_LIB/core/core_cmInstr.h **** #define __ISB() do {\
  93:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
  94:STM32F4xx_LIB/core/core_cmInstr.h ****                    __isb(0xF);\
  95:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
  96:STM32F4xx_LIB/core/core_cmInstr.h ****                 } while (0)
  97:STM32F4xx_LIB/core/core_cmInstr.h **** 
  98:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  99:STM32F4xx_LIB/core/core_cmInstr.h **** 
 100:STM32F4xx_LIB/core/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 101:STM32F4xx_LIB/core/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 102:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 103:STM32F4xx_LIB/core/core_cmInstr.h **** #define __DSB() do {\
 104:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
 105:STM32F4xx_LIB/core/core_cmInstr.h ****                    __dsb(0xF);\
 106:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
 107:STM32F4xx_LIB/core/core_cmInstr.h ****                 } while (0)
 108:STM32F4xx_LIB/core/core_cmInstr.h **** 
 109:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Data Memory Barrier
 110:STM32F4xx_LIB/core/core_cmInstr.h **** 
 111:STM32F4xx_LIB/core/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 112:STM32F4xx_LIB/core/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 113:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 114:STM32F4xx_LIB/core/core_cmInstr.h **** #define __DMB() do {\
 115:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
 116:STM32F4xx_LIB/core/core_cmInstr.h ****                    __dmb(0xF);\
 117:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
 118:STM32F4xx_LIB/core/core_cmInstr.h ****                 } while (0)
 119:STM32F4xx_LIB/core/core_cmInstr.h **** 
 120:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 121:STM32F4xx_LIB/core/core_cmInstr.h **** 
 122:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the byte order in integer value.
 123:STM32F4xx_LIB/core/core_cmInstr.h **** 
 124:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 125:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 126:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 127:STM32F4xx_LIB/core/core_cmInstr.h **** #define __REV                             __rev
 128:STM32F4xx_LIB/core/core_cmInstr.h **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 9


 129:STM32F4xx_LIB/core/core_cmInstr.h **** 
 130:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 131:STM32F4xx_LIB/core/core_cmInstr.h **** 
 132:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 133:STM32F4xx_LIB/core/core_cmInstr.h **** 
 134:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 135:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 136:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 137:STM32F4xx_LIB/core/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 138:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 139:STM32F4xx_LIB/core/core_cmInstr.h **** {
 140:STM32F4xx_LIB/core/core_cmInstr.h ****   rev16 r0, r0
 141:STM32F4xx_LIB/core/core_cmInstr.h ****   bx lr
 142:STM32F4xx_LIB/core/core_cmInstr.h **** }
 143:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 144:STM32F4xx_LIB/core/core_cmInstr.h **** 
 145:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 146:STM32F4xx_LIB/core/core_cmInstr.h **** 
 147:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 148:STM32F4xx_LIB/core/core_cmInstr.h **** 
 149:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 150:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 151:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 152:STM32F4xx_LIB/core/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 153:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 154:STM32F4xx_LIB/core/core_cmInstr.h **** {
 155:STM32F4xx_LIB/core/core_cmInstr.h ****   revsh r0, r0
 156:STM32F4xx_LIB/core/core_cmInstr.h ****   bx lr
 157:STM32F4xx_LIB/core/core_cmInstr.h **** }
 158:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 159:STM32F4xx_LIB/core/core_cmInstr.h **** 
 160:STM32F4xx_LIB/core/core_cmInstr.h **** 
 161:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 162:STM32F4xx_LIB/core/core_cmInstr.h **** 
 163:STM32F4xx_LIB/core/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 164:STM32F4xx_LIB/core/core_cmInstr.h **** 
 165:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to rotate
 166:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 167:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Rotated value
 168:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 169:STM32F4xx_LIB/core/core_cmInstr.h **** #define __ROR                             __ror
 170:STM32F4xx_LIB/core/core_cmInstr.h **** 
 171:STM32F4xx_LIB/core/core_cmInstr.h **** 
 172:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Breakpoint
 173:STM32F4xx_LIB/core/core_cmInstr.h **** 
 174:STM32F4xx_LIB/core/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 175:STM32F4xx_LIB/core/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 176:STM32F4xx_LIB/core/core_cmInstr.h **** 
 177:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 178:STM32F4xx_LIB/core/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 179:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 180:STM32F4xx_LIB/core/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 181:STM32F4xx_LIB/core/core_cmInstr.h **** 
 182:STM32F4xx_LIB/core/core_cmInstr.h **** 
 183:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse bit order of value
 184:STM32F4xx_LIB/core/core_cmInstr.h **** 
 185:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the bit order of the given value.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 10


 186:STM32F4xx_LIB/core/core_cmInstr.h **** 
 187:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 188:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 189:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 190:STM32F4xx_LIB/core/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 191:STM32F4xx_LIB/core/core_cmInstr.h ****   #define __RBIT                          __rbit
 192:STM32F4xx_LIB/core/core_cmInstr.h **** #else
 193:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 194:STM32F4xx_LIB/core/core_cmInstr.h **** {
 195:STM32F4xx_LIB/core/core_cmInstr.h ****   uint32_t result;
 196:STM32F4xx_LIB/core/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 197:STM32F4xx_LIB/core/core_cmInstr.h **** 
 198:STM32F4xx_LIB/core/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
 199:STM32F4xx_LIB/core/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 200:STM32F4xx_LIB/core/core_cmInstr.h ****   {
 201:STM32F4xx_LIB/core/core_cmInstr.h ****     result <<= 1;
 202:STM32F4xx_LIB/core/core_cmInstr.h ****     result |= value & 1;
 203:STM32F4xx_LIB/core/core_cmInstr.h ****     s--;
 204:STM32F4xx_LIB/core/core_cmInstr.h ****   }
 205:STM32F4xx_LIB/core/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 206:STM32F4xx_LIB/core/core_cmInstr.h ****   return(result);
 207:STM32F4xx_LIB/core/core_cmInstr.h **** }
 208:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 209:STM32F4xx_LIB/core/core_cmInstr.h **** 
 210:STM32F4xx_LIB/core/core_cmInstr.h **** 
 211:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Count leading zeros
 212:STM32F4xx_LIB/core/core_cmInstr.h **** 
 213:STM32F4xx_LIB/core/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 214:STM32F4xx_LIB/core/core_cmInstr.h **** 
 215:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 216:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             number of leading zeros in value
 217:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 218:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CLZ                             __clz
 219:STM32F4xx_LIB/core/core_cmInstr.h **** 
 220:STM32F4xx_LIB/core/core_cmInstr.h **** 
 221:STM32F4xx_LIB/core/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 222:STM32F4xx_LIB/core/core_cmInstr.h **** 
 223:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 224:STM32F4xx_LIB/core/core_cmInstr.h **** 
 225:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 8 bit value.
 226:STM32F4xx_LIB/core/core_cmInstr.h **** 
 227:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 228:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 229:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 230:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 231:STM32F4xx_LIB/core/core_cmInstr.h **** 
 232:STM32F4xx_LIB/core/core_cmInstr.h **** 
 233:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 234:STM32F4xx_LIB/core/core_cmInstr.h **** 
 235:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 16 bit values.
 236:STM32F4xx_LIB/core/core_cmInstr.h **** 
 237:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 238:STM32F4xx_LIB/core/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 239:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 240:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 241:STM32F4xx_LIB/core/core_cmInstr.h **** 
 242:STM32F4xx_LIB/core/core_cmInstr.h **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 11


 243:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 244:STM32F4xx_LIB/core/core_cmInstr.h **** 
 245:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 32 bit values.
 246:STM32F4xx_LIB/core/core_cmInstr.h **** 
 247:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 248:STM32F4xx_LIB/core/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 249:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 250:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 251:STM32F4xx_LIB/core/core_cmInstr.h **** 
 252:STM32F4xx_LIB/core/core_cmInstr.h **** 
 253:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 254:STM32F4xx_LIB/core/core_cmInstr.h **** 
 255:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive STR instruction for 8 bit values.
 256:STM32F4xx_LIB/core/core_cmInstr.h **** 
 257:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 258:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 259:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          0  Function succeeded
 260:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          1  Function failed
 261:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 262:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 263:STM32F4xx_LIB/core/core_cmInstr.h **** 
 264:STM32F4xx_LIB/core/core_cmInstr.h **** 
 265:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 266:STM32F4xx_LIB/core/core_cmInstr.h **** 
 267:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive STR instruction for 16 bit values.
 268:STM32F4xx_LIB/core/core_cmInstr.h **** 
 269:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 270:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 271:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          0  Function succeeded
 272:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          1  Function failed
 273:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 274:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 275:STM32F4xx_LIB/core/core_cmInstr.h **** 
 276:STM32F4xx_LIB/core/core_cmInstr.h **** 
 277:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 278:STM32F4xx_LIB/core/core_cmInstr.h **** 
 279:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive STR instruction for 32 bit values.
 280:STM32F4xx_LIB/core/core_cmInstr.h **** 
 281:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 282:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 283:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          0  Function succeeded
 284:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          1  Function failed
 285:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 286:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 287:STM32F4xx_LIB/core/core_cmInstr.h **** 
 288:STM32F4xx_LIB/core/core_cmInstr.h **** 
 289:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 290:STM32F4xx_LIB/core/core_cmInstr.h **** 
 291:STM32F4xx_LIB/core/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 292:STM32F4xx_LIB/core/core_cmInstr.h **** 
 293:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 294:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CLREX                           __clrex
 295:STM32F4xx_LIB/core/core_cmInstr.h **** 
 296:STM32F4xx_LIB/core/core_cmInstr.h **** 
 297:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Signed Saturate
 298:STM32F4xx_LIB/core/core_cmInstr.h **** 
 299:STM32F4xx_LIB/core/core_cmInstr.h ****     This function saturates a signed value.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 12


 300:STM32F4xx_LIB/core/core_cmInstr.h **** 
 301:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 302:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 303:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             Saturated value
 304:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 305:STM32F4xx_LIB/core/core_cmInstr.h **** #define __SSAT                            __ssat
 306:STM32F4xx_LIB/core/core_cmInstr.h **** 
 307:STM32F4xx_LIB/core/core_cmInstr.h **** 
 308:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Unsigned Saturate
 309:STM32F4xx_LIB/core/core_cmInstr.h **** 
 310:STM32F4xx_LIB/core/core_cmInstr.h ****     This function saturates an unsigned value.
 311:STM32F4xx_LIB/core/core_cmInstr.h **** 
 312:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 313:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 314:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             Saturated value
 315:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 316:STM32F4xx_LIB/core/core_cmInstr.h **** #define __USAT                            __usat
 317:STM32F4xx_LIB/core/core_cmInstr.h **** 
 318:STM32F4xx_LIB/core/core_cmInstr.h **** 
 319:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Rotate Right with Extend (32 bit)
 320:STM32F4xx_LIB/core/core_cmInstr.h **** 
 321:STM32F4xx_LIB/core/core_cmInstr.h ****     This function moves each bit of a bitstring right by one bit.
 322:STM32F4xx_LIB/core/core_cmInstr.h ****     The carry input is shifted in at the left end of the bitstring.
 323:STM32F4xx_LIB/core/core_cmInstr.h **** 
 324:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to rotate
 325:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Rotated value
 326:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 327:STM32F4xx_LIB/core/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 328:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((section(".rrx_text"))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)
 329:STM32F4xx_LIB/core/core_cmInstr.h **** {
 330:STM32F4xx_LIB/core/core_cmInstr.h ****   rrx r0, r0
 331:STM32F4xx_LIB/core/core_cmInstr.h ****   bx lr
 332:STM32F4xx_LIB/core/core_cmInstr.h **** }
 333:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 334:STM32F4xx_LIB/core/core_cmInstr.h **** 
 335:STM32F4xx_LIB/core/core_cmInstr.h **** 
 336:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDRT Unprivileged (8 bit)
 337:STM32F4xx_LIB/core/core_cmInstr.h **** 
 338:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 8 bit value.
 339:STM32F4xx_LIB/core/core_cmInstr.h **** 
 340:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 341:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 342:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 343:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDRBT(ptr)                      ((uint8_t )  __ldrt(ptr))
 344:STM32F4xx_LIB/core/core_cmInstr.h **** 
 345:STM32F4xx_LIB/core/core_cmInstr.h **** 
 346:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDRT Unprivileged (16 bit)
 347:STM32F4xx_LIB/core/core_cmInstr.h **** 
 348:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 16 bit values.
 349:STM32F4xx_LIB/core/core_cmInstr.h **** 
 350:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 351:STM32F4xx_LIB/core/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 352:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 353:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDRHT(ptr)                      ((uint16_t)  __ldrt(ptr))
 354:STM32F4xx_LIB/core/core_cmInstr.h **** 
 355:STM32F4xx_LIB/core/core_cmInstr.h **** 
 356:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDRT Unprivileged (32 bit)
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 13


 357:STM32F4xx_LIB/core/core_cmInstr.h **** 
 358:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 32 bit values.
 359:STM32F4xx_LIB/core/core_cmInstr.h **** 
 360:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 361:STM32F4xx_LIB/core/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 362:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 363:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDRT(ptr)                       ((uint32_t ) __ldrt(ptr))
 364:STM32F4xx_LIB/core/core_cmInstr.h **** 
 365:STM32F4xx_LIB/core/core_cmInstr.h **** 
 366:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STRT Unprivileged (8 bit)
 367:STM32F4xx_LIB/core/core_cmInstr.h **** 
 368:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 8 bit values.
 369:STM32F4xx_LIB/core/core_cmInstr.h **** 
 370:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 371:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 372:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 373:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STRBT(value, ptr)               __strt(value, ptr)
 374:STM32F4xx_LIB/core/core_cmInstr.h **** 
 375:STM32F4xx_LIB/core/core_cmInstr.h **** 
 376:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STRT Unprivileged (16 bit)
 377:STM32F4xx_LIB/core/core_cmInstr.h **** 
 378:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 16 bit values.
 379:STM32F4xx_LIB/core/core_cmInstr.h **** 
 380:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 381:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 382:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 383:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STRHT(value, ptr)               __strt(value, ptr)
 384:STM32F4xx_LIB/core/core_cmInstr.h **** 
 385:STM32F4xx_LIB/core/core_cmInstr.h **** 
 386:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STRT Unprivileged (32 bit)
 387:STM32F4xx_LIB/core/core_cmInstr.h **** 
 388:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 32 bit values.
 389:STM32F4xx_LIB/core/core_cmInstr.h **** 
 390:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 391:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 392:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 393:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STRT(value, ptr)                __strt(value, ptr)
 394:STM32F4xx_LIB/core/core_cmInstr.h **** 
 395:STM32F4xx_LIB/core/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 396:STM32F4xx_LIB/core/core_cmInstr.h **** 
 397:STM32F4xx_LIB/core/core_cmInstr.h **** 
 398:STM32F4xx_LIB/core/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 399:STM32F4xx_LIB/core/core_cmInstr.h **** /* GNU gcc specific functions */
 400:STM32F4xx_LIB/core/core_cmInstr.h **** 
 401:STM32F4xx_LIB/core/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 402:STM32F4xx_LIB/core/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 403:STM32F4xx_LIB/core/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 404:STM32F4xx_LIB/core/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 405:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 406:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 407:STM32F4xx_LIB/core/core_cmInstr.h **** #else
 408:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 409:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 410:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 411:STM32F4xx_LIB/core/core_cmInstr.h **** 
 412:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  No Operation
 413:STM32F4xx_LIB/core/core_cmInstr.h **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 14


 414:STM32F4xx_LIB/core/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 415:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 416:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 417:STM32F4xx_LIB/core/core_cmInstr.h **** {
 418:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("nop");
 419:STM32F4xx_LIB/core/core_cmInstr.h **** }
 420:STM32F4xx_LIB/core/core_cmInstr.h **** 
 421:STM32F4xx_LIB/core/core_cmInstr.h **** 
 422:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Wait For Interrupt
 423:STM32F4xx_LIB/core/core_cmInstr.h **** 
 424:STM32F4xx_LIB/core/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 425:STM32F4xx_LIB/core/core_cmInstr.h ****     until one of a number of events occurs.
 426:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 427:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 428:STM32F4xx_LIB/core/core_cmInstr.h **** {
 429:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("wfi");
 430:STM32F4xx_LIB/core/core_cmInstr.h **** }
 431:STM32F4xx_LIB/core/core_cmInstr.h **** 
 432:STM32F4xx_LIB/core/core_cmInstr.h **** 
 433:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Wait For Event
 434:STM32F4xx_LIB/core/core_cmInstr.h **** 
 435:STM32F4xx_LIB/core/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 436:STM32F4xx_LIB/core/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 437:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 438:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 439:STM32F4xx_LIB/core/core_cmInstr.h **** {
 440:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("wfe");
 441:STM32F4xx_LIB/core/core_cmInstr.h **** }
 442:STM32F4xx_LIB/core/core_cmInstr.h **** 
 443:STM32F4xx_LIB/core/core_cmInstr.h **** 
 444:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Send Event
 445:STM32F4xx_LIB/core/core_cmInstr.h **** 
 446:STM32F4xx_LIB/core/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 447:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 448:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 449:STM32F4xx_LIB/core/core_cmInstr.h **** {
 450:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("sev");
 451:STM32F4xx_LIB/core/core_cmInstr.h **** }
 452:STM32F4xx_LIB/core/core_cmInstr.h **** 
 453:STM32F4xx_LIB/core/core_cmInstr.h **** 
 454:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 455:STM32F4xx_LIB/core/core_cmInstr.h **** 
 456:STM32F4xx_LIB/core/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 457:STM32F4xx_LIB/core/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 458:STM32F4xx_LIB/core/core_cmInstr.h ****     memory, after the instruction has been completed.
 459:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 460:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 461:STM32F4xx_LIB/core/core_cmInstr.h **** {
 462:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("isb 0xF":::"memory");
 463:STM32F4xx_LIB/core/core_cmInstr.h **** }
 464:STM32F4xx_LIB/core/core_cmInstr.h **** 
 465:STM32F4xx_LIB/core/core_cmInstr.h **** 
 466:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 467:STM32F4xx_LIB/core/core_cmInstr.h **** 
 468:STM32F4xx_LIB/core/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 469:STM32F4xx_LIB/core/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 470:STM32F4xx_LIB/core/core_cmInstr.h ****  */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 15


 471:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 472:STM32F4xx_LIB/core/core_cmInstr.h **** {
 473:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("dsb 0xF":::"memory");
 474:STM32F4xx_LIB/core/core_cmInstr.h **** }
 475:STM32F4xx_LIB/core/core_cmInstr.h **** 
 476:STM32F4xx_LIB/core/core_cmInstr.h **** 
 477:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Data Memory Barrier
 478:STM32F4xx_LIB/core/core_cmInstr.h **** 
 479:STM32F4xx_LIB/core/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 480:STM32F4xx_LIB/core/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 481:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 482:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 483:STM32F4xx_LIB/core/core_cmInstr.h **** {
 484:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("dmb 0xF":::"memory");
 485:STM32F4xx_LIB/core/core_cmInstr.h **** }
 486:STM32F4xx_LIB/core/core_cmInstr.h **** 
 487:STM32F4xx_LIB/core/core_cmInstr.h **** 
 488:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 489:STM32F4xx_LIB/core/core_cmInstr.h **** 
 490:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the byte order in integer value.
 491:STM32F4xx_LIB/core/core_cmInstr.h **** 
 492:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 493:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 494:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 495:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 175              		.loc 2 495 57 is_stmt 1 view .LVU54
 176              	.LBB19:
 496:STM32F4xx_LIB/core/core_cmInstr.h **** {
 497:STM32F4xx_LIB/core/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 498:STM32F4xx_LIB/core/core_cmInstr.h ****   return __builtin_bswap32(value);
 177              		.loc 2 498 3 view .LVU55
 178              		.loc 2 498 10 is_stmt 0 view .LVU56
 179 0078 1BBA     		rev	r3, r3
 180              	.LVL18:
 181              		.loc 2 498 10 view .LVU57
 182              	.LBE19:
 183              	.LBE18:
 139:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 184              		.loc 1 139 31 view .LVU58
 185 007a 3360     		str	r3, [r6]
 140:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[1]);
 186              		.loc 1 140 5 is_stmt 1 view .LVU59
 187              	.LVL19:
 141:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 188              		.loc 1 141 5 view .LVU60
 141:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 189              		.loc 1 141 33 is_stmt 0 view .LVU61
 190 007c 039B     		ldr	r3, [sp, #12]
 191              	.LVL20:
 192              	.LBB20:
 193              	.LBI20:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 194              		.loc 2 495 57 is_stmt 1 view .LVU62
 195              	.LBB21:
 196              		.loc 2 498 3 view .LVU63
 197              		.loc 2 498 10 is_stmt 0 view .LVU64
 198 007e 1BBA     		rev	r3, r3
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 16


 199              	.LVL21:
 200              		.loc 2 498 10 view .LVU65
 201              	.LBE21:
 202              	.LBE20:
 141:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 203              		.loc 1 141 31 view .LVU66
 204 0080 7360     		str	r3, [r6, #4]
 142:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[2]);
 205              		.loc 1 142 5 is_stmt 1 view .LVU67
 206              	.LVL22:
 143:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 207              		.loc 1 143 5 view .LVU68
 143:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 208              		.loc 1 143 33 is_stmt 0 view .LVU69
 209 0082 049B     		ldr	r3, [sp, #16]
 210              	.LVL23:
 211              	.LBB22:
 212              	.LBI22:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 213              		.loc 2 495 57 is_stmt 1 view .LVU70
 214              	.LBB23:
 215              		.loc 2 498 3 view .LVU71
 216              		.loc 2 498 10 is_stmt 0 view .LVU72
 217 0084 1BBA     		rev	r3, r3
 218              	.LVL24:
 219              		.loc 2 498 10 view .LVU73
 220              	.LBE23:
 221              	.LBE22:
 143:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 222              		.loc 1 143 31 view .LVU74
 223 0086 B360     		str	r3, [r6, #8]
 144:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[3]);
 224              		.loc 1 144 5 is_stmt 1 view .LVU75
 225              	.LVL25:
 145:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }
 226              		.loc 1 145 5 view .LVU76
 145:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }
 227              		.loc 1 145 33 is_stmt 0 view .LVU77
 228 0088 059B     		ldr	r3, [sp, #20]
 229              	.LVL26:
 230              	.LBB24:
 231              	.LBI24:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 232              		.loc 2 495 57 is_stmt 1 view .LVU78
 233              	.LBB25:
 234              		.loc 2 498 3 view .LVU79
 235              		.loc 2 498 10 is_stmt 0 view .LVU80
 236 008a 1BBA     		rev	r3, r3
 237              	.LVL27:
 238              		.loc 2 498 10 view .LVU81
 239              	.LBE25:
 240              	.LBE24:
 145:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }
 241              		.loc 1 145 31 view .LVU82
 242 008c F360     		str	r3, [r6, #12]
  94:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   uint32_t inputaddr  = (uint32_t)Input;
 243              		.loc 1 94 15 view .LVU83
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 17


 244 008e 0120     		movs	r0, #1
 245 0090 ECE7     		b	.L6
 246              		.cfi_endproc
 247              	.LFE123:
 249              		.section	.text.HMAC_MD5,"ax",%progbits
 250              		.align	1
 251              		.global	HMAC_MD5
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv4-sp-d16
 257              	HMAC_MD5:
 258              	.LVL28:
 259              	.LFB124:
 149:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 150:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** /**
 151:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @brief  Compute the HMAC MD5 digest.
 152:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @param  Key: pointer to the Key used for HMAC.
 153:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @param  Keylen: length of the Key used for HMAC.
 154:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @param  Input: pointer to the Input buffer to be treated.
 155:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @param  Ilen: length of the Input buffer.
 156:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @param  Output: the returned digest  
 157:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   * @retval An ErrorStatus enumeration value:
 158:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   *          - SUCCESS: digest computation done
 159:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   *          - ERROR: digest computation failed
 160:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   */
 161:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** ErrorStatus HMAC_MD5(uint8_t *Key, uint32_t Keylen, uint8_t *Input, 
 162:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****                      uint32_t Ilen, uint8_t Output[16])
 163:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** {
 260              		.loc 1 163 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 4, pretend = 0, frame = 56
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		.loc 1 163 1 is_stmt 0 view .LVU85
 265 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 266              	.LCFI4:
 267              		.cfi_def_cfa_offset 28
 268              		.cfi_offset 4, -28
 269              		.cfi_offset 5, -24
 270              		.cfi_offset 6, -20
 271              		.cfi_offset 7, -16
 272              		.cfi_offset 8, -12
 273              		.cfi_offset 9, -8
 274              		.cfi_offset 14, -4
 275 0004 8FB0     		sub	sp, sp, #60
 276              	.LCFI5:
 277              		.cfi_def_cfa_offset 88
 278 0006 8146     		mov	r9, r0
 279 0008 0D46     		mov	r5, r1
 280 000a 1F46     		mov	r7, r3
 164:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   HASH_InitTypeDef MD5_HASH_InitStructure;
 281              		.loc 1 164 3 is_stmt 1 view .LVU86
 165:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   HASH_MsgDigest MD5_MessageDigest;
 282              		.loc 1 165 3 view .LVU87
 166:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   __IO uint16_t nbvalidbitsdata = 0;
 283              		.loc 1 166 3 view .LVU88
 284              		.loc 1 166 17 is_stmt 0 view .LVU89
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 18


 285 000c 0023     		movs	r3, #0
 286              	.LVL29:
 287              		.loc 1 166 17 view .LVU90
 288 000e ADF80630 		strh	r3, [sp, #6]	@ movhi
 167:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   __IO uint16_t nbvalidbitskey = 0;
 289              		.loc 1 167 3 is_stmt 1 view .LVU91
 290              		.loc 1 167 17 is_stmt 0 view .LVU92
 291 0012 ADF80430 		strh	r3, [sp, #4]	@ movhi
 168:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   uint32_t i = 0;
 292              		.loc 1 168 3 is_stmt 1 view .LVU93
 293              	.LVL30:
 169:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   __IO uint32_t counter = 0;
 294              		.loc 1 169 3 view .LVU94
 295              		.loc 1 169 17 is_stmt 0 view .LVU95
 296 0016 0093     		str	r3, [sp]
 170:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   uint32_t busystatus = 0;
 297              		.loc 1 170 3 is_stmt 1 view .LVU96
 298              	.LVL31:
 171:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   ErrorStatus status = SUCCESS;
 299              		.loc 1 171 3 view .LVU97
 172:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   uint32_t keyaddr    = (uint32_t)Key;
 300              		.loc 1 172 3 view .LVU98
 301              		.loc 1 172 12 is_stmt 0 view .LVU99
 302 0018 8046     		mov	r8, r0
 303              	.LVL32:
 173:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   uint32_t inputaddr  = (uint32_t)Input;
 304              		.loc 1 173 3 is_stmt 1 view .LVU100
 305              		.loc 1 173 12 is_stmt 0 view .LVU101
 306 001a 1646     		mov	r6, r2
 307              	.LVL33:
 174:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   uint32_t outputaddr = (uint32_t)Output;
 308              		.loc 1 174 3 is_stmt 1 view .LVU102
 175:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 176:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* Number of valid bits in last word of the Input data */
 177:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   nbvalidbitsdata = 8 * (Ilen % 4);
 309              		.loc 1 177 3 view .LVU103
 310              		.loc 1 177 19 is_stmt 0 view .LVU104
 311 001c 07F00303 		and	r3, r7, #3
 312 0020 DB00     		lsls	r3, r3, #3
 313 0022 ADF80630 		strh	r3, [sp, #6]	@ movhi
 178:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 179:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* Number of valid bits in last word of the Key */
 180:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   nbvalidbitskey = 8 * (Keylen % 4);
 314              		.loc 1 180 3 is_stmt 1 view .LVU105
 315              		.loc 1 180 18 is_stmt 0 view .LVU106
 316 0026 01F00303 		and	r3, r1, #3
 317 002a DB00     		lsls	r3, r3, #3
 318 002c ADF80430 		strh	r3, [sp, #4]	@ movhi
 181:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****    
 182:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* HASH peripheral initialization */
 183:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   HASH_DeInit();
 319              		.loc 1 183 3 is_stmt 1 view .LVU107
 320 0030 FFF7FEFF 		bl	HASH_DeInit
 321              	.LVL34:
 184:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 185:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* HASH Configuration */
 186:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_MD5;
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 19


 322              		.loc 1 186 3 view .LVU108
 323              		.loc 1 186 45 is_stmt 0 view .LVU109
 324 0034 8023     		movs	r3, #128
 325 0036 0A93     		str	r3, [sp, #40]
 187:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HMAC;
 326              		.loc 1 187 3 is_stmt 1 view .LVU110
 327              		.loc 1 187 40 is_stmt 0 view .LVU111
 328 0038 4023     		movs	r3, #64
 329 003a 0B93     		str	r3, [sp, #44]
 188:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
 330              		.loc 1 188 3 is_stmt 1 view .LVU112
 331              		.loc 1 188 40 is_stmt 0 view .LVU113
 332 003c 2023     		movs	r3, #32
 333 003e 0C93     		str	r3, [sp, #48]
 189:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   if(Keylen > 64)
 334              		.loc 1 189 3 is_stmt 1 view .LVU114
 335              		.loc 1 189 5 is_stmt 0 view .LVU115
 336 0040 402D     		cmp	r5, #64
 337 0042 13D9     		bls	.L12
 190:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 191:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     /* HMAC long Key */
 192:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     MD5_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_LongKey;
 338              		.loc 1 192 5 is_stmt 1 view .LVU116
 339              		.loc 1 192 45 is_stmt 0 view .LVU117
 340 0044 4FF48033 		mov	r3, #65536
 341 0048 0D93     		str	r3, [sp, #52]
 342              	.L13:
 193:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }
 194:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   else
 195:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 196:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     /* HMAC short Key */
 197:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     MD5_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
 198:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }
 199:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   HASH_Init(&MD5_HASH_InitStructure);
 343              		.loc 1 199 3 is_stmt 1 view .LVU118
 344 004a 0AA8     		add	r0, sp, #40
 345 004c FFF7FEFF 		bl	HASH_Init
 346              	.LVL35:
 200:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 201:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* Configure the number of valid bits in last word of the Key */
 202:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   HASH_SetLastWordValidBitsNbr(nbvalidbitskey);
 347              		.loc 1 202 3 view .LVU119
 348 0050 BDF80400 		ldrh	r0, [sp, #4]
 349 0054 80B2     		uxth	r0, r0
 350 0056 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 351              	.LVL36:
 203:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 204:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* Write the Key */
 205:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   for(i=0; i<Keylen; i+=4)
 352              		.loc 1 205 3 view .LVU120
 353              		.loc 1 205 8 is_stmt 0 view .LVU121
 354 005a 0024     		movs	r4, #0
 355              	.LVL37:
 356              	.L14:
 357              		.loc 1 205 12 is_stmt 1 discriminator 1 view .LVU122
 358              		.loc 1 205 3 is_stmt 0 discriminator 1 view .LVU123
 359 005c AC42     		cmp	r4, r5
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 20


 360 005e 08D2     		bcs	.L31
 206:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 207:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     HASH_DataIn(*(uint32_t*)keyaddr);
 361              		.loc 1 207 5 is_stmt 1 discriminator 3 view .LVU124
 362 0060 59F8040B 		ldr	r0, [r9], #4
 363              	.LVL38:
 364              		.loc 1 207 5 is_stmt 0 discriminator 3 view .LVU125
 365 0064 FFF7FEFF 		bl	HASH_DataIn
 366              	.LVL39:
 208:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     keyaddr+=4;
 367              		.loc 1 208 5 is_stmt 1 discriminator 3 view .LVU126
 205:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 368              		.loc 1 205 22 discriminator 3 view .LVU127
 205:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 369              		.loc 1 205 23 is_stmt 0 discriminator 3 view .LVU128
 370 0068 0434     		adds	r4, r4, #4
 371              	.LVL40:
 205:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 372              		.loc 1 205 23 discriminator 3 view .LVU129
 373 006a F7E7     		b	.L14
 374              	.LVL41:
 375              	.L12:
 197:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }
 376              		.loc 1 197 5 is_stmt 1 view .LVU130
 197:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }
 377              		.loc 1 197 45 is_stmt 0 view .LVU131
 378 006c 0023     		movs	r3, #0
 379 006e 0D93     		str	r3, [sp, #52]
 380 0070 EBE7     		b	.L13
 381              	.LVL42:
 382              	.L31:
 209:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }
 210:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   
 211:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* Start the HASH processor */
 212:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   HASH_StartDigest();
 383              		.loc 1 212 3 is_stmt 1 view .LVU132
 384 0072 FFF7FEFF 		bl	HASH_StartDigest
 385              	.LVL43:
 386              	.L17:
 213:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 214:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   /* wait until the Busy flag is RESET */
 215:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   do
 387              		.loc 1 215 3 discriminator 2 view .LVU133
 216:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 217:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 388              		.loc 1 217 5 discriminator 2 view .LVU134
 389              		.loc 1 217 18 is_stmt 0 discriminator 2 view .LVU135
 390 0076 0820     		movs	r0, #8
 391 0078 FFF7FEFF 		bl	HASH_GetFlagStatus
 392              	.LVL44:
 393              		.loc 1 217 16 discriminator 2 view .LVU136
 394 007c 8146     		mov	r9, r0
 395              	.LVL45:
 218:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     counter++;
 396              		.loc 1 218 5 is_stmt 1 discriminator 2 view .LVU137
 397              		.loc 1 218 12 is_stmt 0 discriminator 2 view .LVU138
 398 007e 009C     		ldr	r4, [sp]
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 21


 399 0080 0134     		adds	r4, r4, #1
 400 0082 0094     		str	r4, [sp]
 219:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 401              		.loc 1 219 10 is_stmt 1 discriminator 2 view .LVU139
 402              		.loc 1 219 20 is_stmt 0 discriminator 2 view .LVU140
 403 0084 009B     		ldr	r3, [sp]
 404              		.loc 1 219 3 discriminator 2 view .LVU141
 405 0086 B3F5803F 		cmp	r3, #65536
 406 008a 01D0     		beq	.L16
 407              		.loc 1 219 40 discriminator 1 view .LVU142
 408 008c 0028     		cmp	r0, #0
 409 008e F2D1     		bne	.L17
 410              	.L16:
 220:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 221:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   if (busystatus != RESET)
 411              		.loc 1 221 3 is_stmt 1 view .LVU143
 412              		.loc 1 221 6 is_stmt 0 view .LVU144
 413 0090 B9F1000F 		cmp	r9, #0
 414 0094 03D0     		beq	.L32
 222:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 223:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****      status = ERROR;
 415              		.loc 1 223 13 view .LVU145
 416 0096 0020     		movs	r0, #0
 417              	.LVL46:
 418              	.L18:
 224:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }
 225:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   else
 226:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   {
 227:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     /* Configure the number of valid bits in last word of the Input data */
 228:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     HASH_SetLastWordValidBitsNbr(nbvalidbitsdata);
 229:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 230:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     /* Write the Input block in the IN FIFO */
 231:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     for(i=0; i<Ilen; i+=4)
 232:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     {
 233:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       HASH_DataIn(*(uint32_t*)inputaddr);
 234:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       inputaddr+=4;
 235:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     }
 236:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 237:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     /* Start the HASH processor */
 238:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     HASH_StartDigest();
 239:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 240:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     /* wait until the Busy flag is RESET */
 241:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     counter =0;
 242:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     do
 243:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     {
 244:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 245:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        counter++;
 246:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 247:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 248:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     if (busystatus != RESET)
 249:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     {
 250:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       status = ERROR;
 251:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     }
 252:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     else
 253:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     {  
 254:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       /* Configure the number of valid bits in last word of the Key */
 255:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       HASH_SetLastWordValidBitsNbr(nbvalidbitskey);
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 22


 256:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 257:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       /* Write the Key */
 258:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       keyaddr = (uint32_t)Key;
 259:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       for(i=0; i<Keylen; i+=4)
 260:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       {
 261:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****         HASH_DataIn(*(uint32_t*)keyaddr);
 262:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****         keyaddr+=4;
 263:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       }
 264:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   
 265:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        /* Start the HASH processor */
 266:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        HASH_StartDigest();
 267:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 268:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        /* wait until the Busy flag is RESET */
 269:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        counter =0;
 270:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        do
 271:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        {
 272:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****           busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 273:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****           counter++;
 274:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 275:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 276:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       if (busystatus != RESET)
 277:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       {
 278:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          status = ERROR;
 279:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       }
 280:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       else
 281:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       {
 282:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          /* Read the message digest */
 283:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          HASH_GetDigest(&MD5_MessageDigest);
 284:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[0]);
 285:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 286:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[1]);
 287:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 288:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[2]);
 289:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 290:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[3]);
 291:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       }
 292:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     }
 293:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   }
 294:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   return status;  
 419              		.loc 1 294 3 is_stmt 1 view .LVU146
 295:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** }
 420              		.loc 1 295 1 is_stmt 0 view .LVU147
 421 0098 0FB0     		add	sp, sp, #60
 422              	.LCFI6:
 423              		.cfi_remember_state
 424              		.cfi_def_cfa_offset 28
 425              		@ sp needed
 426 009a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 427              	.LVL47:
 428              	.L32:
 429              	.LCFI7:
 430              		.cfi_restore_state
 228:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 431              		.loc 1 228 5 is_stmt 1 view .LVU148
 432 009e BDF80600 		ldrh	r0, [sp, #6]
 433              	.LVL48:
 228:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 23


 434              		.loc 1 228 5 is_stmt 0 view .LVU149
 435 00a2 80B2     		uxth	r0, r0
 436 00a4 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 437              	.LVL49:
 231:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     {
 438              		.loc 1 231 5 is_stmt 1 view .LVU150
 439              	.L19:
 231:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     {
 440              		.loc 1 231 14 discriminator 1 view .LVU151
 231:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     {
 441              		.loc 1 231 5 is_stmt 0 discriminator 1 view .LVU152
 442 00a8 B945     		cmp	r9, r7
 443 00aa 06D2     		bcs	.L33
 233:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       inputaddr+=4;
 444              		.loc 1 233 7 is_stmt 1 discriminator 3 view .LVU153
 445 00ac 56F8040B 		ldr	r0, [r6], #4
 446              	.LVL50:
 233:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       inputaddr+=4;
 447              		.loc 1 233 7 is_stmt 0 discriminator 3 view .LVU154
 448 00b0 FFF7FEFF 		bl	HASH_DataIn
 449              	.LVL51:
 234:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     }
 450              		.loc 1 234 7 is_stmt 1 discriminator 3 view .LVU155
 231:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     {
 451              		.loc 1 231 22 discriminator 3 view .LVU156
 231:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     {
 452              		.loc 1 231 23 is_stmt 0 discriminator 3 view .LVU157
 453 00b4 09F10409 		add	r9, r9, #4
 454              	.LVL52:
 231:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     {
 455              		.loc 1 231 23 discriminator 3 view .LVU158
 456 00b8 F6E7     		b	.L19
 457              	.L33:
 238:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 458              		.loc 1 238 5 is_stmt 1 view .LVU159
 459 00ba FFF7FEFF 		bl	HASH_StartDigest
 460              	.LVL53:
 241:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     do
 461              		.loc 1 241 5 view .LVU160
 241:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     do
 462              		.loc 1 241 13 is_stmt 0 view .LVU161
 463 00be 0023     		movs	r3, #0
 464 00c0 0093     		str	r3, [sp]
 465              	.L22:
 242:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     {
 466              		.loc 1 242 5 is_stmt 1 discriminator 2 view .LVU162
 244:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        counter++;
 467              		.loc 1 244 8 discriminator 2 view .LVU163
 244:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        counter++;
 468              		.loc 1 244 21 is_stmt 0 discriminator 2 view .LVU164
 469 00c2 0820     		movs	r0, #8
 470 00c4 FFF7FEFF 		bl	HASH_GetFlagStatus
 471              	.LVL54:
 244:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        counter++;
 472              		.loc 1 244 19 discriminator 2 view .LVU165
 473 00c8 0446     		mov	r4, r0
 474              	.LVL55:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 24


 245:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 475              		.loc 1 245 8 is_stmt 1 discriminator 2 view .LVU166
 245:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 476              		.loc 1 245 15 is_stmt 0 discriminator 2 view .LVU167
 477 00ca 009B     		ldr	r3, [sp]
 478 00cc 0133     		adds	r3, r3, #1
 479 00ce 0093     		str	r3, [sp]
 246:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 480              		.loc 1 246 12 is_stmt 1 discriminator 2 view .LVU168
 246:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 481              		.loc 1 246 22 is_stmt 0 discriminator 2 view .LVU169
 482 00d0 009B     		ldr	r3, [sp]
 246:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 483              		.loc 1 246 5 discriminator 2 view .LVU170
 484 00d2 B3F5803F 		cmp	r3, #65536
 485 00d6 01D0     		beq	.L21
 246:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 486              		.loc 1 246 42 discriminator 1 view .LVU171
 487 00d8 0028     		cmp	r0, #0
 488 00da F2D1     		bne	.L22
 489              	.L21:
 248:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     {
 490              		.loc 1 248 5 is_stmt 1 view .LVU172
 248:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     {
 491              		.loc 1 248 8 is_stmt 0 view .LVU173
 492 00dc 0CB1     		cbz	r4, .L34
 250:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     }
 493              		.loc 1 250 14 view .LVU174
 494 00de 0020     		movs	r0, #0
 495              	.LVL56:
 250:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****     }
 496              		.loc 1 250 14 view .LVU175
 497 00e0 DAE7     		b	.L18
 498              	.LVL57:
 499              	.L34:
 255:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 500              		.loc 1 255 7 is_stmt 1 view .LVU176
 501 00e2 BDF80400 		ldrh	r0, [sp, #4]
 502              	.LVL58:
 255:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 503              		.loc 1 255 7 is_stmt 0 view .LVU177
 504 00e6 80B2     		uxth	r0, r0
 505 00e8 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 506              	.LVL59:
 258:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       for(i=0; i<Keylen; i+=4)
 507              		.loc 1 258 7 is_stmt 1 view .LVU178
 259:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       {
 508              		.loc 1 259 7 view .LVU179
 259:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       {
 509              		.loc 1 259 7 is_stmt 0 view .LVU180
 510 00ec 04E0     		b	.L23
 511              	.LVL60:
 512              	.L24:
 261:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****         keyaddr+=4;
 513              		.loc 1 261 9 is_stmt 1 discriminator 3 view .LVU181
 514 00ee 58F8040B 		ldr	r0, [r8], #4
 515              	.LVL61:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 25


 261:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****         keyaddr+=4;
 516              		.loc 1 261 9 is_stmt 0 discriminator 3 view .LVU182
 517 00f2 FFF7FEFF 		bl	HASH_DataIn
 518              	.LVL62:
 262:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       }
 519              		.loc 1 262 9 is_stmt 1 discriminator 3 view .LVU183
 259:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       {
 520              		.loc 1 259 26 discriminator 3 view .LVU184
 259:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       {
 521              		.loc 1 259 27 is_stmt 0 discriminator 3 view .LVU185
 522 00f6 0434     		adds	r4, r4, #4
 523              	.LVL63:
 524              	.L23:
 259:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       {
 525              		.loc 1 259 16 is_stmt 1 discriminator 1 view .LVU186
 259:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       {
 526              		.loc 1 259 7 is_stmt 0 discriminator 1 view .LVU187
 527 00f8 AC42     		cmp	r4, r5
 528 00fa F8D3     		bcc	.L24
 266:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 529              		.loc 1 266 8 is_stmt 1 view .LVU188
 530 00fc FFF7FEFF 		bl	HASH_StartDigest
 531              	.LVL64:
 269:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        do
 532              		.loc 1 269 8 view .LVU189
 269:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        do
 533              		.loc 1 269 16 is_stmt 0 view .LVU190
 534 0100 0023     		movs	r3, #0
 535 0102 0093     		str	r3, [sp]
 536              	.L26:
 270:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****        {
 537              		.loc 1 270 8 is_stmt 1 discriminator 2 view .LVU191
 272:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****           counter++;
 538              		.loc 1 272 11 discriminator 2 view .LVU192
 272:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****           counter++;
 539              		.loc 1 272 24 is_stmt 0 discriminator 2 view .LVU193
 540 0104 0820     		movs	r0, #8
 541 0106 FFF7FEFF 		bl	HASH_GetFlagStatus
 542              	.LVL65:
 272:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****           counter++;
 543              		.loc 1 272 22 discriminator 2 view .LVU194
 544 010a 0246     		mov	r2, r0
 545              	.LVL66:
 273:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 546              		.loc 1 273 11 is_stmt 1 discriminator 2 view .LVU195
 273:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 547              		.loc 1 273 18 is_stmt 0 discriminator 2 view .LVU196
 548 010c 009B     		ldr	r3, [sp]
 549 010e 0133     		adds	r3, r3, #1
 550 0110 0093     		str	r3, [sp]
 274:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 551              		.loc 1 274 14 is_stmt 1 discriminator 2 view .LVU197
 274:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 552              		.loc 1 274 24 is_stmt 0 discriminator 2 view .LVU198
 553 0112 009B     		ldr	r3, [sp]
 274:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 554              		.loc 1 274 7 discriminator 2 view .LVU199
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 26


 555 0114 B3F5803F 		cmp	r3, #65536
 556 0118 01D0     		beq	.L25
 274:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c **** 
 557              		.loc 1 274 44 discriminator 1 view .LVU200
 558 011a 0028     		cmp	r0, #0
 559 011c F2D1     		bne	.L26
 560              	.L25:
 276:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       {
 561              		.loc 1 276 7 is_stmt 1 view .LVU201
 276:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       {
 562              		.loc 1 276 10 is_stmt 0 view .LVU202
 563 011e 0AB1     		cbz	r2, .L35
 278:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       }
 564              		.loc 1 278 17 view .LVU203
 565 0120 0020     		movs	r0, #0
 566              	.LVL67:
 278:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       }
 567              		.loc 1 278 17 view .LVU204
 568 0122 B9E7     		b	.L18
 569              	.LVL68:
 570              	.L35:
 283:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[0]);
 571              		.loc 1 283 10 is_stmt 1 view .LVU205
 572 0124 02A8     		add	r0, sp, #8
 573              	.LVL69:
 283:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[0]);
 574              		.loc 1 283 10 is_stmt 0 view .LVU206
 575 0126 FFF7FEFF 		bl	HASH_GetDigest
 576              	.LVL70:
 284:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 577              		.loc 1 284 10 is_stmt 1 view .LVU207
 284:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 578              		.loc 1 284 38 is_stmt 0 view .LVU208
 579 012a 029B     		ldr	r3, [sp, #8]
 580              	.LVL71:
 581              	.LBB26:
 582              	.LBI26:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 583              		.loc 2 495 57 is_stmt 1 view .LVU209
 584              	.LBB27:
 585              		.loc 2 498 3 view .LVU210
 586              		.loc 2 498 10 is_stmt 0 view .LVU211
 587 012c 1BBA     		rev	r3, r3
 588              	.LVL72:
 589              		.loc 2 498 10 view .LVU212
 590              	.LBE27:
 591              	.LBE26:
 284:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 592              		.loc 1 284 36 view .LVU213
 593 012e 169A     		ldr	r2, [sp, #88]
 594 0130 1360     		str	r3, [r2]
 285:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[1]);
 595              		.loc 1 285 10 is_stmt 1 view .LVU214
 596              	.LVL73:
 286:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 597              		.loc 1 286 10 view .LVU215
 286:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 27


 598              		.loc 1 286 38 is_stmt 0 view .LVU216
 599 0132 039B     		ldr	r3, [sp, #12]
 600              	.LVL74:
 601              	.LBB28:
 602              	.LBI28:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 603              		.loc 2 495 57 is_stmt 1 view .LVU217
 604              	.LBB29:
 605              		.loc 2 498 3 view .LVU218
 606              		.loc 2 498 10 is_stmt 0 view .LVU219
 607 0134 1BBA     		rev	r3, r3
 608              	.LVL75:
 609              		.loc 2 498 10 view .LVU220
 610              	.LBE29:
 611              	.LBE28:
 286:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 612              		.loc 1 286 36 view .LVU221
 613 0136 5360     		str	r3, [r2, #4]
 287:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[2]);
 614              		.loc 1 287 10 is_stmt 1 view .LVU222
 615              	.LVL76:
 288:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 616              		.loc 1 288 10 view .LVU223
 288:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 617              		.loc 1 288 38 is_stmt 0 view .LVU224
 618 0138 049B     		ldr	r3, [sp, #16]
 619              	.LVL77:
 620              	.LBB30:
 621              	.LBI30:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 622              		.loc 2 495 57 is_stmt 1 view .LVU225
 623              	.LBB31:
 624              		.loc 2 498 3 view .LVU226
 625              		.loc 2 498 10 is_stmt 0 view .LVU227
 626 013a 1BBA     		rev	r3, r3
 627              	.LVL78:
 628              		.loc 2 498 10 view .LVU228
 629              	.LBE31:
 630              	.LBE30:
 288:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 631              		.loc 1 288 36 view .LVU229
 632 013c 9360     		str	r3, [r2, #8]
 289:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[3]);
 633              		.loc 1 289 10 is_stmt 1 view .LVU230
 634              	.LVL79:
 290:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       }
 635              		.loc 1 290 10 view .LVU231
 290:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       }
 636              		.loc 1 290 38 is_stmt 0 view .LVU232
 637 013e 059B     		ldr	r3, [sp, #20]
 638              	.LVL80:
 639              	.LBB32:
 640              	.LBI32:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 641              		.loc 2 495 57 is_stmt 1 view .LVU233
 642              	.LBB33:
 643              		.loc 2 498 3 view .LVU234
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 28


 644              		.loc 2 498 10 is_stmt 0 view .LVU235
 645 0140 1BBA     		rev	r3, r3
 646              	.LVL81:
 647              		.loc 2 498 10 view .LVU236
 648              	.LBE33:
 649              	.LBE32:
 290:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****       }
 650              		.loc 1 290 36 view .LVU237
 651 0142 D360     		str	r3, [r2, #12]
 171:STM32F4xx_LIB/periph/src/stm32f4xx_hash_md5.c ****   uint32_t keyaddr    = (uint32_t)Key;
 652              		.loc 1 171 15 view .LVU238
 653 0144 0120     		movs	r0, #1
 654 0146 A7E7     		b	.L18
 655              		.cfi_endproc
 656              	.LFE124:
 658              		.text
 659              	.Letext0:
 660              		.file 3 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\machine\\_default_types.h"
 661              		.file 4 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 662              		.file 5 "STM32F4xx_LIB/core/core_cm4.h"
 663              		.file 6 "User/system_stm32f4xx.h"
 664              		.file 7 "User/stm32f4xx.h"
 665              		.file 8 "STM32F4xx_LIB/periph/inc/stm32f4xx_hash.h"
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hash_md5.c
C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s:18     .text.HASH_MD5:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s:26     .text.HASH_MD5:00000000 HASH_MD5
C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s:250    .text.HMAC_MD5:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccTjgG0A.s:257    .text.HMAC_MD5:00000000 HMAC_MD5

UNDEFINED SYMBOLS
HASH_DeInit
HASH_Init
HASH_SetLastWordValidBitsNbr
HASH_DataIn
HASH_StartDigest
HASH_GetFlagStatus
HASH_GetDigest
