ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_wwdg.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.WWDG_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	WWDG_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	WWDG_DeInit:
  27              	.LFB123:
  28              		.file 1 "STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c"
   1:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /**
   2:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   ******************************************************************************
   3:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @file    stm32f4xx_wwdg.c
   4:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @author  MCD Application Team
   5:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @version V1.8.1
   6:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @date    27-January-2022
   7:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *          functionalities of the Window watchdog (WWDG) peripheral:           
   9:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *           + Prescaler, Refresh window and Counter configuration
  10:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *           + WWDG activation
  11:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *           + Interrupts and flags management
  12:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *             
  13:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  @verbatim    
  14:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  ===============================================================================
  15:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****                            ##### WWDG features #####
  16:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  ===============================================================================
  17:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****     [..]                                      
  18:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         Once enabled the WWDG generates a system reset on expiry of a programmed
  19:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         time period, unless the program refreshes the counter (downcounter) 
  20:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         before to reach 0x3F value (i.e. a reset is generated when the counter
  21:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         value rolls over from 0x40 to 0x3F). 
  22:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         An MCU reset is also generated if the counter value is refreshed
  23:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         before the counter has reached the refresh window value. This 
  24:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         implies that the counter must be refreshed in a limited window.
  25:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****               
  26:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         Once enabled the WWDG cannot be disabled except by a system reset.
  27:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****           
  28:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         WWDGRST flag in RCC_CSR register can be used to inform when a WWDG
  29:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         reset occurs.
  30:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****              
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s 			page 2


  31:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         The WWDG counter input clock is derived from the APB clock divided 
  32:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         by a programmable prescaler.
  33:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****                 
  34:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         WWDG counter clock = PCLK1 / Prescaler
  35:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         WWDG timeout = (WWDG counter clock) * (counter value)
  36:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****                        
  37:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****         Min-max timeout value @42 MHz(PCLK1): ~97.5 us / ~49.9 ms
  38:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****                              
  39:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****                       ##### How to use this driver #####
  40:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  ===============================================================================
  41:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****     [..]
  42:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****       (#) Enable WWDG clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_WWDG, ENABLE) function
  43:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****               
  44:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****       (#) Configure the WWDG prescaler using WWDG_SetPrescaler() function
  45:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****                              
  46:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****       (#) Configure the WWDG refresh window using WWDG_SetWindowValue() function
  47:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****               
  48:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****       (#) Set the WWDG counter value and start it using WWDG_Enable() function.
  49:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****           When the WWDG is enabled the counter value should be configured to 
  50:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****           a value greater than 0x40 to prevent generating an immediate reset.     
  51:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****               
  52:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****       (#) Optionally you can enable the Early wakeup interrupt which is 
  53:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****           generated when the counter reach 0x40.
  54:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****           Once enabled this interrupt cannot be disabled except by a system reset.
  55:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****                   
  56:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****       (#) Then the application program must refresh the WWDG counter at regular
  57:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****           intervals during normal operation to prevent an MCU reset, using
  58:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****           WWDG_SetCounter() function. This operation must occur only when
  59:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****           the counter value is lower than the refresh window value, 
  60:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****           programmed using WWDG_SetWindowValue().         
  61:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   
  62:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****     @endverbatim
  63:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   ******************************************************************************
  64:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @attention
  65:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *
  66:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * Copyright (c) 2016 STMicroelectronics.
  67:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * All rights reserved.
  68:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *
  69:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * This software is licensed under terms that can be found in the LICENSE file
  70:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * in the root directory of this software component.
  71:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  72:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *
  73:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   ******************************************************************************
  74:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
  75:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
  76:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /* Includes ------------------------------------------------------------------*/
  77:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** #include "stm32f4xx_wwdg.h"
  78:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** #include "stm32f4xx_rcc.h"
  79:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
  80:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  81:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @{
  82:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
  83:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
  84:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG 
  85:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @brief WWDG driver modules
  86:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @{
  87:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s 			page 3


  88:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
  89:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /* Private typedef -----------------------------------------------------------*/
  90:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /* Private define ------------------------------------------------------------*/
  91:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
  92:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /* ----------- WWDG registers bit address in the alias region ----------- */
  93:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** #define WWDG_OFFSET       (WWDG_BASE - PERIPH_BASE)
  94:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /* Alias word address of EWI bit */
  95:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** #define CFR_OFFSET        (WWDG_OFFSET + 0x04)
  96:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** #define EWI_BitNumber     0x09
  97:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** #define CFR_EWI_BB        (PERIPH_BB_BASE + (CFR_OFFSET * 32) + (EWI_BitNumber * 4))
  98:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
  99:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /* --------------------- WWDG registers bit mask ------------------------ */
 100:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /* CFR register bit mask */
 101:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** #define CFR_WDGTB_MASK    ((uint32_t)0xFFFFFE7F)
 102:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** #define CFR_W_MASK        ((uint32_t)0xFFFFFF80)
 103:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** #define BIT_MASK          ((uint8_t)0x7F)
 104:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 105:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /* Private macro -------------------------------------------------------------*/
 106:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /* Private variables ---------------------------------------------------------*/
 107:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /* Private function prototypes -----------------------------------------------*/
 108:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /* Private functions ---------------------------------------------------------*/
 109:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 110:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Private_Functions
 111:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @{
 112:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
 113:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 114:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group1 Prescaler, Refresh window and Counter configuration functions
 115:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  *  @brief   Prescaler, Refresh window and Counter configuration functions 
 116:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  *
 117:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** @verbatim   
 118:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  ===============================================================================
 119:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****     ##### Prescaler, Refresh window and Counter configuration functions #####
 120:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 121:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 122:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** @endverbatim
 123:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @{
 124:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
 125:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 126:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /**
 127:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @brief  Deinitializes the WWDG peripheral registers to their default reset values.
 128:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @param  None
 129:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @retval None
 130:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
 131:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** void WWDG_DeInit(void)
 132:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** {
  29              		.loc 1 132 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 133:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, ENABLE);
  38              		.loc 1 133 3 view .LVU1
  39 0002 0121     		movs	r1, #1
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s 			page 4


  40 0004 4FF40060 		mov	r0, #2048
  41 0008 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  42              	.LVL0:
 134:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, DISABLE);
  43              		.loc 1 134 3 view .LVU2
  44 000c 0021     		movs	r1, #0
  45 000e 4FF40060 		mov	r0, #2048
  46 0012 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  47              	.LVL1:
 135:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** }
  48              		.loc 1 135 1 is_stmt 0 view .LVU3
  49 0016 08BD     		pop	{r3, pc}
  50              		.cfi_endproc
  51              	.LFE123:
  53              		.section	.text.WWDG_SetPrescaler,"ax",%progbits
  54              		.align	1
  55              		.global	WWDG_SetPrescaler
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	WWDG_SetPrescaler:
  62              	.LVL2:
  63              	.LFB124:
 136:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 137:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /**
 138:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG Prescaler.
 139:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @param  WWDG_Prescaler: specifies the WWDG Prescaler.
 140:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *   This parameter can be one of the following values:
 141:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_1: WWDG counter clock = (PCLK1/4096)/1
 142:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_2: WWDG counter clock = (PCLK1/4096)/2
 143:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_4: WWDG counter clock = (PCLK1/4096)/4
 144:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_8: WWDG counter clock = (PCLK1/4096)/8
 145:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @retval None
 146:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
 147:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)
 148:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** {
  64              		.loc 1 148 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 149:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   uint32_t tmpreg = 0;
  69              		.loc 1 149 3 view .LVU5
 150:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 151:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_PRESCALER(WWDG_Prescaler));
  70              		.loc 1 151 3 view .LVU6
 152:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   /* Clear WDGTB[1:0] bits */
 153:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   tmpreg = WWDG->CFR & CFR_WDGTB_MASK;
  71              		.loc 1 153 3 view .LVU7
  72              		.loc 1 153 16 is_stmt 0 view .LVU8
  73 0000 034A     		ldr	r2, .L4
  74 0002 5368     		ldr	r3, [r2, #4]
  75              		.loc 1 153 10 view .LVU9
  76 0004 23F4C073 		bic	r3, r3, #384
  77              	.LVL3:
 154:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   /* Set WDGTB[1:0] bits according to WWDG_Prescaler value */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s 			page 5


 155:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   tmpreg |= WWDG_Prescaler;
  78              		.loc 1 155 3 is_stmt 1 view .LVU10
  79              		.loc 1 155 10 is_stmt 0 view .LVU11
  80 0008 0343     		orrs	r3, r3, r0
  81              	.LVL4:
 156:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   /* Store the new value */
 157:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   WWDG->CFR = tmpreg;
  82              		.loc 1 157 3 is_stmt 1 view .LVU12
  83              		.loc 1 157 13 is_stmt 0 view .LVU13
  84 000a 5360     		str	r3, [r2, #4]
 158:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** }
  85              		.loc 1 158 1 view .LVU14
  86 000c 7047     		bx	lr
  87              	.L5:
  88 000e 00BF     		.align	2
  89              	.L4:
  90 0010 002C0040 		.word	1073753088
  91              		.cfi_endproc
  92              	.LFE124:
  94              		.section	.text.WWDG_SetWindowValue,"ax",%progbits
  95              		.align	1
  96              		.global	WWDG_SetWindowValue
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 100              		.fpu fpv4-sp-d16
 102              	WWDG_SetWindowValue:
 103              	.LVL5:
 104              	.LFB125:
 159:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 160:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /**
 161:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG window value.
 162:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @param  WindowValue: specifies the window value to be compared to the downcounter.
 163:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *   This parameter value must be lower than 0x80.
 164:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @retval None
 165:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
 166:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** void WWDG_SetWindowValue(uint8_t WindowValue)
 167:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** {
 105              		.loc 1 167 1 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 8
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              		.loc 1 167 1 is_stmt 0 view .LVU16
 111 0000 82B0     		sub	sp, sp, #8
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 8
 168:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   __IO uint32_t tmpreg = 0;
 114              		.loc 1 168 3 is_stmt 1 view .LVU17
 115              		.loc 1 168 17 is_stmt 0 view .LVU18
 116 0002 0023     		movs	r3, #0
 117 0004 0193     		str	r3, [sp, #4]
 169:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 170:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 171:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_WINDOW_VALUE(WindowValue));
 118              		.loc 1 171 3 is_stmt 1 view .LVU19
 172:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   /* Clear W[6:0] bits */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s 			page 6


 173:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 174:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   tmpreg = WWDG->CFR & CFR_W_MASK;
 119              		.loc 1 174 3 view .LVU20
 120              		.loc 1 174 16 is_stmt 0 view .LVU21
 121 0006 074A     		ldr	r2, .L8
 122 0008 5368     		ldr	r3, [r2, #4]
 123              		.loc 1 174 22 view .LVU22
 124 000a 23F07F03 		bic	r3, r3, #127
 125              		.loc 1 174 10 view .LVU23
 126 000e 0193     		str	r3, [sp, #4]
 175:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 176:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   /* Set W[6:0] bits according to WindowValue value */
 177:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   tmpreg |= WindowValue & (uint32_t) BIT_MASK;
 127              		.loc 1 177 3 is_stmt 1 view .LVU24
 128              		.loc 1 177 25 is_stmt 0 view .LVU25
 129 0010 00F07F00 		and	r0, r0, #127
 130              	.LVL6:
 131              		.loc 1 177 10 view .LVU26
 132 0014 019B     		ldr	r3, [sp, #4]
 133 0016 1843     		orrs	r0, r0, r3
 134 0018 0190     		str	r0, [sp, #4]
 178:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 179:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   /* Store the new value */
 180:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   WWDG->CFR = tmpreg;
 135              		.loc 1 180 3 is_stmt 1 view .LVU27
 136              		.loc 1 180 13 is_stmt 0 view .LVU28
 137 001a 019B     		ldr	r3, [sp, #4]
 138 001c 5360     		str	r3, [r2, #4]
 181:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** }
 139              		.loc 1 181 1 view .LVU29
 140 001e 02B0     		add	sp, sp, #8
 141              	.LCFI2:
 142              		.cfi_def_cfa_offset 0
 143              		@ sp needed
 144 0020 7047     		bx	lr
 145              	.L9:
 146 0022 00BF     		.align	2
 147              	.L8:
 148 0024 002C0040 		.word	1073753088
 149              		.cfi_endproc
 150              	.LFE125:
 152              		.section	.text.WWDG_EnableIT,"ax",%progbits
 153              		.align	1
 154              		.global	WWDG_EnableIT
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu fpv4-sp-d16
 160              	WWDG_EnableIT:
 161              	.LFB126:
 182:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 183:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /**
 184:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @brief  Enables the WWDG Early Wakeup interrupt(EWI).
 185:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @note   Once enabled this interrupt cannot be disabled except by a system reset.
 186:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @param  None
 187:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @retval None
 188:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s 			page 7


 189:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** void WWDG_EnableIT(void)
 190:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** {
 162              		.loc 1 190 1 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 191:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *(__IO uint32_t *) CFR_EWI_BB = (uint32_t)ENABLE;
 167              		.loc 1 191 3 view .LVU31
 168              		.loc 1 191 33 is_stmt 0 view .LVU32
 169 0000 014B     		ldr	r3, .L11
 170 0002 0122     		movs	r2, #1
 171 0004 1A60     		str	r2, [r3]
 192:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** }
 172              		.loc 1 192 1 view .LVU33
 173 0006 7047     		bx	lr
 174              	.L12:
 175              		.align	2
 176              	.L11:
 177 0008 A4800542 		.word	1107656868
 178              		.cfi_endproc
 179              	.LFE126:
 181              		.section	.text.WWDG_SetCounter,"ax",%progbits
 182              		.align	1
 183              		.global	WWDG_SetCounter
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv4-sp-d16
 189              	WWDG_SetCounter:
 190              	.LVL7:
 191              	.LFB127:
 193:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 194:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /**
 195:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG counter value.
 196:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 197:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F (to prevent generating
 198:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *   an immediate reset) 
 199:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @retval None
 200:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
 201:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** void WWDG_SetCounter(uint8_t Counter)
 202:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** {
 192              		.loc 1 202 1 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 203:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 204:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 197              		.loc 1 204 3 view .LVU35
 205:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   /* Write to T[6:0] bits to configure the counter value, no need to do
 206:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****      a read-modify-write; writing a 0 to WDGA bit does nothing */
 207:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   WWDG->CR = Counter & BIT_MASK;
 198              		.loc 1 207 3 view .LVU36
 199              		.loc 1 207 22 is_stmt 0 view .LVU37
 200 0000 00F07F00 		and	r0, r0, #127
 201              	.LVL8:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s 			page 8


 202              		.loc 1 207 12 view .LVU38
 203 0004 014B     		ldr	r3, .L14
 204 0006 1860     		str	r0, [r3]
 208:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** }
 205              		.loc 1 208 1 view .LVU39
 206 0008 7047     		bx	lr
 207              	.L15:
 208 000a 00BF     		.align	2
 209              	.L14:
 210 000c 002C0040 		.word	1073753088
 211              		.cfi_endproc
 212              	.LFE127:
 214              		.section	.text.WWDG_Enable,"ax",%progbits
 215              		.align	1
 216              		.global	WWDG_Enable
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu fpv4-sp-d16
 222              	WWDG_Enable:
 223              	.LVL9:
 224              	.LFB128:
 209:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /**
 210:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @}
 211:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
 212:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 213:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group2 WWDG activation functions
 214:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  *  @brief   WWDG activation functions 
 215:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  *
 216:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** @verbatim   
 217:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  ===============================================================================
 218:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****                     ##### WWDG activation function #####
 219:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 220:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 221:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** @endverbatim
 222:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @{
 223:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
 224:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 225:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /**
 226:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @brief  Enables WWDG and load the counter value.                  
 227:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 228:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F (to prevent generating
 229:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   *   an immediate reset)
 230:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @retval None
 231:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
 232:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** void WWDG_Enable(uint8_t Counter)
 233:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** {
 225              		.loc 1 233 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 234:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 235:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 230              		.loc 1 235 3 view .LVU41
 236:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   WWDG->CR = WWDG_CR_WDGA | Counter;
 231              		.loc 1 236 3 view .LVU42
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s 			page 9


 232              		.loc 1 236 27 is_stmt 0 view .LVU43
 233 0000 40F08000 		orr	r0, r0, #128
 234              	.LVL10:
 235              		.loc 1 236 12 view .LVU44
 236 0004 014B     		ldr	r3, .L17
 237 0006 1860     		str	r0, [r3]
 237:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** }
 238              		.loc 1 237 1 view .LVU45
 239 0008 7047     		bx	lr
 240              	.L18:
 241 000a 00BF     		.align	2
 242              	.L17:
 243 000c 002C0040 		.word	1073753088
 244              		.cfi_endproc
 245              	.LFE128:
 247              		.section	.text.WWDG_GetFlagStatus,"ax",%progbits
 248              		.align	1
 249              		.global	WWDG_GetFlagStatus
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv4-sp-d16
 255              	WWDG_GetFlagStatus:
 256              	.LFB129:
 238:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /**
 239:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @}
 240:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
 241:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 242:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group3 Interrupts and flags management functions
 243:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  *  @brief   Interrupts and flags management functions 
 244:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  *
 245:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** @verbatim   
 246:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  ===============================================================================
 247:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****             ##### Interrupts and flags management functions #####
 248:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 249:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 250:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** @endverbatim
 251:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @{
 252:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
 253:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 254:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /**
 255:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @brief  Checks whether the Early Wakeup interrupt flag is set or not.
 256:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @param  None
 257:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @retval The new state of the Early Wakeup interrupt flag (SET or RESET)
 258:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
 259:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** FlagStatus WWDG_GetFlagStatus(void)
 260:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** {
 257              		.loc 1 260 1 is_stmt 1 view -0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 261:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   FlagStatus bitstatus = RESET;
 262              		.loc 1 261 3 view .LVU47
 263              	.LVL11:
 262:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****     
 263:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   if ((WWDG->SR) != (uint32_t)RESET)
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s 			page 10


 264              		.loc 1 263 3 view .LVU48
 265              		.loc 1 263 12 is_stmt 0 view .LVU49
 266 0000 034B     		ldr	r3, .L22
 267 0002 9B68     		ldr	r3, [r3, #8]
 268              		.loc 1 263 6 view .LVU50
 269 0004 0BB1     		cbz	r3, .L21
 264:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   {
 265:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****     bitstatus = SET;
 270              		.loc 1 265 15 view .LVU51
 271 0006 0120     		movs	r0, #1
 272 0008 7047     		bx	lr
 273              	.L21:
 266:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   }
 267:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   else
 268:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   {
 269:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****     bitstatus = RESET;
 274              		.loc 1 269 15 view .LVU52
 275 000a 0020     		movs	r0, #0
 276              	.LVL12:
 270:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   }
 271:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   return bitstatus;
 277              		.loc 1 271 3 is_stmt 1 view .LVU53
 272:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** }
 278              		.loc 1 272 1 is_stmt 0 view .LVU54
 279 000c 7047     		bx	lr
 280              	.L23:
 281 000e 00BF     		.align	2
 282              	.L22:
 283 0010 002C0040 		.word	1073753088
 284              		.cfi_endproc
 285              	.LFE129:
 287              		.section	.text.WWDG_ClearFlag,"ax",%progbits
 288              		.align	1
 289              		.global	WWDG_ClearFlag
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv4-sp-d16
 295              	WWDG_ClearFlag:
 296              	.LFB130:
 273:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** 
 274:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** /**
 275:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @brief  Clears Early Wakeup interrupt flag.
 276:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @param  None
 277:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   * @retval None
 278:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   */
 279:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** void WWDG_ClearFlag(void)
 280:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** {
 297              		.loc 1 280 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 281:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c ****   WWDG->SR = (uint32_t)RESET;
 302              		.loc 1 281 3 view .LVU56
 303              		.loc 1 281 12 is_stmt 0 view .LVU57
 304 0000 014B     		ldr	r3, .L25
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s 			page 11


 305 0002 0022     		movs	r2, #0
 306 0004 9A60     		str	r2, [r3, #8]
 282:STM32F4xx_LIB/periph/src/stm32f4xx_wwdg.c **** }
 307              		.loc 1 282 1 view .LVU58
 308 0006 7047     		bx	lr
 309              	.L26:
 310              		.align	2
 311              	.L25:
 312 0008 002C0040 		.word	1073753088
 313              		.cfi_endproc
 314              	.LFE130:
 316              		.text
 317              	.Letext0:
 318              		.file 2 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\machine\\_default_types.h"
 319              		.file 3 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 320              		.file 4 "STM32F4xx_LIB/core/core_cm4.h"
 321              		.file 5 "User/system_stm32f4xx.h"
 322              		.file 6 "User/stm32f4xx.h"
 323              		.file 7 "STM32F4xx_LIB/periph/inc/stm32f4xx_rcc.h"
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_wwdg.c
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:18     .text.WWDG_DeInit:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:26     .text.WWDG_DeInit:00000000 WWDG_DeInit
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:54     .text.WWDG_SetPrescaler:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:61     .text.WWDG_SetPrescaler:00000000 WWDG_SetPrescaler
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:90     .text.WWDG_SetPrescaler:00000010 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:95     .text.WWDG_SetWindowValue:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:102    .text.WWDG_SetWindowValue:00000000 WWDG_SetWindowValue
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:148    .text.WWDG_SetWindowValue:00000024 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:153    .text.WWDG_EnableIT:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:160    .text.WWDG_EnableIT:00000000 WWDG_EnableIT
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:177    .text.WWDG_EnableIT:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:182    .text.WWDG_SetCounter:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:189    .text.WWDG_SetCounter:00000000 WWDG_SetCounter
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:210    .text.WWDG_SetCounter:0000000c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:215    .text.WWDG_Enable:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:222    .text.WWDG_Enable:00000000 WWDG_Enable
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:243    .text.WWDG_Enable:0000000c $d
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:248    .text.WWDG_GetFlagStatus:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:255    .text.WWDG_GetFlagStatus:00000000 WWDG_GetFlagStatus
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:283    .text.WWDG_GetFlagStatus:00000010 $d
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:288    .text.WWDG_ClearFlag:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:295    .text.WWDG_ClearFlag:00000000 WWDG_ClearFlag
C:\Users\æ©€Ú\AppData\Local\Temp\cccD1Sjs.s:312    .text.WWDG_ClearFlag:00000008 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
