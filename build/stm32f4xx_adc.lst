ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	ADC_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	ADC_DeInit:
  27              	.LFB123:
  28              		.file 1 "STM32F4xx_LIB/periph/src/stm32f4xx_adc.c"
   1:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
   2:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ******************************************************************************
   3:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @file    stm32f4xx_adc.c
   4:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @author  MCD Application Team
   5:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @version V1.8.1
   6:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @date    27-January-2022
   7:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC) peripheral:
   9:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *           + Initialization and Configuration (in addition to ADC multi mode 
  10:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *             selection)
  11:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *           + Analog Watchdog configuration
  12:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *           + Temperature Sensor & Vrefint (Voltage Reference internal) & VBAT
  13:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *             management 
  14:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *           + Regular Channels Configuration
  15:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *           + Regular Channels DMA Configuration
  16:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *           + Injected channels Configuration
  17:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *           + Interrupts and flags management
  18:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         
  19:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   @verbatim
  20:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================
  21:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                      ##### How to use this driver #####
  22:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================
  23:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..]
  24:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     (#) Enable the ADC interface clock using 
  25:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADCx, ENABLE); 
  26:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        
  27:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     (#) ADC pins configuration
  28:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          (++) Enable the clock for the ADC GPIOs using the following function:
  29:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  30:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          (++) Configure these ADC pins in analog mode using GPIO_Init();  
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 2


  31:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
  32:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      (#) Configure the ADC Prescaler, conversion resolution and data 
  33:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          alignment using the ADC_Init() function.
  34:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      (#) Activate the ADC peripheral using ADC_Cmd() function.
  35:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
  36:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      *** Regular channels group configuration ***
  37:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      ============================================
  38:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      [..]    
  39:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        (+) To configure the ADC regular channels group features, use 
  40:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            ADC_Init() and ADC_RegularChannelConfig() functions.
  41:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        (+) To activate the continuous mode, use the ADC_continuousModeCmd()
  42:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            function.
  43:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        (+) To configurate and activate the Discontinuous mode, use the 
  44:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            ADC_DiscModeChannelCountConfig() and ADC_DiscModeCmd() functions.
  45:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        (+) To read the ADC converted values, use the ADC_GetConversionValue()
  46:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            function.
  47:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
  48:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      *** Multi mode ADCs Regular channels configuration ***
  49:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      ======================================================
  50:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      [..]
  51:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        (+) Refer to "Regular channels group configuration" description to
  52:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            configure the ADC1, ADC2 and ADC3 regular channels.        
  53:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        (+) Select the Multi mode ADC regular channels features (dual or 
  54:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            triple mode) using ADC_CommonInit() function and configure 
  55:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            the DMA mode using ADC_MultiModeDMARequestAfterLastTransferCmd() 
  56:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            functions.        
  57:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        (+) Read the ADCs converted values using the 
  58:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            ADC_GetMultiModeConversionValue() function.
  59:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
  60:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      *** DMA for Regular channels group features configuration ***
  61:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      ============================================================= 
  62:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      [..]
  63:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        (+) To enable the DMA mode for regular channels group, use the 
  64:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            ADC_DMACmd() function.
  65:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        (+) To enable the generation of DMA requests continuously at the end
  66:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            of the last DMA transfer, use the ADC_DMARequestAfterLastTransferCmd() 
  67:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            function.
  68:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
  69:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      *** Injected channels group configuration ***
  70:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      =============================================    
  71:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      [..]
  72:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        (+) To configure the ADC Injected channels group features, use 
  73:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            ADC_InjectedChannelConfig() and  ADC_InjectedSequencerLengthConfig()
  74:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            functions.
  75:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        (+) To activate the continuous mode, use the ADC_continuousModeCmd()
  76:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            function.
  77:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        (+) To activate the Injected Discontinuous mode, use the 
  78:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            ADC_InjectedDiscModeCmd() function.  
  79:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        (+) To activate the AutoInjected mode, use the ADC_AutoInjectedConvCmd() 
  80:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            function.        
  81:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****        (+) To read the ADC converted values, use the ADC_GetInjectedConversionValue() 
  82:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            function.
  83:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
  84:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     @endverbatim
  85:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ******************************************************************************
  86:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @attention
  87:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 3


  88:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * Copyright (c) 2016 STMicroelectronics.
  89:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * All rights reserved.
  90:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *
  91:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  92:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * in the root directory of this software component.
  93:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  94:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *
  95:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ******************************************************************************
  96:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
  97:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
  98:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* Includes ------------------------------------------------------------------*/
  99:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #include "stm32f4xx_adc.h"
 100:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #include "stm32f4xx_rcc.h"
 101:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 102:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 103:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @{
 104:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 105:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 106:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /** @defgroup ADC 
 107:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief ADC driver modules
 108:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @{
 109:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */ 
 110:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 111:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* Private typedef -----------------------------------------------------------*/
 112:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* Private define ------------------------------------------------------------*/ 
 113:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 114:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* ADC DISCNUM mask */
 115:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define CR1_DISCNUM_RESET         ((uint32_t)0xFFFF1FFF)
 116:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 117:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* ADC AWDCH mask */
 118:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define CR1_AWDCH_RESET           ((uint32_t)0xFFFFFFE0)   
 119:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 120:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* ADC Analog watchdog enable mode mask */
 121:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define CR1_AWDMode_RESET         ((uint32_t)0xFF3FFDFF)   
 122:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 123:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* CR1 register Mask */
 124:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define CR1_CLEAR_MASK            ((uint32_t)0xFCFFFEFF)
 125:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 126:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* ADC EXTEN mask */
 127:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define CR2_EXTEN_RESET           ((uint32_t)0xCFFFFFFF)  
 128:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 129:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* ADC JEXTEN mask */
 130:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define CR2_JEXTEN_RESET          ((uint32_t)0xFFCFFFFF)  
 131:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 132:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* ADC JEXTSEL mask */
 133:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define CR2_JEXTSEL_RESET         ((uint32_t)0xFFF0FFFF)  
 134:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 135:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* CR2 register Mask */
 136:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define CR2_CLEAR_MASK            ((uint32_t)0xC0FFF7FD)
 137:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 138:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* ADC SQx mask */
 139:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define SQR3_SQ_SET               ((uint32_t)0x0000001F)  
 140:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define SQR2_SQ_SET               ((uint32_t)0x0000001F)  
 141:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define SQR1_SQ_SET               ((uint32_t)0x0000001F)  
 142:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 143:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* ADC L Mask */
 144:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define SQR1_L_RESET              ((uint32_t)0xFF0FFFFF) 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 4


 145:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 146:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* ADC JSQx mask */
 147:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define JSQR_JSQ_SET              ((uint32_t)0x0000001F) 
 148:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 149:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* ADC JL mask */
 150:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define JSQR_JL_SET               ((uint32_t)0x00300000) 
 151:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define JSQR_JL_RESET             ((uint32_t)0xFFCFFFFF) 
 152:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 153:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* ADC SMPx mask */
 154:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define SMPR1_SMP_SET             ((uint32_t)0x00000007)  
 155:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define SMPR2_SMP_SET             ((uint32_t)0x00000007) 
 156:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 157:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* ADC JDRx registers offset */
 158:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define JDR_OFFSET                ((uint8_t)0x28) 
 159:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 160:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* ADC CDR register base address */
 161:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define CDR_ADDRESS               ((uint32_t)0x40012308)   
 162:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 163:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* ADC CCR register Mask */
 164:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** #define CR_CLEAR_MASK             ((uint32_t)0xFFFC30E0)  
 165:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 166:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* Private macro -------------------------------------------------------------*/
 167:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* Private variables ---------------------------------------------------------*/
 168:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* Private function prototypes -----------------------------------------------*/
 169:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /* Private functions ---------------------------------------------------------*/
 170:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 171:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /** @defgroup ADC_Private_Functions
 172:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @{
 173:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */ 
 174:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 175:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group1 Initialization and Configuration functions
 176:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *  @brief    Initialization and Configuration functions 
 177:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *
 178:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** @verbatim    
 179:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================
 180:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****               ##### Initialization and Configuration functions #####
 181:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================
 182:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..]  This section provides functions allowing to:
 183:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) Initialize and configure the ADC Prescaler
 184:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) ADC Conversion Resolution (12bit..6bit)
 185:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) Scan Conversion Mode (multichannel or one channel) for regular group
 186:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) ADC Continuous Conversion Mode (Continuous or Single conversion) for 
 187:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           regular group
 188:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) External trigger Edge and source of regular group, 
 189:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) Converted data alignment (left or right)
 190:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) The number of ADC conversions that will be done using the sequencer for 
 191:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           regular channel group
 192:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) Multi ADC mode selection
 193:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) Direct memory access mode selection for multi ADC mode  
 194:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) Delay between 2 sampling phases (used in dual or triple interleaved modes)
 195:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) Enable or disable the ADC peripheral   
 196:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** @endverbatim
 197:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @{
 198:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 199:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 200:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 201:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Deinitializes all ADCs peripherals registers to their default reset 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 5


 202:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         values.
 203:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  None
 204:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 205:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 206:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_DeInit(void)
 207:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
  29              		.loc 1 207 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 208:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Enable all ADCs reset state */
 209:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC, ENABLE);
  38              		.loc 1 209 3 view .LVU1
  39 0002 0121     		movs	r1, #1
  40 0004 4FF48070 		mov	r0, #256
  41 0008 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  42              	.LVL0:
 210:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 211:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Release all ADCs from reset state */
 212:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC, DISABLE);
  43              		.loc 1 212 3 view .LVU2
  44 000c 0021     		movs	r1, #0
  45 000e 4FF48070 		mov	r0, #256
  46 0012 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  47              	.LVL1:
 213:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
  48              		.loc 1 213 1 is_stmt 0 view .LVU3
  49 0016 08BD     		pop	{r3, pc}
  50              		.cfi_endproc
  51              	.LFE123:
  53              		.section	.text.ADC_Init,"ax",%progbits
  54              		.align	1
  55              		.global	ADC_Init
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	ADC_Init:
  62              	.LVL2:
  63              	.LFB124:
 214:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 215:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 216:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 217:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         in the ADC_InitStruct.
 218:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 219:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         Resolution and Data Alignment), however, the rest of the configuration
 220:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         parameters are specific to the regular channels group (scan mode 
 221:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         activation, continuous mode activation, External trigger source and 
 222:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         edge, number of conversion in the regular channels group sequencer).  
 223:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 224:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
 225:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         the configuration information for the specified ADC peripheral.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 6


 226:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 227:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 228:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 229:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
  64              		.loc 1 229 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69              		.loc 1 229 1 is_stmt 0 view .LVU5
  70 0000 10B4     		push	{r4}
  71              	.LCFI1:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 4, -4
 230:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
  74              		.loc 1 230 3 is_stmt 1 view .LVU6
  75              	.LVL3:
 231:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint8_t tmpreg2 = 0;
  76              		.loc 1 231 3 view .LVU7
 232:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 233:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
  77              		.loc 1 233 3 view .LVU8
 234:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_RESOLUTION(ADC_InitStruct->ADC_Resolution)); 
  78              		.loc 1 234 3 view .LVU9
 235:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
  79              		.loc 1 235 3 view .LVU10
 236:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode)); 
  80              		.loc 1 236 3 view .LVU11
 237:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(ADC_InitStruct->ADC_ExternalTrigConvEdge)); 
  81              		.loc 1 237 3 view .LVU12
 238:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));    
  82              		.loc 1 238 3 view .LVU13
 239:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
  83              		.loc 1 239 3 view .LVU14
 240:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfConversion));
  84              		.loc 1 240 3 view .LVU15
 241:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 242:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /*---------------------------- ADCx CR1 Configuration -----------------*/
 243:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the ADCx CR1 value */
 244:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR1;
  85              		.loc 1 244 3 view .LVU16
  86              		.loc 1 244 11 is_stmt 0 view .LVU17
  87 0002 4268     		ldr	r2, [r0, #4]
  88              	.LVL4:
 245:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 246:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Clear RES and SCAN bits */
 247:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 &= CR1_CLEAR_MASK;
  89              		.loc 1 247 3 is_stmt 1 view .LVU18
  90              		.loc 1 247 11 is_stmt 0 view .LVU19
  91 0004 22F04072 		bic	r2, r2, #50331648
  92              	.LVL5:
  93              		.loc 1 247 11 view .LVU20
  94 0008 22F48072 		bic	r2, r2, #256
  95              	.LVL6:
 248:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 249:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Configure ADCx: scan conversion mode and resolution */
 250:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set SCAN bit according to ADC_ScanConvMode value */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 7


 251:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set RES bit according to ADC_Resolution value */ 
 252:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8) | \
  96              		.loc 1 252 3 is_stmt 1 view .LVU21
  97              		.loc 1 252 50 is_stmt 0 view .LVU22
  98 000c 0C79     		ldrb	r4, [r1, #4]	@ zero_extendqisi2
 253:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                                    ADC_InitStruct->ADC_Resolution);
  99              		.loc 1 253 50 view .LVU23
 100 000e 0B68     		ldr	r3, [r1]
 252:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                                    ADC_InitStruct->ADC_Resolution);
 101              		.loc 1 252 14 view .LVU24
 102 0010 43EA0423 		orr	r3, r3, r4, lsl #8
 252:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                                    ADC_InitStruct->ADC_Resolution);
 103              		.loc 1 252 11 view .LVU25
 104 0014 1343     		orrs	r3, r3, r2
 105              	.LVL7:
 254:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Write to ADCx CR1 */
 255:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg1;
 106              		.loc 1 255 3 is_stmt 1 view .LVU26
 107              		.loc 1 255 13 is_stmt 0 view .LVU27
 108 0016 4360     		str	r3, [r0, #4]
 256:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
 257:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the ADCx CR2 value */
 258:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR2;
 109              		.loc 1 258 3 is_stmt 1 view .LVU28
 110              		.loc 1 258 11 is_stmt 0 view .LVU29
 111 0018 8368     		ldr	r3, [r0, #8]
 112              	.LVL8:
 259:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 260:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Clear CONT, ALIGN, EXTEN and EXTSEL bits */
 261:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 &= CR2_CLEAR_MASK;
 113              		.loc 1 261 3 is_stmt 1 view .LVU30
 114              		.loc 1 261 11 is_stmt 0 view .LVU31
 115 001a 0C4A     		ldr	r2, .L5
 116 001c 1A40     		ands	r2, r2, r3
 117              	.LVL9:
 262:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 263:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Configure ADCx: external trigger event and edge, data alignment and 
 264:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      continuous conversion mode */
 265:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 266:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set EXTEN bits according to ADC_ExternalTrigConvEdge value */ 
 267:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set EXTSEL bits according to ADC_ExternalTrigConv value */
 268:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 269:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | \
 118              		.loc 1 269 3 is_stmt 1 view .LVU32
 119              		.loc 1 269 39 is_stmt 0 view .LVU33
 120 001e 0B69     		ldr	r3, [r1, #16]
 270:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 121              		.loc 1 270 39 view .LVU34
 122 0020 CC68     		ldr	r4, [r1, #12]
 269:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 123              		.loc 1 269 55 view .LVU35
 124 0022 2343     		orrs	r3, r3, r4
 271:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConvEdge | \
 125              		.loc 1 271 39 view .LVU36
 126 0024 8C68     		ldr	r4, [r1, #8]
 270:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 127              		.loc 1 270 62 view .LVU37
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 8


 128 0026 2343     		orrs	r3, r3, r4
 272:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 129              		.loc 1 272 50 view .LVU38
 130 0028 4C79     		ldrb	r4, [r1, #5]	@ zero_extendqisi2
 269:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 131              		.loc 1 269 14 view .LVU39
 132 002a 43EA4403 		orr	r3, r3, r4, lsl #1
 269:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 133              		.loc 1 269 11 view .LVU40
 134 002e 1343     		orrs	r3, r3, r2
 135              	.LVL10:
 273:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         
 274:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Write to ADCx CR2 */
 275:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg1;
 136              		.loc 1 275 3 is_stmt 1 view .LVU41
 137              		.loc 1 275 13 is_stmt 0 view .LVU42
 138 0030 8360     		str	r3, [r0, #8]
 276:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /*---------------------------- ADCx SQR1 Configuration -----------------*/
 277:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the ADCx SQR1 value */
 278:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->SQR1;
 139              		.loc 1 278 3 is_stmt 1 view .LVU43
 140              		.loc 1 278 11 is_stmt 0 view .LVU44
 141 0032 C36A     		ldr	r3, [r0, #44]
 142              	.LVL11:
 279:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 280:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Clear L bits */
 281:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 &= SQR1_L_RESET;
 143              		.loc 1 281 3 is_stmt 1 view .LVU45
 144              		.loc 1 281 11 is_stmt 0 view .LVU46
 145 0034 23F47003 		bic	r3, r3, #15728640
 146              	.LVL12:
 282:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 283:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Configure ADCx: regular channel sequence length */
 284:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set L bits according to ADC_NbrOfConversion value */
 285:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg2 |= (uint8_t)(ADC_InitStruct->ADC_NbrOfConversion - (uint8_t)1);
 147              		.loc 1 285 3 is_stmt 1 view .LVU47
 148              		.loc 1 285 38 is_stmt 0 view .LVU48
 149 0038 0A7D     		ldrb	r2, [r1, #20]	@ zero_extendqisi2
 150              		.loc 1 285 14 view .LVU49
 151 003a 013A     		subs	r2, r2, #1
 152 003c D2B2     		uxtb	r2, r2
 153              	.LVL13:
 286:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 |= ((uint32_t)tmpreg2 << 20);
 154              		.loc 1 286 3 is_stmt 1 view .LVU50
 155              		.loc 1 286 11 is_stmt 0 view .LVU51
 156 003e 43EA0253 		orr	r3, r3, r2, lsl #20
 157              	.LVL14:
 287:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 288:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Write to ADCx SQR1 */
 289:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->SQR1 = tmpreg1;
 158              		.loc 1 289 3 is_stmt 1 view .LVU52
 159              		.loc 1 289 14 is_stmt 0 view .LVU53
 160 0042 C362     		str	r3, [r0, #44]
 290:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 161              		.loc 1 290 1 view .LVU54
 162 0044 5DF8044B 		ldr	r4, [sp], #4
 163              	.LCFI2:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 9


 164              		.cfi_restore 4
 165              		.cfi_def_cfa_offset 0
 166 0048 7047     		bx	lr
 167              	.L6:
 168 004a 00BF     		.align	2
 169              	.L5:
 170 004c FDF7FFC0 		.word	-1056966659
 171              		.cfi_endproc
 172              	.LFE124:
 174              		.section	.text.ADC_StructInit,"ax",%progbits
 175              		.align	1
 176              		.global	ADC_StructInit
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv4-sp-d16
 182              	ADC_StructInit:
 183              	.LVL15:
 184              	.LFB125:
 291:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 292:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 293:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 294:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @note   This function is used to initialize the global features of the ADC ( 
 295:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         Resolution and Data Alignment), however, the rest of the configuration
 296:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         parameters are specific to the regular channels group (scan mode 
 297:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         activation, continuous mode activation, External trigger source and 
 298:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         edge, number of conversion in the regular channels group sequencer).  
 299:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure which will 
 300:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         be initialized.
 301:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 302:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 303:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 304:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 185              		.loc 1 304 1 is_stmt 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 305:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Initialize the ADC_Mode member */
 306:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_Resolution = ADC_Resolution_12b;
 190              		.loc 1 306 3 view .LVU56
 191              		.loc 1 306 34 is_stmt 0 view .LVU57
 192 0000 0023     		movs	r3, #0
 193 0002 0360     		str	r3, [r0]
 307:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 308:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* initialize the ADC_ScanConvMode member */
 309:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 194              		.loc 1 309 3 is_stmt 1 view .LVU58
 195              		.loc 1 309 36 is_stmt 0 view .LVU59
 196 0004 0371     		strb	r3, [r0, #4]
 310:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 311:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Initialize the ADC_ContinuousConvMode member */
 312:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 197              		.loc 1 312 3 is_stmt 1 view .LVU60
 198              		.loc 1 312 42 is_stmt 0 view .LVU61
 199 0006 4371     		strb	r3, [r0, #5]
 313:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 10


 314:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Initialize the ADC_ExternalTrigConvEdge member */
 315:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
 200              		.loc 1 315 3 is_stmt 1 view .LVU62
 201              		.loc 1 315 44 is_stmt 0 view .LVU63
 202 0008 8360     		str	r3, [r0, #8]
 316:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 317:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 318:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 203              		.loc 1 318 3 is_stmt 1 view .LVU64
 204              		.loc 1 318 40 is_stmt 0 view .LVU65
 205 000a C360     		str	r3, [r0, #12]
 319:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 320:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Initialize the ADC_DataAlign member */
 321:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 206              		.loc 1 321 3 is_stmt 1 view .LVU66
 207              		.loc 1 321 33 is_stmt 0 view .LVU67
 208 000c 0361     		str	r3, [r0, #16]
 322:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 323:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Initialize the ADC_NbrOfConversion member */
 324:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_NbrOfConversion = 1;
 209              		.loc 1 324 3 is_stmt 1 view .LVU68
 210              		.loc 1 324 39 is_stmt 0 view .LVU69
 211 000e 0123     		movs	r3, #1
 212 0010 0375     		strb	r3, [r0, #20]
 325:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 213              		.loc 1 325 1 view .LVU70
 214 0012 7047     		bx	lr
 215              		.cfi_endproc
 216              	.LFE125:
 218              		.section	.text.ADC_CommonInit,"ax",%progbits
 219              		.align	1
 220              		.global	ADC_CommonInit
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv4-sp-d16
 226              	ADC_CommonInit:
 227              	.LVL16:
 228              	.LFB126:
 326:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 327:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 328:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Initializes the ADCs peripherals according to the specified parameters 
 329:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         in the ADC_CommonInitStruct.
 330:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_CommonInitStruct: pointer to an ADC_CommonInitTypeDef structure 
 331:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         that contains the configuration information for  All ADCs peripherals.
 332:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 333:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 334:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_CommonInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct)
 335:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 229              		.loc 1 335 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 1 335 1 is_stmt 0 view .LVU72
 235 0000 10B4     		push	{r4}
 236              	.LCFI3:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 11


 237              		.cfi_def_cfa_offset 4
 238              		.cfi_offset 4, -4
 336:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 239              		.loc 1 336 3 is_stmt 1 view .LVU73
 240              	.LVL17:
 337:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 338:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_MODE(ADC_CommonInitStruct->ADC_Mode));
 241              		.loc 1 338 3 view .LVU74
 339:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_PRESCALER(ADC_CommonInitStruct->ADC_Prescaler));
 242              		.loc 1 339 3 view .LVU75
 340:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_DMA_ACCESS_MODE(ADC_CommonInitStruct->ADC_DMAAccessMode));
 243              		.loc 1 340 3 view .LVU76
 341:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLING_DELAY(ADC_CommonInitStruct->ADC_TwoSamplingDelay));
 244              		.loc 1 341 3 view .LVU77
 342:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /*---------------------------- ADC CCR Configuration -----------------*/
 343:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the ADC CCR value */
 344:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 = ADC->CCR;
 245              		.loc 1 344 3 view .LVU78
 246              		.loc 1 344 11 is_stmt 0 view .LVU79
 247 0002 0849     		ldr	r1, .L10
 248 0004 4B68     		ldr	r3, [r1, #4]
 249              	.LVL18:
 345:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 346:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Clear MULTI, DELAY, DMA and ADCPRE bits */
 347:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 &= CR_CLEAR_MASK;
 250              		.loc 1 347 3 is_stmt 1 view .LVU80
 251              		.loc 1 347 11 is_stmt 0 view .LVU81
 252 0006 084A     		ldr	r2, .L10+4
 253 0008 1A40     		ands	r2, r2, r3
 254              	.LVL19:
 348:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 349:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Configure ADCx: Multi mode, Delay between two sampling time, ADC prescaler,
 350:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      and DMA access mode for multimode */
 351:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set MULTI bits according to ADC_Mode value */
 352:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set ADCPRE bits according to ADC_Prescaler value */
 353:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set DMA bits according to ADC_DMAAccessMode value */
 354:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set DELAY bits according to ADC_TwoSamplingDelay value */    
 355:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_CommonInitStruct->ADC_Mode | 
 255              		.loc 1 355 3 is_stmt 1 view .LVU82
 256              		.loc 1 355 45 is_stmt 0 view .LVU83
 257 000a 0368     		ldr	r3, [r0]
 356:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 258              		.loc 1 356 45 view .LVU84
 259 000c 4468     		ldr	r4, [r0, #4]
 355:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 260              		.loc 1 355 56 view .LVU85
 261 000e 2343     		orrs	r3, r3, r4
 357:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_DMAAccessMode | 
 262              		.loc 1 357 45 view .LVU86
 263 0010 8468     		ldr	r4, [r0, #8]
 356:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 264              		.loc 1 356 61 view .LVU87
 265 0012 2343     		orrs	r3, r3, r4
 358:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_TwoSamplingDelay);
 266              		.loc 1 358 45 view .LVU88
 267 0014 C068     		ldr	r0, [r0, #12]
 268              	.LVL20:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 12


 357:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_DMAAccessMode | 
 269              		.loc 1 357 65 view .LVU89
 270 0016 0343     		orrs	r3, r3, r0
 355:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 271              		.loc 1 355 11 view .LVU90
 272 0018 1343     		orrs	r3, r3, r2
 273              	.LVL21:
 359:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                         
 360:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Write to ADC CCR */
 361:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADC->CCR = tmpreg1;
 274              		.loc 1 361 3 is_stmt 1 view .LVU91
 275              		.loc 1 361 12 is_stmt 0 view .LVU92
 276 001a 4B60     		str	r3, [r1, #4]
 362:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 277              		.loc 1 362 1 view .LVU93
 278 001c 5DF8044B 		ldr	r4, [sp], #4
 279              	.LCFI4:
 280              		.cfi_restore 4
 281              		.cfi_def_cfa_offset 0
 282 0020 7047     		bx	lr
 283              	.L11:
 284 0022 00BF     		.align	2
 285              	.L10:
 286 0024 00230140 		.word	1073816320
 287 0028 E030FCFF 		.word	-249632
 288              		.cfi_endproc
 289              	.LFE126:
 291              		.section	.text.ADC_CommonStructInit,"ax",%progbits
 292              		.align	1
 293              		.global	ADC_CommonStructInit
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 297              		.fpu fpv4-sp-d16
 299              	ADC_CommonStructInit:
 300              	.LVL22:
 301              	.LFB127:
 363:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 364:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 365:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Fills each ADC_CommonInitStruct member with its default value.
 366:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_CommonInitStruct: pointer to an ADC_CommonInitTypeDef structure
 367:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         which will be initialized.
 368:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 369:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 370:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_CommonStructInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct)
 371:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 302              		.loc 1 371 1 is_stmt 1 view -0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              		@ link register save eliminated.
 372:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Initialize the ADC_Mode member */
 373:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_Mode = ADC_Mode_Independent;
 307              		.loc 1 373 3 view .LVU95
 308              		.loc 1 373 34 is_stmt 0 view .LVU96
 309 0000 0023     		movs	r3, #0
 310 0002 0360     		str	r3, [r0]
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 13


 374:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 375:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* initialize the ADC_Prescaler member */
 376:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_Prescaler = ADC_Prescaler_Div2;
 311              		.loc 1 376 3 is_stmt 1 view .LVU97
 312              		.loc 1 376 39 is_stmt 0 view .LVU98
 313 0004 4360     		str	r3, [r0, #4]
 377:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 378:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Initialize the ADC_DMAAccessMode member */
 379:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
 314              		.loc 1 379 3 is_stmt 1 view .LVU99
 315              		.loc 1 379 43 is_stmt 0 view .LVU100
 316 0006 8360     		str	r3, [r0, #8]
 380:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 381:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Initialize the ADC_TwoSamplingDelay member */
 382:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
 317              		.loc 1 382 3 is_stmt 1 view .LVU101
 318              		.loc 1 382 46 is_stmt 0 view .LVU102
 319 0008 C360     		str	r3, [r0, #12]
 383:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 320              		.loc 1 383 1 view .LVU103
 321 000a 7047     		bx	lr
 322              		.cfi_endproc
 323              	.LFE127:
 325              		.section	.text.ADC_Cmd,"ax",%progbits
 326              		.align	1
 327              		.global	ADC_Cmd
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 331              		.fpu fpv4-sp-d16
 333              	ADC_Cmd:
 334              	.LVL23:
 335              	.LFB128:
 384:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 385:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 386:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 387:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 388:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the ADCx peripheral. 
 389:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 390:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 391:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 392:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 393:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 336              		.loc 1 393 1 is_stmt 1 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 394:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 395:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 341              		.loc 1 395 3 view .LVU105
 396:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 342              		.loc 1 396 3 view .LVU106
 397:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 343              		.loc 1 397 3 view .LVU107
 344              		.loc 1 397 6 is_stmt 0 view .LVU108
 345 0000 21B1     		cbz	r1, .L14
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 14


 398:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 399:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Set the ADON bit to wake up the ADC from power down mode */
 400:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_ADON;
 346              		.loc 1 400 5 is_stmt 1 view .LVU109
 347              		.loc 1 400 15 is_stmt 0 view .LVU110
 348 0002 8368     		ldr	r3, [r0, #8]
 349 0004 43F00103 		orr	r3, r3, #1
 350 0008 8360     		str	r3, [r0, #8]
 351 000a 7047     		bx	lr
 352              	.L14:
 401:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 402:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
 403:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 404:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Disable the selected ADC peripheral */
 405:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_ADON);
 353              		.loc 1 405 5 is_stmt 1 view .LVU111
 354              		.loc 1 405 15 is_stmt 0 view .LVU112
 355 000c 8368     		ldr	r3, [r0, #8]
 356 000e 23F00103 		bic	r3, r3, #1
 357 0012 8360     		str	r3, [r0, #8]
 406:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 407:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 358              		.loc 1 407 1 view .LVU113
 359 0014 7047     		bx	lr
 360              		.cfi_endproc
 361              	.LFE128:
 363              		.section	.text.ADC_AnalogWatchdogCmd,"ax",%progbits
 364              		.align	1
 365              		.global	ADC_AnalogWatchdogCmd
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	ADC_AnalogWatchdogCmd:
 372              	.LVL24:
 373              	.LFB129:
 408:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 409:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @}
 410:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 411:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 412:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group2 Analog Watchdog configuration functions
 413:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *  @brief    Analog Watchdog configuration functions 
 414:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *
 415:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** @verbatim   
 416:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================
 417:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              ##### Analog Watchdog configuration functions #####
 418:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================  
 419:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] This section provides functions allowing to configure the Analog Watchdog
 420:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          (AWD) feature in the ADC.
 421:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 422:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] A typical configuration Analog Watchdog is done following these steps :
 423:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (#) the ADC guarded channel(s) is (are) selected using the 
 424:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           ADC_AnalogWatchdogSingleChannelConfig() function.
 425:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (#) The Analog watchdog lower and higher threshold are configured using the  
 426:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           ADC_AnalogWatchdogThresholdsConfig() function.
 427:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (#) The Analog watchdog is enabled and configured to enable the check, on one
 428:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           or more channels, using the  ADC_AnalogWatchdogCmd() function.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 15


 429:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** @endverbatim
 430:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @{
 431:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 432:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 433:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 434:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the analog watchdog on single/all regular or 
 435:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         injected channels
 436:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 437:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_AnalogWatchdog: the ADC analog watchdog configuration.
 438:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         This parameter can be one of the following values:
 439:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel
 440:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected chan
 441:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular 
 442:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on all regular channel
 443:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on all injected channel
 444:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and inj
 445:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog
 446:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None	  
 447:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 448:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
 449:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 374              		.loc 1 449 1 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 450:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
 379              		.loc 1 450 3 view .LVU115
 451:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 452:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 380              		.loc 1 452 3 view .LVU116
 453:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(ADC_AnalogWatchdog));
 381              		.loc 1 453 3 view .LVU117
 454:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 455:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the old register value */
 456:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR1;
 382              		.loc 1 456 3 view .LVU118
 383              		.loc 1 456 10 is_stmt 0 view .LVU119
 384 0000 4368     		ldr	r3, [r0, #4]
 385              	.LVL25:
 457:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 458:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
 459:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg &= CR1_AWDMode_RESET;
 386              		.loc 1 459 3 is_stmt 1 view .LVU120
 387              		.loc 1 459 10 is_stmt 0 view .LVU121
 388 0002 23F44003 		bic	r3, r3, #12582912
 389              	.LVL26:
 390              		.loc 1 459 10 view .LVU122
 391 0006 23F40073 		bic	r3, r3, #512
 392              	.LVL27:
 460:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 461:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set the analog watchdog enable mode */
 462:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg |= ADC_AnalogWatchdog;
 393              		.loc 1 462 3 is_stmt 1 view .LVU123
 394              		.loc 1 462 10 is_stmt 0 view .LVU124
 395 000a 0B43     		orrs	r3, r3, r1
 396              	.LVL28:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 16


 463:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 464:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Store the new register value */
 465:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg;
 397              		.loc 1 465 3 is_stmt 1 view .LVU125
 398              		.loc 1 465 13 is_stmt 0 view .LVU126
 399 000c 4360     		str	r3, [r0, #4]
 466:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 400              		.loc 1 466 1 view .LVU127
 401 000e 7047     		bx	lr
 402              		.cfi_endproc
 403              	.LFE129:
 405              		.section	.text.ADC_AnalogWatchdogThresholdsConfig,"ax",%progbits
 406              		.align	1
 407              		.global	ADC_AnalogWatchdogThresholdsConfig
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 411              		.fpu fpv4-sp-d16
 413              	ADC_AnalogWatchdogThresholdsConfig:
 414              	.LVL29:
 415              	.LFB130:
 467:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 468:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 469:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog.
 470:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 471:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
 472:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter must be a 12-bit value.
 473:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  LowThreshold:  the ADC analog watchdog Low threshold value.
 474:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter must be a 12-bit value.
 475:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 476:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 477:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
 478:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                                         uint16_t LowThreshold)
 479:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 416              		.loc 1 479 1 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 480:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 481:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 421              		.loc 1 481 3 view .LVU129
 482:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
 422              		.loc 1 482 3 view .LVU130
 483:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
 423              		.loc 1 483 3 view .LVU131
 484:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 485:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set the ADCx high threshold */
 486:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->HTR = HighThreshold;
 424              		.loc 1 486 3 view .LVU132
 425              		.loc 1 486 13 is_stmt 0 view .LVU133
 426 0000 4162     		str	r1, [r0, #36]
 487:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 488:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set the ADCx low threshold */
 489:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->LTR = LowThreshold;
 427              		.loc 1 489 3 is_stmt 1 view .LVU134
 428              		.loc 1 489 13 is_stmt 0 view .LVU135
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 17


 429 0002 8262     		str	r2, [r0, #40]
 490:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 430              		.loc 1 490 1 view .LVU136
 431 0004 7047     		bx	lr
 432              		.cfi_endproc
 433              	.LFE130:
 435              		.section	.text.ADC_AnalogWatchdogSingleChannelConfig,"ax",%progbits
 436              		.align	1
 437              		.global	ADC_AnalogWatchdogSingleChannelConfig
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv4-sp-d16
 443              	ADC_AnalogWatchdogSingleChannelConfig:
 444              	.LVL30:
 445              	.LFB131:
 491:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 492:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 493:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
 494:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 495:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure for the analog watchdog. 
 496:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
 497:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
 498:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
 499:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
 500:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
 501:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
 502:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
 503:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
 504:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
 505:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
 506:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
 507:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
 508:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
 509:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
 510:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
 511:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
 512:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
 513:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
 514:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
 515:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected
 516:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 517:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 518:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
 519:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 446              		.loc 1 519 1 is_stmt 1 view -0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 520:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
 451              		.loc 1 520 3 view .LVU138
 521:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 522:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 452              		.loc 1 522 3 view .LVU139
 523:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 453              		.loc 1 523 3 view .LVU140
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 18


 524:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 525:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the old register value */
 526:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR1;
 454              		.loc 1 526 3 view .LVU141
 455              		.loc 1 526 10 is_stmt 0 view .LVU142
 456 0000 4368     		ldr	r3, [r0, #4]
 457              	.LVL31:
 527:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 528:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Clear the Analog watchdog channel select bits */
 529:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg &= CR1_AWDCH_RESET;
 458              		.loc 1 529 3 is_stmt 1 view .LVU143
 459              		.loc 1 529 10 is_stmt 0 view .LVU144
 460 0002 23F01F03 		bic	r3, r3, #31
 461              	.LVL32:
 530:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 531:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set the Analog watchdog channel */
 532:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg |= ADC_Channel;
 462              		.loc 1 532 3 is_stmt 1 view .LVU145
 463              		.loc 1 532 10 is_stmt 0 view .LVU146
 464 0006 1943     		orrs	r1, r1, r3
 465              	.LVL33:
 533:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 534:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Store the new register value */
 535:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg;
 466              		.loc 1 535 3 is_stmt 1 view .LVU147
 467              		.loc 1 535 13 is_stmt 0 view .LVU148
 468 0008 4160     		str	r1, [r0, #4]
 536:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 469              		.loc 1 536 1 view .LVU149
 470 000a 7047     		bx	lr
 471              		.cfi_endproc
 472              	.LFE131:
 474              		.section	.text.ADC_TempSensorVrefintCmd,"ax",%progbits
 475              		.align	1
 476              		.global	ADC_TempSensorVrefintCmd
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 480              		.fpu fpv4-sp-d16
 482              	ADC_TempSensorVrefintCmd:
 483              	.LVL34:
 484              	.LFB132:
 537:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 538:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @}
 539:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 540:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 541:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group3 Temperature Sensor, Vrefint (Voltage Reference internal) 
 542:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *            and VBAT (Voltage BATtery) management functions
 543:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *  @brief   Temperature Sensor, Vrefint and VBAT management functions 
 544:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *
 545:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** @verbatim   
 546:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================
 547:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       ##### Temperature Sensor, Vrefint and VBAT management functions #####
 548:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================  
 549:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] This section provides functions allowing to enable/ disable the internal 
 550:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          connections between the ADC and the Temperature Sensor, the Vrefint and 
 551:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          the Vbat sources.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 19


 552:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      
 553:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] A typical configuration to get the Temperature sensor and Vrefint channels 
 554:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          voltages is done following these steps :
 555:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (#) Enable the internal connection of Temperature sensor and Vrefint sources 
 556:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           with the ADC channels using ADC_TempSensorVrefintCmd() function. 
 557:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (#) Select the ADC_Channel_TempSensor and/or ADC_Channel_Vrefint using 
 558:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           ADC_RegularChannelConfig() or  ADC_InjectedChannelConfig() functions 
 559:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (#) Get the voltage values, using ADC_GetConversionValue() or  
 560:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           ADC_GetInjectedConversionValue().
 561:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 562:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] A typical configuration to get the VBAT channel voltage is done following 
 563:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          these steps :
 564:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (#) Enable the internal connection of VBAT source with the ADC channel using 
 565:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           ADC_VBATCmd() function. 
 566:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (#) Select the ADC_Channel_Vbat using ADC_RegularChannelConfig() or  
 567:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           ADC_InjectedChannelConfig() functions 
 568:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (#) Get the voltage value, using ADC_GetConversionValue() or  
 569:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           ADC_GetInjectedConversionValue().
 570:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  
 571:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** @endverbatim
 572:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @{
 573:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 574:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 575:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 576:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 577:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the temperature sensor and Vrefint channels.
 578:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the temperature sensor and Vrefint channels.
 579:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 580:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 581:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 582:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_TempSensorVrefintCmd(FunctionalState NewState)                
 583:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 485              		.loc 1 583 1 is_stmt 1 view -0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 584:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 585:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 490              		.loc 1 585 3 view .LVU151
 586:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 491              		.loc 1 586 3 view .LVU152
 492              		.loc 1 586 6 is_stmt 0 view .LVU153
 493 0000 28B1     		cbz	r0, .L20
 587:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 588:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Enable the temperature sensor and Vrefint channel*/
 589:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_TSVREFE;
 494              		.loc 1 589 5 is_stmt 1 view .LVU154
 495              		.loc 1 589 14 is_stmt 0 view .LVU155
 496 0002 064A     		ldr	r2, .L22
 497 0004 5368     		ldr	r3, [r2, #4]
 498 0006 43F40003 		orr	r3, r3, #8388608
 499 000a 5360     		str	r3, [r2, #4]
 500 000c 7047     		bx	lr
 501              	.L20:
 590:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 591:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 20


 592:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 593:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Disable the temperature sensor and Vrefint channel*/
 594:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_TSVREFE);
 502              		.loc 1 594 5 is_stmt 1 view .LVU156
 503              		.loc 1 594 14 is_stmt 0 view .LVU157
 504 000e 034A     		ldr	r2, .L22
 505 0010 5368     		ldr	r3, [r2, #4]
 506 0012 23F40003 		bic	r3, r3, #8388608
 507 0016 5360     		str	r3, [r2, #4]
 595:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 596:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 508              		.loc 1 596 1 view .LVU158
 509 0018 7047     		bx	lr
 510              	.L23:
 511 001a 00BF     		.align	2
 512              	.L22:
 513 001c 00230140 		.word	1073816320
 514              		.cfi_endproc
 515              	.LFE132:
 517              		.section	.text.ADC_VBATCmd,"ax",%progbits
 518              		.align	1
 519              		.global	ADC_VBATCmd
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu fpv4-sp-d16
 525              	ADC_VBATCmd:
 526              	.LVL35:
 527              	.LFB133:
 597:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 598:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 599:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the VBAT (Voltage Battery) channel.
 600:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * 
 601:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @note   the Battery voltage measured is equal to VBAT/2 on STM32F40xx and 
 602:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         STM32F41xx devices and equal to VBAT/4 on STM32F42xx and STM32F43xx devices 
 603:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *              
 604:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the VBAT channel.
 605:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 606:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 607:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 608:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_VBATCmd(FunctionalState NewState)                             
 609:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 528              		.loc 1 609 1 is_stmt 1 view -0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 610:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 611:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 533              		.loc 1 611 3 view .LVU160
 612:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 534              		.loc 1 612 3 view .LVU161
 535              		.loc 1 612 6 is_stmt 0 view .LVU162
 536 0000 28B1     		cbz	r0, .L25
 613:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 614:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Enable the VBAT channel*/
 615:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_VBATE;
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 21


 537              		.loc 1 615 5 is_stmt 1 view .LVU163
 538              		.loc 1 615 14 is_stmt 0 view .LVU164
 539 0002 064A     		ldr	r2, .L27
 540 0004 5368     		ldr	r3, [r2, #4]
 541 0006 43F48003 		orr	r3, r3, #4194304
 542 000a 5360     		str	r3, [r2, #4]
 543 000c 7047     		bx	lr
 544              	.L25:
 616:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 617:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
 618:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 619:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Disable the VBAT channel*/
 620:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_VBATE);
 545              		.loc 1 620 5 is_stmt 1 view .LVU165
 546              		.loc 1 620 14 is_stmt 0 view .LVU166
 547 000e 034A     		ldr	r2, .L27
 548 0010 5368     		ldr	r3, [r2, #4]
 549 0012 23F48003 		bic	r3, r3, #4194304
 550 0016 5360     		str	r3, [r2, #4]
 621:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 622:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 551              		.loc 1 622 1 view .LVU167
 552 0018 7047     		bx	lr
 553              	.L28:
 554 001a 00BF     		.align	2
 555              	.L27:
 556 001c 00230140 		.word	1073816320
 557              		.cfi_endproc
 558              	.LFE133:
 560              		.section	.text.ADC_RegularChannelConfig,"ax",%progbits
 561              		.align	1
 562              		.global	ADC_RegularChannelConfig
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 566              		.fpu fpv4-sp-d16
 568              	ADC_RegularChannelConfig:
 569              	.LVL36:
 570              	.LFB134:
 623:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 624:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 625:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @}
 626:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 627:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 628:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group4 Regular Channels Configuration functions
 629:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *  @brief   Regular Channels Configuration functions 
 630:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *
 631:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** @verbatim   
 632:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================
 633:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              ##### Regular Channels Configuration functions #####
 634:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================  
 635:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 636:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] This section provides functions allowing to manage the ADC's regular channels,
 637:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          it is composed of 2 sub sections : 
 638:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 639:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (#) Configuration and management functions for regular channels: This subsection 
 640:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           provides functions allowing to configure the ADC regular channels :    
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 22


 641:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          (++) Configure the rank in the regular group sequencer for each channel
 642:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          (++) Configure the sampling time for each channel
 643:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          (++) select the conversion Trigger for regular channels
 644:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          (++) select the desired EOC event behavior configuration
 645:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          (++) Activate the continuous Mode  (*)
 646:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          (++) Activate the Discontinuous Mode 
 647:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          -@@- Please Note that the following features for regular channels 
 648:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              are configured using the ADC_Init() function : 
 649:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            (+@@) scan mode activation 
 650:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            (+@@) continuous mode activation (**) 
 651:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            (+@@) External trigger source  
 652:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            (+@@) External trigger edge 
 653:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****            (+@@) number of conversion in the regular channels group sequencer.
 654:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      
 655:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          -@@- (*) and (**) are performing the same configuration
 656:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      
 657:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (#) Get the conversion data: This subsection provides an important function in 
 658:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           the ADC peripheral since it returns the converted data of the current 
 659:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           regular channel. When the Conversion value is read, the EOC Flag is 
 660:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           automatically cleared.
 661:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****      
 662:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           -@- For multi ADC mode, the last ADC1, ADC2 and ADC3 regular conversions 
 663:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****               results data (in the selected multi mode) can be returned in the same 
 664:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****               time using ADC_GetMultiModeConversionValue() function. 
 665:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          
 666:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** @endverbatim
 667:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @{
 668:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 669:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 670:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
 671:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         rank in the sequencer and its sample time.
 672:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 673:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 674:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
 675:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
 676:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
 677:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
 678:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
 679:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
 680:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
 681:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
 682:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
 683:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
 684:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
 685:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
 686:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
 687:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
 688:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
 689:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
 690:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
 691:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
 692:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
 693:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected                       
 694:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  Rank: The rank in the regular group sequencer.
 695:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter must be between 1 to 16.
 696:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 697:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 23


 698:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_3Cycles: Sample time equal to 3 cycles
 699:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_15Cycles: Sample time equal to 15 cycles
 700:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_28Cycles: Sample time equal to 28 cycles
 701:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_56Cycles: Sample time equal to 56 cycles	
 702:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_84Cycles: Sample time equal to 84 cycles	
 703:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_112Cycles: Sample time equal to 112 cycles	
 704:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_144Cycles: Sample time equal to 144 cycles	
 705:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_480Cycles: Sample time equal to 480 cycles	
 706:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 707:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 708:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sam
 709:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 571              		.loc 1 709 1 is_stmt 1 view -0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 576              		.loc 1 709 1 is_stmt 0 view .LVU169
 577 0000 70B4     		push	{r4, r5, r6}
 578              	.LCFI5:
 579              		.cfi_def_cfa_offset 12
 580              		.cfi_offset 4, -12
 581              		.cfi_offset 5, -8
 582              		.cfi_offset 6, -4
 710:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 583              		.loc 1 710 3 is_stmt 1 view .LVU170
 584              	.LVL37:
 711:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 712:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 585              		.loc 1 712 3 view .LVU171
 713:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 586              		.loc 1 713 3 view .LVU172
 714:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(Rank));
 587              		.loc 1 714 3 view .LVU173
 715:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 588              		.loc 1 715 3 view .LVU174
 716:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 717:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
 718:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 589              		.loc 1 718 3 view .LVU175
 590              		.loc 1 718 6 is_stmt 0 view .LVU176
 591 0002 0929     		cmp	r1, #9
 592 0004 1BD9     		bls	.L30
 719:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 720:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Get the old register value */
 721:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR1;
 593              		.loc 1 721 5 is_stmt 1 view .LVU177
 594              		.loc 1 721 13 is_stmt 0 view .LVU178
 595 0006 C568     		ldr	r5, [r0, #12]
 596              	.LVL38:
 722:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 723:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 724:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg2 = SMPR1_SMP_SET << (3 * (ADC_Channel - 10));
 597              		.loc 1 724 5 is_stmt 1 view .LVU179
 598              		.loc 1 724 50 is_stmt 0 view .LVU180
 599 0008 A1F10A04 		sub	r4, r1, #10
 600              		.loc 1 724 35 view .LVU181
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 24


 601 000c 04EB4404 		add	r4, r4, r4, lsl #1
 602              		.loc 1 724 13 view .LVU182
 603 0010 0726     		movs	r6, #7
 604 0012 A640     		lsls	r6, r6, r4
 605              	.LVL39:
 725:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 726:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
 727:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 606              		.loc 1 727 5 is_stmt 1 view .LVU183
 607              		.loc 1 727 13 is_stmt 0 view .LVU184
 608 0014 25EA0605 		bic	r5, r5, r6
 609              	.LVL40:
 728:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 729:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 730:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
 610              		.loc 1 730 5 is_stmt 1 view .LVU185
 611              		.loc 1 730 13 is_stmt 0 view .LVU186
 612 0018 A340     		lsls	r3, r3, r4
 613              	.LVL41:
 731:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 732:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Set the new sample time */
 733:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 614              		.loc 1 733 5 is_stmt 1 view .LVU187
 615              		.loc 1 733 13 is_stmt 0 view .LVU188
 616 001a 2B43     		orrs	r3, r3, r5
 617              	.LVL42:
 734:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 735:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Store the new register value */
 736:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->SMPR1 = tmpreg1;
 618              		.loc 1 736 5 is_stmt 1 view .LVU189
 619              		.loc 1 736 17 is_stmt 0 view .LVU190
 620 001c C360     		str	r3, [r0, #12]
 621              	.L31:
 737:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 738:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 739:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 740:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Get the old register value */
 741:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR2;
 742:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 743:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 744:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg2 = SMPR2_SMP_SET << (3 * ADC_Channel);
 745:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 746:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
 747:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 748:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 749:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 750:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 751:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 752:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Set the new sample time */
 753:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 754:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 755:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Store the new register value */
 756:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->SMPR2 = tmpreg1;
 757:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 758:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* For Rank 1 to 6 */
 759:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (Rank < 7)
 622              		.loc 1 759 3 is_stmt 1 view .LVU191
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 25


 623              		.loc 1 759 6 is_stmt 0 view .LVU192
 624 001e 062A     		cmp	r2, #6
 625 0020 18D8     		bhi	.L32
 760:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 761:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Get the old register value */
 762:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR3;
 626              		.loc 1 762 5 is_stmt 1 view .LVU193
 627              		.loc 1 762 13 is_stmt 0 view .LVU194
 628 0022 436B     		ldr	r3, [r0, #52]
 629              	.LVL43:
 763:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 764:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 765:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg2 = SQR3_SQ_SET << (5 * (Rank - 1));
 630              		.loc 1 765 5 is_stmt 1 view .LVU195
 631              		.loc 1 765 41 is_stmt 0 view .LVU196
 632 0024 013A     		subs	r2, r2, #1
 633              	.LVL44:
 634              		.loc 1 765 33 view .LVU197
 635 0026 02EB8202 		add	r2, r2, r2, lsl #2
 636              		.loc 1 765 13 view .LVU198
 637 002a 1F24     		movs	r4, #31
 638 002c 9440     		lsls	r4, r4, r2
 639              	.LVL45:
 766:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 767:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 768:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 640              		.loc 1 768 5 is_stmt 1 view .LVU199
 641              		.loc 1 768 13 is_stmt 0 view .LVU200
 642 002e 23EA0403 		bic	r3, r3, r4
 643              	.LVL46:
 769:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 770:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 771:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 644              		.loc 1 771 5 is_stmt 1 view .LVU201
 645              		.loc 1 771 13 is_stmt 0 view .LVU202
 646 0032 01FA02F2 		lsl	r2, r1, r2
 647              	.LVL47:
 772:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 773:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 774:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 648              		.loc 1 774 5 is_stmt 1 view .LVU203
 649              		.loc 1 774 13 is_stmt 0 view .LVU204
 650 0036 1A43     		orrs	r2, r2, r3
 651              	.LVL48:
 775:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 776:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Store the new register value */
 777:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->SQR3 = tmpreg1;
 652              		.loc 1 777 5 is_stmt 1 view .LVU205
 653              		.loc 1 777 16 is_stmt 0 view .LVU206
 654 0038 4263     		str	r2, [r0, #52]
 655              	.L29:
 778:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 779:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* For Rank 7 to 12 */
 780:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else if (Rank < 13)
 781:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 782:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Get the old register value */
 783:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR2;
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 26


 784:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 785:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 786:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg2 = SQR2_SQ_SET << (5 * (Rank - 7));
 787:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 788:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 789:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 790:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 791:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 792:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 793:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 794:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 795:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 796:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 797:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Store the new register value */
 798:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->SQR2 = tmpreg1;
 799:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 800:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* For Rank 13 to 16 */
 801:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
 802:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 803:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Get the old register value */
 804:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR1;
 805:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 806:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 807:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg2 = SQR1_SQ_SET << (5 * (Rank - 13));
 808:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 809:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 810:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 811:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 812:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 813:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
 814:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 815:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 816:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 817:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 818:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Store the new register value */
 819:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->SQR1 = tmpreg1;
 820:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 821:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 656              		.loc 1 821 1 view .LVU207
 657 003a 70BC     		pop	{r4, r5, r6}
 658              	.LCFI6:
 659              		.cfi_remember_state
 660              		.cfi_restore 6
 661              		.cfi_restore 5
 662              		.cfi_restore 4
 663              		.cfi_def_cfa_offset 0
 664 003c 7047     		bx	lr
 665              	.LVL49:
 666              	.L30:
 667              	.LCFI7:
 668              		.cfi_restore_state
 741:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 669              		.loc 1 741 5 is_stmt 1 view .LVU208
 741:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 670              		.loc 1 741 13 is_stmt 0 view .LVU209
 671 003e 0469     		ldr	r4, [r0, #16]
 672              	.LVL50:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 27


 744:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 673              		.loc 1 744 5 is_stmt 1 view .LVU210
 744:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 674              		.loc 1 744 35 is_stmt 0 view .LVU211
 675 0040 01EB4106 		add	r6, r1, r1, lsl #1
 744:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 676              		.loc 1 744 13 view .LVU212
 677 0044 0725     		movs	r5, #7
 678 0046 B540     		lsls	r5, r5, r6
 679              	.LVL51:
 747:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 680              		.loc 1 747 5 is_stmt 1 view .LVU213
 747:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 681              		.loc 1 747 13 is_stmt 0 view .LVU214
 682 0048 24EA0504 		bic	r4, r4, r5
 683              	.LVL52:
 750:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 684              		.loc 1 750 5 is_stmt 1 view .LVU215
 750:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 685              		.loc 1 750 13 is_stmt 0 view .LVU216
 686 004c B340     		lsls	r3, r3, r6
 687              	.LVL53:
 753:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 688              		.loc 1 753 5 is_stmt 1 view .LVU217
 753:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 689              		.loc 1 753 13 is_stmt 0 view .LVU218
 690 004e 2343     		orrs	r3, r3, r4
 691              	.LVL54:
 756:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 692              		.loc 1 756 5 is_stmt 1 view .LVU219
 756:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 693              		.loc 1 756 17 is_stmt 0 view .LVU220
 694 0050 0361     		str	r3, [r0, #16]
 695 0052 E4E7     		b	.L31
 696              	.L32:
 780:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 697              		.loc 1 780 8 is_stmt 1 view .LVU221
 780:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 698              		.loc 1 780 11 is_stmt 0 view .LVU222
 699 0054 0C2A     		cmp	r2, #12
 700 0056 0CD8     		bhi	.L34
 783:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 701              		.loc 1 783 5 is_stmt 1 view .LVU223
 783:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 702              		.loc 1 783 13 is_stmt 0 view .LVU224
 703 0058 036B     		ldr	r3, [r0, #48]
 704              	.LVL55:
 786:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 705              		.loc 1 786 5 is_stmt 1 view .LVU225
 786:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 706              		.loc 1 786 41 is_stmt 0 view .LVU226
 707 005a 073A     		subs	r2, r2, #7
 708              	.LVL56:
 786:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 709              		.loc 1 786 33 view .LVU227
 710 005c 02EB8202 		add	r2, r2, r2, lsl #2
 786:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 28


 711              		.loc 1 786 13 view .LVU228
 712 0060 1F24     		movs	r4, #31
 713 0062 9440     		lsls	r4, r4, r2
 714              	.LVL57:
 789:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 715              		.loc 1 789 5 is_stmt 1 view .LVU229
 789:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 716              		.loc 1 789 13 is_stmt 0 view .LVU230
 717 0064 23EA0403 		bic	r3, r3, r4
 718              	.LVL58:
 792:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 719              		.loc 1 792 5 is_stmt 1 view .LVU231
 792:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 720              		.loc 1 792 13 is_stmt 0 view .LVU232
 721 0068 01FA02F2 		lsl	r2, r1, r2
 722              	.LVL59:
 795:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 723              		.loc 1 795 5 is_stmt 1 view .LVU233
 795:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 724              		.loc 1 795 13 is_stmt 0 view .LVU234
 725 006c 1A43     		orrs	r2, r2, r3
 726              	.LVL60:
 798:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 727              		.loc 1 798 5 is_stmt 1 view .LVU235
 798:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 728              		.loc 1 798 16 is_stmt 0 view .LVU236
 729 006e 0263     		str	r2, [r0, #48]
 730 0070 E3E7     		b	.L29
 731              	.LVL61:
 732              	.L34:
 804:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 733              		.loc 1 804 5 is_stmt 1 view .LVU237
 804:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 734              		.loc 1 804 13 is_stmt 0 view .LVU238
 735 0072 C36A     		ldr	r3, [r0, #44]
 736              	.LVL62:
 807:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 737              		.loc 1 807 5 is_stmt 1 view .LVU239
 807:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 738              		.loc 1 807 41 is_stmt 0 view .LVU240
 739 0074 0D3A     		subs	r2, r2, #13
 740              	.LVL63:
 807:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 741              		.loc 1 807 33 view .LVU241
 742 0076 02EB8202 		add	r2, r2, r2, lsl #2
 807:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 743              		.loc 1 807 13 view .LVU242
 744 007a 1F24     		movs	r4, #31
 745 007c 9440     		lsls	r4, r4, r2
 746              	.LVL64:
 810:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 747              		.loc 1 810 5 is_stmt 1 view .LVU243
 810:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 748              		.loc 1 810 13 is_stmt 0 view .LVU244
 749 007e 23EA0403 		bic	r3, r3, r4
 750              	.LVL65:
 813:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 29


 751              		.loc 1 813 5 is_stmt 1 view .LVU245
 813:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 752              		.loc 1 813 13 is_stmt 0 view .LVU246
 753 0082 01FA02F2 		lsl	r2, r1, r2
 754              	.LVL66:
 816:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 755              		.loc 1 816 5 is_stmt 1 view .LVU247
 816:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
 756              		.loc 1 816 13 is_stmt 0 view .LVU248
 757 0086 1A43     		orrs	r2, r2, r3
 758              	.LVL67:
 819:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 759              		.loc 1 819 5 is_stmt 1 view .LVU249
 819:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 760              		.loc 1 819 16 is_stmt 0 view .LVU250
 761 0088 C262     		str	r2, [r0, #44]
 762              		.loc 1 821 1 view .LVU251
 763 008a D6E7     		b	.L29
 764              		.cfi_endproc
 765              	.LFE134:
 767              		.section	.text.ADC_SoftwareStartConv,"ax",%progbits
 768              		.align	1
 769              		.global	ADC_SoftwareStartConv
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu fpv4-sp-d16
 775              	ADC_SoftwareStartConv:
 776              	.LVL68:
 777              	.LFB135:
 822:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 823:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 824:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables the selected ADC software start conversion of the regular channels.
 825:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 826:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 827:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 828:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_SoftwareStartConv(ADC_TypeDef* ADCx)
 829:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 778              		.loc 1 829 1 is_stmt 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 830:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 831:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 783              		.loc 1 831 3 view .LVU253
 832:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 833:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Enable the selected ADC conversion for regular group */
 834:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 784              		.loc 1 834 3 view .LVU254
 785              		.loc 1 834 13 is_stmt 0 view .LVU255
 786 0000 8368     		ldr	r3, [r0, #8]
 787 0002 43F08043 		orr	r3, r3, #1073741824
 788 0006 8360     		str	r3, [r0, #8]
 835:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 789              		.loc 1 835 1 view .LVU256
 790 0008 7047     		bx	lr
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 30


 791              		.cfi_endproc
 792              	.LFE135:
 794              		.section	.text.ADC_GetSoftwareStartConvStatus,"ax",%progbits
 795              		.align	1
 796              		.global	ADC_GetSoftwareStartConvStatus
 797              		.syntax unified
 798              		.thumb
 799              		.thumb_func
 800              		.fpu fpv4-sp-d16
 802              	ADC_GetSoftwareStartConvStatus:
 803              	.LVL69:
 804              	.LFB136:
 836:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 837:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 838:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Gets the selected ADC Software start regular conversion Status.
 839:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 840:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval The new state of ADC software start conversion (SET or RESET).
 841:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 842:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)
 843:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 805              		.loc 1 843 1 is_stmt 1 view -0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              		@ link register save eliminated.
 844:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
 810              		.loc 1 844 3 view .LVU258
 845:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 846:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 811              		.loc 1 846 3 view .LVU259
 847:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 848:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the status of SWSTART bit */
 849:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if ((ADCx->CR2 & ADC_CR2_SWSTART) != (uint32_t)RESET)
 812              		.loc 1 849 3 view .LVU260
 813              		.loc 1 849 12 is_stmt 0 view .LVU261
 814 0000 8368     		ldr	r3, [r0, #8]
 815              		.loc 1 849 6 view .LVU262
 816 0002 13F0804F 		tst	r3, #1073741824
 817 0006 01D0     		beq	.L39
 850:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 851:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* SWSTART bit is set */
 852:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     bitstatus = SET;
 818              		.loc 1 852 15 view .LVU263
 819 0008 0120     		movs	r0, #1
 820              	.LVL70:
 821              		.loc 1 852 15 view .LVU264
 822 000a 7047     		bx	lr
 823              	.LVL71:
 824              	.L39:
 853:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 854:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
 855:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 856:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* SWSTART bit is reset */
 857:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     bitstatus = RESET;
 825              		.loc 1 857 15 view .LVU265
 826 000c 0020     		movs	r0, #0
 827              	.LVL72:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 31


 858:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 859:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 860:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Return the SWSTART bit status */
 861:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   return  bitstatus;
 828              		.loc 1 861 3 is_stmt 1 view .LVU266
 862:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 829              		.loc 1 862 1 is_stmt 0 view .LVU267
 830 000e 7047     		bx	lr
 831              		.cfi_endproc
 832              	.LFE136:
 834              		.section	.text.ADC_EOCOnEachRegularChannelCmd,"ax",%progbits
 835              		.align	1
 836              		.global	ADC_EOCOnEachRegularChannelCmd
 837              		.syntax unified
 838              		.thumb
 839              		.thumb_func
 840              		.fpu fpv4-sp-d16
 842              	ADC_EOCOnEachRegularChannelCmd:
 843              	.LVL73:
 844              	.LFB137:
 863:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 864:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 865:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 866:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the EOC on each regular channel conversion
 867:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 868:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC EOC flag rising
 869:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 870:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 871:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 872:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_EOCOnEachRegularChannelCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 873:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 845              		.loc 1 873 1 is_stmt 1 view -0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 874:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 875:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 850              		.loc 1 875 3 view .LVU269
 876:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 851              		.loc 1 876 3 view .LVU270
 877:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 878:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 852              		.loc 1 878 3 view .LVU271
 853              		.loc 1 878 6 is_stmt 0 view .LVU272
 854 0000 21B1     		cbz	r1, .L41
 879:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 880:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Enable the selected ADC EOC rising on each regular channel conversion */
 881:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_EOCS;
 855              		.loc 1 881 5 is_stmt 1 view .LVU273
 856              		.loc 1 881 15 is_stmt 0 view .LVU274
 857 0002 8368     		ldr	r3, [r0, #8]
 858 0004 43F48063 		orr	r3, r3, #1024
 859 0008 8360     		str	r3, [r0, #8]
 860 000a 7047     		bx	lr
 861              	.L41:
 882:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 32


 883:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
 884:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 885:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Disable the selected ADC EOC rising on each regular channel conversion */
 886:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_EOCS);
 862              		.loc 1 886 5 is_stmt 1 view .LVU275
 863              		.loc 1 886 15 is_stmt 0 view .LVU276
 864 000c 8368     		ldr	r3, [r0, #8]
 865 000e 23F48063 		bic	r3, r3, #1024
 866 0012 8360     		str	r3, [r0, #8]
 887:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 888:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 867              		.loc 1 888 1 view .LVU277
 868 0014 7047     		bx	lr
 869              		.cfi_endproc
 870              	.LFE137:
 872              		.section	.text.ADC_ContinuousModeCmd,"ax",%progbits
 873              		.align	1
 874              		.global	ADC_ContinuousModeCmd
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 878              		.fpu fpv4-sp-d16
 880              	ADC_ContinuousModeCmd:
 881              	.LVL74:
 882              	.LFB138:
 889:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 890:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 891:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC continuous conversion mode 
 892:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 893:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC continuous conversion mode
 894:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 895:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 896:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 897:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_ContinuousModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 898:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 883              		.loc 1 898 1 is_stmt 1 view -0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              		@ link register save eliminated.
 899:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 900:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 888              		.loc 1 900 3 view .LVU279
 901:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 889              		.loc 1 901 3 view .LVU280
 902:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 903:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 890              		.loc 1 903 3 view .LVU281
 891              		.loc 1 903 6 is_stmt 0 view .LVU282
 892 0000 21B1     		cbz	r1, .L44
 904:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 905:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Enable the selected ADC continuous conversion mode */
 906:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_CONT;
 893              		.loc 1 906 5 is_stmt 1 view .LVU283
 894              		.loc 1 906 15 is_stmt 0 view .LVU284
 895 0002 8368     		ldr	r3, [r0, #8]
 896 0004 43F00203 		orr	r3, r3, #2
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 33


 897 0008 8360     		str	r3, [r0, #8]
 898 000a 7047     		bx	lr
 899              	.L44:
 907:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 908:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
 909:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 910:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Disable the selected ADC continuous conversion mode */
 911:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_CONT);
 900              		.loc 1 911 5 is_stmt 1 view .LVU285
 901              		.loc 1 911 15 is_stmt 0 view .LVU286
 902 000c 8368     		ldr	r3, [r0, #8]
 903 000e 23F00203 		bic	r3, r3, #2
 904 0012 8360     		str	r3, [r0, #8]
 912:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 913:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 905              		.loc 1 913 1 view .LVU287
 906 0014 7047     		bx	lr
 907              		.cfi_endproc
 908              	.LFE138:
 910              		.section	.text.ADC_DiscModeChannelCountConfig,"ax",%progbits
 911              		.align	1
 912              		.global	ADC_DiscModeChannelCountConfig
 913              		.syntax unified
 914              		.thumb
 915              		.thumb_func
 916              		.fpu fpv4-sp-d16
 918              	ADC_DiscModeChannelCountConfig:
 919              	.LVL75:
 920              	.LFB139:
 914:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 915:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 916:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Configures the discontinuous mode for the selected ADC regular group 
 917:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         channel.
 918:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 919:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  Number: specifies the discontinuous mode regular channel count value.
 920:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This number must be between 1 and 8.
 921:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 922:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 923:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)
 924:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 921              		.loc 1 924 1 is_stmt 1 view -0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              		@ link register save eliminated.
 925:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 926              		.loc 1 925 3 view .LVU289
 926:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint32_t tmpreg2 = 0;
 927              		.loc 1 926 3 view .LVU290
 927:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 928:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 929:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 928              		.loc 1 929 3 view .LVU291
 930:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_DISC_NUMBER(Number));
 929              		.loc 1 930 3 view .LVU292
 931:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 932:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the old register value */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 34


 933:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR1;
 930              		.loc 1 933 3 view .LVU293
 931              		.loc 1 933 11 is_stmt 0 view .LVU294
 932 0000 4368     		ldr	r3, [r0, #4]
 933              	.LVL76:
 934:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 935:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Clear the old discontinuous mode channel count */
 936:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 &= CR1_DISCNUM_RESET;
 934              		.loc 1 936 3 is_stmt 1 view .LVU295
 935              		.loc 1 936 11 is_stmt 0 view .LVU296
 936 0002 23F46043 		bic	r3, r3, #57344
 937              	.LVL77:
 937:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 938:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set the discontinuous mode channel count */
 939:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg2 = Number - 1;
 938              		.loc 1 939 3 is_stmt 1 view .LVU297
 939              		.loc 1 939 20 is_stmt 0 view .LVU298
 940 0006 0139     		subs	r1, r1, #1
 941              	.LVL78:
 940:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2 << 13;
 942              		.loc 1 940 3 is_stmt 1 view .LVU299
 943              		.loc 1 940 11 is_stmt 0 view .LVU300
 944 0008 43EA4133 		orr	r3, r3, r1, lsl #13
 945              	.LVL79:
 941:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 942:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Store the new register value */
 943:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg1;
 946              		.loc 1 943 3 is_stmt 1 view .LVU301
 947              		.loc 1 943 13 is_stmt 0 view .LVU302
 948 000c 4360     		str	r3, [r0, #4]
 944:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 949              		.loc 1 944 1 view .LVU303
 950 000e 7047     		bx	lr
 951              		.cfi_endproc
 952              	.LFE139:
 954              		.section	.text.ADC_DiscModeCmd,"ax",%progbits
 955              		.align	1
 956              		.global	ADC_DiscModeCmd
 957              		.syntax unified
 958              		.thumb
 959              		.thumb_func
 960              		.fpu fpv4-sp-d16
 962              	ADC_DiscModeCmd:
 963              	.LVL80:
 964              	.LFB140:
 945:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 946:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 947:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the discontinuous mode on regular group channel 
 948:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         for the specified ADC
 949:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 950:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode on 
 951:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         regular group channel.
 952:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 953:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
 954:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 955:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 956:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 35


 965              		.loc 1 956 1 is_stmt 1 view -0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 0
 968              		@ frame_needed = 0, uses_anonymous_args = 0
 969              		@ link register save eliminated.
 957:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 958:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 970              		.loc 1 958 3 view .LVU305
 959:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 971              		.loc 1 959 3 view .LVU306
 960:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 961:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 972              		.loc 1 961 3 view .LVU307
 973              		.loc 1 961 6 is_stmt 0 view .LVU308
 974 0000 21B1     		cbz	r1, .L48
 962:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 963:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
 964:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 975              		.loc 1 964 5 is_stmt 1 view .LVU309
 976              		.loc 1 964 15 is_stmt 0 view .LVU310
 977 0002 4368     		ldr	r3, [r0, #4]
 978 0004 43F40063 		orr	r3, r3, #2048
 979 0008 4360     		str	r3, [r0, #4]
 980 000a 7047     		bx	lr
 981              	.L48:
 965:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 966:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
 967:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
 968:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
 969:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_DISCEN);
 982              		.loc 1 969 5 is_stmt 1 view .LVU311
 983              		.loc 1 969 15 is_stmt 0 view .LVU312
 984 000c 4368     		ldr	r3, [r0, #4]
 985 000e 23F40063 		bic	r3, r3, #2048
 986 0012 4360     		str	r3, [r0, #4]
 970:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 971:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 987              		.loc 1 971 1 view .LVU313
 988 0014 7047     		bx	lr
 989              		.cfi_endproc
 990              	.LFE140:
 992              		.section	.text.ADC_GetConversionValue,"ax",%progbits
 993              		.align	1
 994              		.global	ADC_GetConversionValue
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 998              		.fpu fpv4-sp-d16
 1000              	ADC_GetConversionValue:
 1001              	.LVL81:
 1002              	.LFB141:
 972:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 973:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 974:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Returns the last ADCx conversion result data for regular channel.
 975:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 976:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval The Data conversion value.
 977:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 36


 978:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 979:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1003              		.loc 1 979 1 is_stmt 1 view -0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 1007              		@ link register save eliminated.
 980:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
 981:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1008              		.loc 1 981 3 view .LVU315
 982:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
 983:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Return the selected ADC conversion value */
 984:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   return (uint16_t) ADCx->DR;
 1009              		.loc 1 984 3 view .LVU316
 1010              		.loc 1 984 25 is_stmt 0 view .LVU317
 1011 0000 C06C     		ldr	r0, [r0, #76]
 1012              	.LVL82:
 985:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1013              		.loc 1 985 1 view .LVU318
 1014 0002 80B2     		uxth	r0, r0
 1015 0004 7047     		bx	lr
 1016              		.cfi_endproc
 1017              	.LFE141:
 1019              		.section	.text.ADC_GetMultiModeConversionValue,"ax",%progbits
 1020              		.align	1
 1021              		.global	ADC_GetMultiModeConversionValue
 1022              		.syntax unified
 1023              		.thumb
 1024              		.thumb_func
 1025              		.fpu fpv4-sp-d16
 1027              	ADC_GetMultiModeConversionValue:
 1028              	.LFB142:
 986:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
 987:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
 988:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Returns the last ADC1, ADC2 and ADC3 regular conversions results 
 989:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         data in the selected multi mode.
 990:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  None  
 991:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval The Data conversion value.
 992:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @note   In dual mode, the value returned by this function is as following
 993:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *           Data[15:0] : these bits contain the regular data of ADC1.
 994:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *           Data[31:16]: these bits contain the regular data of ADC2.
 995:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @note   In triple mode, the value returned by this function is as following
 996:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *           Data[15:0] : these bits contain alternatively the regular data of ADC1, ADC3 and ADC2
 997:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *           Data[31:16]: these bits contain alternatively the regular data of ADC2, ADC1 and ADC3
 998:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
 999:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** uint32_t ADC_GetMultiModeConversionValue(void)
1000:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1029              		.loc 1 1000 1 is_stmt 1 view -0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033              		@ link register save eliminated.
1001:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Return the multi mode conversion value */
1002:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   return (*(__IO uint32_t *) CDR_ADDRESS);
 1034              		.loc 1 1002 3 view .LVU320
 1035              		.loc 1 1002 11 is_stmt 0 view .LVU321
 1036 0000 014B     		ldr	r3, .L52
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 37


 1037 0002 1868     		ldr	r0, [r3]
1003:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1038              		.loc 1 1003 1 view .LVU322
 1039 0004 7047     		bx	lr
 1040              	.L53:
 1041 0006 00BF     		.align	2
 1042              	.L52:
 1043 0008 08230140 		.word	1073816328
 1044              		.cfi_endproc
 1045              	.LFE142:
 1047              		.section	.text.ADC_DMACmd,"ax",%progbits
 1048              		.align	1
 1049              		.global	ADC_DMACmd
 1050              		.syntax unified
 1051              		.thumb
 1052              		.thumb_func
 1053              		.fpu fpv4-sp-d16
 1055              	ADC_DMACmd:
 1056              	.LVL83:
 1057              	.LFB143:
1004:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1005:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @}
1006:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1007:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1008:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group5 Regular Channels DMA Configuration functions
1009:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *  @brief   Regular Channels DMA Configuration functions 
1010:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *
1011:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** @verbatim   
1012:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================
1013:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****             ##### Regular Channels DMA Configuration functions #####
1014:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================  
1015:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] This section provides functions allowing to configure the DMA for ADC 
1016:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          regular channels.
1017:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          Since converted regular channel values are stored into a unique data 
1018:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          register, it is useful to use DMA for conversion of more than one regular 
1019:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          channel. This avoids the loss of the data already stored in the ADC 
1020:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          Data register.   
1021:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          When the DMA mode is enabled (using the ADC_DMACmd() function), after each
1022:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          conversion of a regular channel, a DMA request is generated.
1023:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] Depending on the "DMA disable selection for Independent ADC mode" 
1024:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          configuration (using the ADC_DMARequestAfterLastTransferCmd() function), 
1025:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          at the end of the last DMA transfer, two possibilities are allowed:
1026:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) No new DMA request is issued to the DMA controller (feature DISABLED) 
1027:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) Requests can continue to be generated (feature ENABLED).  
1028:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] Depending on the "DMA disable selection for multi ADC mode" configuration 
1029:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          (using the void ADC_MultiModeDMARequestAfterLastTransferCmd() function), 
1030:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          at the end of the last DMA transfer, two possibilities are allowed:
1031:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (+) No new DMA request is issued to the DMA controller (feature DISABLED) 
1032:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (+) Requests can continue to be generated (feature ENABLED).
1033:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1034:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** @endverbatim
1035:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @{
1036:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1037:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1038:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  /**
1039:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
1040:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 38


1041:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
1042:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1043:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
1044:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1045:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1046:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1058              		.loc 1 1046 1 is_stmt 1 view -0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062              		@ link register save eliminated.
1047:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1048:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1063              		.loc 1 1048 3 view .LVU324
1049:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1064              		.loc 1 1049 3 view .LVU325
1050:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1065              		.loc 1 1050 3 view .LVU326
 1066              		.loc 1 1050 6 is_stmt 0 view .LVU327
 1067 0000 21B1     		cbz	r1, .L55
1051:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1052:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request */
1053:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_DMA;
 1068              		.loc 1 1053 5 is_stmt 1 view .LVU328
 1069              		.loc 1 1053 15 is_stmt 0 view .LVU329
 1070 0002 8368     		ldr	r3, [r0, #8]
 1071 0004 43F48073 		orr	r3, r3, #256
 1072 0008 8360     		str	r3, [r0, #8]
 1073 000a 7047     		bx	lr
 1074              	.L55:
1054:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1055:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
1056:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1057:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request */
1058:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_DMA);
 1075              		.loc 1 1058 5 is_stmt 1 view .LVU330
 1076              		.loc 1 1058 15 is_stmt 0 view .LVU331
 1077 000c 8368     		ldr	r3, [r0, #8]
 1078 000e 23F48073 		bic	r3, r3, #256
 1079 0012 8360     		str	r3, [r0, #8]
1059:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1060:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1080              		.loc 1 1060 1 view .LVU332
 1081 0014 7047     		bx	lr
 1082              		.cfi_endproc
 1083              	.LFE143:
 1085              		.section	.text.ADC_DMARequestAfterLastTransferCmd,"ax",%progbits
 1086              		.align	1
 1087              		.global	ADC_DMARequestAfterLastTransferCmd
 1088              		.syntax unified
 1089              		.thumb
 1090              		.thumb_func
 1091              		.fpu fpv4-sp-d16
 1093              	ADC_DMARequestAfterLastTransferCmd:
 1094              	.LVL84:
 1095              	.LFB144:
1061:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 39


1062:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1063:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC DMA request after last transfer (Single-ADC mode)  
1064:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1065:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA request after last transfer.
1066:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1067:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
1068:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1069:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_DMARequestAfterLastTransferCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1070:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1096              		.loc 1 1070 1 is_stmt 1 view -0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 0
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100              		@ link register save eliminated.
1071:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1072:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1101              		.loc 1 1072 3 view .LVU334
1073:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1102              		.loc 1 1073 3 view .LVU335
1074:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1103              		.loc 1 1074 3 view .LVU336
 1104              		.loc 1 1074 6 is_stmt 0 view .LVU337
 1105 0000 21B1     		cbz	r1, .L58
1075:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1076:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request after last transfer */
1077:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_DDS;
 1106              		.loc 1 1077 5 is_stmt 1 view .LVU338
 1107              		.loc 1 1077 15 is_stmt 0 view .LVU339
 1108 0002 8368     		ldr	r3, [r0, #8]
 1109 0004 43F40073 		orr	r3, r3, #512
 1110 0008 8360     		str	r3, [r0, #8]
 1111 000a 7047     		bx	lr
 1112              	.L58:
1078:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1079:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
1080:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1081:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request after last transfer */
1082:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_DDS);
 1113              		.loc 1 1082 5 is_stmt 1 view .LVU340
 1114              		.loc 1 1082 15 is_stmt 0 view .LVU341
 1115 000c 8368     		ldr	r3, [r0, #8]
 1116 000e 23F40073 		bic	r3, r3, #512
 1117 0012 8360     		str	r3, [r0, #8]
1083:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1084:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1118              		.loc 1 1084 1 view .LVU342
 1119 0014 7047     		bx	lr
 1120              		.cfi_endproc
 1121              	.LFE144:
 1123              		.section	.text.ADC_MultiModeDMARequestAfterLastTransferCmd,"ax",%progbits
 1124              		.align	1
 1125              		.global	ADC_MultiModeDMARequestAfterLastTransferCmd
 1126              		.syntax unified
 1127              		.thumb
 1128              		.thumb_func
 1129              		.fpu fpv4-sp-d16
 1131              	ADC_MultiModeDMARequestAfterLastTransferCmd:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 40


 1132              	.LVL85:
 1133              	.LFB145:
1085:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1086:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1087:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC DMA request after last transfer in multi ADC mode       
1088:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA request after last transfer.
1089:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1090:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @note   if Enabled, DMA requests are issued as long as data are converted and 
1091:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         DMA mode for multi ADC mode (selected using ADC_CommonInit() function 
1092:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         by ADC_CommonInitStruct.ADC_DMAAccessMode structure member) is 
1093:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          ADC_DMAAccessMode_1, ADC_DMAAccessMode_2 or ADC_DMAAccessMode_3.     
1094:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
1095:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1096:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_MultiModeDMARequestAfterLastTransferCmd(FunctionalState NewState)
1097:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1134              		.loc 1 1097 1 is_stmt 1 view -0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              		@ link register save eliminated.
1098:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1099:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1139              		.loc 1 1099 3 view .LVU344
1100:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1140              		.loc 1 1100 3 view .LVU345
 1141              		.loc 1 1100 6 is_stmt 0 view .LVU346
 1142 0000 28B1     		cbz	r0, .L61
1101:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1102:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request after last transfer */
1103:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_DDS;
 1143              		.loc 1 1103 5 is_stmt 1 view .LVU347
 1144              		.loc 1 1103 14 is_stmt 0 view .LVU348
 1145 0002 064A     		ldr	r2, .L63
 1146 0004 5368     		ldr	r3, [r2, #4]
 1147 0006 43F40053 		orr	r3, r3, #8192
 1148 000a 5360     		str	r3, [r2, #4]
 1149 000c 7047     		bx	lr
 1150              	.L61:
1104:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1105:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
1106:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1107:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request after last transfer */
1108:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_DDS);
 1151              		.loc 1 1108 5 is_stmt 1 view .LVU349
 1152              		.loc 1 1108 14 is_stmt 0 view .LVU350
 1153 000e 034A     		ldr	r2, .L63
 1154 0010 5368     		ldr	r3, [r2, #4]
 1155 0012 23F40053 		bic	r3, r3, #8192
 1156 0016 5360     		str	r3, [r2, #4]
1109:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1110:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1157              		.loc 1 1110 1 view .LVU351
 1158 0018 7047     		bx	lr
 1159              	.L64:
 1160 001a 00BF     		.align	2
 1161              	.L63:
 1162 001c 00230140 		.word	1073816320
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 41


 1163              		.cfi_endproc
 1164              	.LFE145:
 1166              		.section	.text.ADC_InjectedChannelConfig,"ax",%progbits
 1167              		.align	1
 1168              		.global	ADC_InjectedChannelConfig
 1169              		.syntax unified
 1170              		.thumb
 1171              		.thumb_func
 1172              		.fpu fpv4-sp-d16
 1174              	ADC_InjectedChannelConfig:
 1175              	.LVL86:
 1176              	.LFB146:
1111:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1112:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @}
1113:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1114:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1115:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group6 Injected channels Configuration functions
1116:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *  @brief   Injected channels Configuration functions 
1117:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *
1118:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** @verbatim   
1119:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================
1120:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****               ##### Injected channels Configuration functions #####
1121:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================  
1122:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1123:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] This section provide functions allowing to configure the ADC Injected channels,
1124:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          it is composed of 2 sub sections : 
1125:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
1126:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (#) Configuration functions for Injected channels: This subsection provides 
1127:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           functions allowing to configure the ADC injected channels :    
1128:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (++) Configure the rank in the injected group sequencer for each channel
1129:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (++) Configure the sampling time for each channel    
1130:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (++) Activate the Auto injected Mode  
1131:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (++) Activate the Discontinuous Mode 
1132:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (++) scan mode activation  
1133:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (++) External/software trigger source   
1134:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (++) External trigger edge 
1135:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (++) injected channels sequencer.
1136:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     
1137:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (#) Get the Specified Injected channel conversion data: This subsection 
1138:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           provides an important function in the ADC peripheral since it returns the 
1139:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****           converted data of the specific injected channel.
1140:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1141:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** @endverbatim
1142:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @{
1143:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */ 
1144:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1145:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
1146:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         rank in the sequencer and its sample time.
1147:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1148:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
1149:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1150:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
1151:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
1152:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
1153:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
1154:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
1155:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 42


1156:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
1157:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
1158:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
1159:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
1160:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
1161:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
1162:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
1163:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
1164:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
1165:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
1166:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
1167:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
1168:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected                       
1169:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  Rank: The rank in the injected group sequencer. 
1170:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter must be between 1 to 4.
1171:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
1172:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1173:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_3Cycles: Sample time equal to 3 cycles
1174:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_15Cycles: Sample time equal to 15 cycles
1175:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_28Cycles: Sample time equal to 28 cycles
1176:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_56Cycles: Sample time equal to 56 cycles	
1177:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_84Cycles: Sample time equal to 84 cycles	
1178:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_112Cycles: Sample time equal to 112 cycles	
1179:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_144Cycles: Sample time equal to 144 cycles	
1180:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_480Cycles: Sample time equal to 480 cycles	
1181:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
1182:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1183:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sa
1184:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1177              		.loc 1 1184 1 is_stmt 1 view -0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 0
 1180              		@ frame_needed = 0, uses_anonymous_args = 0
 1181              		@ link register save eliminated.
 1182              		.loc 1 1184 1 is_stmt 0 view .LVU353
 1183 0000 70B4     		push	{r4, r5, r6}
 1184              	.LCFI8:
 1185              		.cfi_def_cfa_offset 12
 1186              		.cfi_offset 4, -12
 1187              		.cfi_offset 5, -8
 1188              		.cfi_offset 6, -4
1185:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
 1189              		.loc 1 1185 3 is_stmt 1 view .LVU354
 1190              	.LVL87:
1186:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1187:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1191              		.loc 1 1187 3 view .LVU355
1188:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 1192              		.loc 1 1188 3 view .LVU356
1189:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_RANK(Rank));
 1193              		.loc 1 1189 3 view .LVU357
1190:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 1194              		.loc 1 1190 3 view .LVU358
1191:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1192:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 1195              		.loc 1 1192 3 view .LVU359
 1196              		.loc 1 1192 6 is_stmt 0 view .LVU360
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 43


 1197 0002 0929     		cmp	r1, #9
 1198 0004 1ED9     		bls	.L66
1193:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1194:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Get the old register value */
1195:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR1;
 1199              		.loc 1 1195 5 is_stmt 1 view .LVU361
 1200              		.loc 1 1195 13 is_stmt 0 view .LVU362
 1201 0006 C568     		ldr	r5, [r0, #12]
 1202              	.LVL88:
1196:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
1197:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg2 = SMPR1_SMP_SET << (3*(ADC_Channel - 10));
 1203              		.loc 1 1197 5 is_stmt 1 view .LVU363
 1204              		.loc 1 1197 48 is_stmt 0 view .LVU364
 1205 0008 A1F10A04 		sub	r4, r1, #10
 1206              		.loc 1 1197 34 view .LVU365
 1207 000c 04EB4404 		add	r4, r4, r4, lsl #1
 1208              		.loc 1 1197 13 view .LVU366
 1209 0010 0726     		movs	r6, #7
 1210 0012 A640     		lsls	r6, r6, r4
 1211              	.LVL89:
1198:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
1199:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 1212              		.loc 1 1199 5 is_stmt 1 view .LVU367
 1213              		.loc 1 1199 13 is_stmt 0 view .LVU368
 1214 0014 25EA0605 		bic	r5, r5, r6
 1215              	.LVL90:
1200:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
1201:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
 1216              		.loc 1 1201 5 is_stmt 1 view .LVU369
 1217              		.loc 1 1201 13 is_stmt 0 view .LVU370
 1218 0018 A340     		lsls	r3, r3, r4
 1219              	.LVL91:
1202:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Set the new sample time */
1203:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 1220              		.loc 1 1203 5 is_stmt 1 view .LVU371
 1221              		.loc 1 1203 13 is_stmt 0 view .LVU372
 1222 001a 2B43     		orrs	r3, r3, r5
 1223              	.LVL92:
1204:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Store the new register value */
1205:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->SMPR1 = tmpreg1;
 1224              		.loc 1 1205 5 is_stmt 1 view .LVU373
 1225              		.loc 1 1205 17 is_stmt 0 view .LVU374
 1226 001c C360     		str	r3, [r0, #12]
 1227              	.L67:
1206:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1207:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1208:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1209:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Get the old register value */
1210:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR2;
1211:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
1212:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg2 = SMPR2_SMP_SET << (3 * ADC_Channel);
1213:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
1214:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
1215:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
1216:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
1217:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Set the new sample time */
1218:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 44


1219:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Store the new register value */
1220:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->SMPR2 = tmpreg1;
1221:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1222:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Rank configuration */
1223:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the old register value */
1224:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->JSQR;
 1228              		.loc 1 1224 3 is_stmt 1 view .LVU375
 1229              		.loc 1 1224 11 is_stmt 0 view .LVU376
 1230 001e 846B     		ldr	r4, [r0, #56]
 1231              	.LVL93:
1225:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get JL value: Number = JL+1 */
1226:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg3 =  (tmpreg1 & JSQR_JL_SET)>> 20;
 1232              		.loc 1 1226 3 is_stmt 1 view .LVU377
 1233              		.loc 1 1226 11 is_stmt 0 view .LVU378
 1234 0020 C4F30153 		ubfx	r3, r4, #20, #2
 1235              	.LVL94:
1227:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Calculate the mask to clear: ((Rank-1)+(4-JL-1)) */
1228:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg2 = JSQR_JSQ_SET << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1236              		.loc 1 1228 3 is_stmt 1 view .LVU379
 1237              		.loc 1 1228 55 is_stmt 0 view .LVU380
 1238 0024 D31A     		subs	r3, r2, r3
 1239              	.LVL95:
 1240              		.loc 1 1228 55 view .LVU381
 1241 0026 DBB2     		uxtb	r3, r3
 1242              		.loc 1 1228 34 view .LVU382
 1243 0028 0233     		adds	r3, r3, #2
 1244 002a DBB2     		uxtb	r3, r3
 1245              		.loc 1 1228 32 view .LVU383
 1246 002c 03EB8303 		add	r3, r3, r3, lsl #2
 1247              		.loc 1 1228 11 view .LVU384
 1248 0030 1F22     		movs	r2, #31
 1249              	.LVL96:
 1250              		.loc 1 1228 11 view .LVU385
 1251 0032 9A40     		lsls	r2, r2, r3
 1252              	.LVL97:
1229:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Clear the old JSQx bits for the selected rank */
1230:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 &= ~tmpreg2;
 1253              		.loc 1 1230 3 is_stmt 1 view .LVU386
 1254              		.loc 1 1230 11 is_stmt 0 view .LVU387
 1255 0034 24EA0204 		bic	r4, r4, r2
 1256              	.LVL98:
1231:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Calculate the mask to set: ((Rank-1)+(4-JL-1)) */
1232:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg2 = (uint32_t)ADC_Channel << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1257              		.loc 1 1232 3 is_stmt 1 view .LVU388
 1258              		.loc 1 1232 11 is_stmt 0 view .LVU389
 1259 0038 01FA03F3 		lsl	r3, r1, r3
 1260              	.LVL99:
1233:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set the JSQx bits for the selected rank */
1234:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2;
 1261              		.loc 1 1234 3 is_stmt 1 view .LVU390
 1262              		.loc 1 1234 11 is_stmt 0 view .LVU391
 1263 003c 2343     		orrs	r3, r3, r4
 1264              	.LVL100:
1235:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Store the new register value */
1236:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->JSQR = tmpreg1;
 1265              		.loc 1 1236 3 is_stmt 1 view .LVU392
 1266              		.loc 1 1236 14 is_stmt 0 view .LVU393
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 45


 1267 003e 8363     		str	r3, [r0, #56]
1237:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1268              		.loc 1 1237 1 view .LVU394
 1269 0040 70BC     		pop	{r4, r5, r6}
 1270              	.LCFI9:
 1271              		.cfi_remember_state
 1272              		.cfi_restore 6
 1273              		.cfi_restore 5
 1274              		.cfi_restore 4
 1275              		.cfi_def_cfa_offset 0
 1276 0042 7047     		bx	lr
 1277              	.LVL101:
 1278              	.L66:
 1279              	.LCFI10:
 1280              		.cfi_restore_state
1210:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 1281              		.loc 1 1210 5 is_stmt 1 view .LVU395
1210:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 1282              		.loc 1 1210 13 is_stmt 0 view .LVU396
 1283 0044 0469     		ldr	r4, [r0, #16]
 1284              	.LVL102:
1212:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
 1285              		.loc 1 1212 5 is_stmt 1 view .LVU397
1212:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
 1286              		.loc 1 1212 35 is_stmt 0 view .LVU398
 1287 0046 01EB4106 		add	r6, r1, r1, lsl #1
1212:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Clear the old sample time */
 1288              		.loc 1 1212 13 view .LVU399
 1289 004a 0725     		movs	r5, #7
 1290 004c B540     		lsls	r5, r5, r6
 1291              	.LVL103:
1214:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 1292              		.loc 1 1214 5 is_stmt 1 view .LVU400
1214:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 1293              		.loc 1 1214 13 is_stmt 0 view .LVU401
 1294 004e 24EA0504 		bic	r4, r4, r5
 1295              	.LVL104:
1216:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Set the new sample time */
 1296              		.loc 1 1216 5 is_stmt 1 view .LVU402
1216:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Set the new sample time */
 1297              		.loc 1 1216 13 is_stmt 0 view .LVU403
 1298 0052 B340     		lsls	r3, r3, r6
 1299              	.LVL105:
1218:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Store the new register value */
 1300              		.loc 1 1218 5 is_stmt 1 view .LVU404
1218:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Store the new register value */
 1301              		.loc 1 1218 13 is_stmt 0 view .LVU405
 1302 0054 2343     		orrs	r3, r3, r4
 1303              	.LVL106:
1220:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 1304              		.loc 1 1220 5 is_stmt 1 view .LVU406
1220:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 1305              		.loc 1 1220 17 is_stmt 0 view .LVU407
 1306 0056 0361     		str	r3, [r0, #16]
 1307 0058 E1E7     		b	.L67
 1308              		.cfi_endproc
 1309              	.LFE146:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 46


 1311              		.section	.text.ADC_InjectedSequencerLengthConfig,"ax",%progbits
 1312              		.align	1
 1313              		.global	ADC_InjectedSequencerLengthConfig
 1314              		.syntax unified
 1315              		.thumb
 1316              		.thumb_func
 1317              		.fpu fpv4-sp-d16
 1319              	ADC_InjectedSequencerLengthConfig:
 1320              	.LVL107:
 1321              	.LFB147:
1238:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1239:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1240:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Configures the sequencer length for injected channels
1241:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1242:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  Length: The sequencer length. 
1243:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter must be a number between 1 to 4.
1244:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
1245:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1246:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)
1247:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1322              		.loc 1 1247 1 is_stmt 1 view -0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 0
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 1326              		@ link register save eliminated.
1248:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 1327              		.loc 1 1248 3 view .LVU409
1249:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint32_t tmpreg2 = 0;
 1328              		.loc 1 1249 3 view .LVU410
1250:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1251:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1329              		.loc 1 1251 3 view .LVU411
1252:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_LENGTH(Length));
 1330              		.loc 1 1252 3 view .LVU412
1253:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1254:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the old register value */
1255:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 = ADCx->JSQR;
 1331              		.loc 1 1255 3 view .LVU413
 1332              		.loc 1 1255 11 is_stmt 0 view .LVU414
 1333 0000 836B     		ldr	r3, [r0, #56]
 1334              	.LVL108:
1256:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1257:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Clear the old injected sequence length JL bits */
1258:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 &= JSQR_JL_RESET;
 1335              		.loc 1 1258 3 is_stmt 1 view .LVU415
 1336              		.loc 1 1258 11 is_stmt 0 view .LVU416
 1337 0002 23F44013 		bic	r3, r3, #3145728
 1338              	.LVL109:
1259:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1260:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set the injected sequence length JL bits */
1261:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg2 = Length - 1; 
 1339              		.loc 1 1261 3 is_stmt 1 view .LVU417
 1340              		.loc 1 1261 20 is_stmt 0 view .LVU418
 1341 0006 0139     		subs	r1, r1, #1
 1342              	.LVL110:
1262:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2 << 20;
 1343              		.loc 1 1262 3 is_stmt 1 view .LVU419
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 47


 1344              		.loc 1 1262 11 is_stmt 0 view .LVU420
 1345 0008 43EA0153 		orr	r3, r3, r1, lsl #20
 1346              	.LVL111:
1263:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1264:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Store the new register value */
1265:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->JSQR = tmpreg1;
 1347              		.loc 1 1265 3 is_stmt 1 view .LVU421
 1348              		.loc 1 1265 14 is_stmt 0 view .LVU422
 1349 000c 8363     		str	r3, [r0, #56]
1266:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1350              		.loc 1 1266 1 view .LVU423
 1351 000e 7047     		bx	lr
 1352              		.cfi_endproc
 1353              	.LFE147:
 1355              		.section	.text.ADC_SetInjectedOffset,"ax",%progbits
 1356              		.align	1
 1357              		.global	ADC_SetInjectedOffset
 1358              		.syntax unified
 1359              		.thumb
 1360              		.thumb_func
 1361              		.fpu fpv4-sp-d16
 1363              	ADC_SetInjectedOffset:
 1364              	.LVL112:
 1365              	.LFB148:
1267:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1268:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1269:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Set the injected channels conversion value offset
1270:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1271:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_InjectedChannel: the ADC injected channel to set its offset. 
1272:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1273:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_1: Injected Channel1 selected
1274:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_2: Injected Channel2 selected
1275:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_3: Injected Channel3 selected
1276:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_4: Injected Channel4 selected
1277:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  Offset: the offset value for the selected ADC injected channel
1278:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter must be a 12bit value.
1279:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
1280:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1281:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
1282:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1366              		.loc 1 1282 1 is_stmt 1 view -0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 8
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 1370              		@ link register save eliminated.
 1371              		.loc 1 1282 1 is_stmt 0 view .LVU425
 1372 0000 82B0     		sub	sp, sp, #8
 1373              	.LCFI11:
 1374              		.cfi_def_cfa_offset 8
1283:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     __IO uint32_t tmp = 0;
 1375              		.loc 1 1283 5 is_stmt 1 view .LVU426
 1376              		.loc 1 1283 19 is_stmt 0 view .LVU427
 1377 0002 0023     		movs	r3, #0
 1378 0004 0193     		str	r3, [sp, #4]
1284:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1285:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1379              		.loc 1 1285 3 is_stmt 1 view .LVU428
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 48


1286:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
 1380              		.loc 1 1286 3 view .LVU429
1287:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_OFFSET(Offset));
 1381              		.loc 1 1287 3 view .LVU430
1288:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1289:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmp = (uint32_t)ADCx;
 1382              		.loc 1 1289 3 view .LVU431
 1383              		.loc 1 1289 7 is_stmt 0 view .LVU432
 1384 0006 0190     		str	r0, [sp, #4]
1290:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmp += ADC_InjectedChannel;
 1385              		.loc 1 1290 3 is_stmt 1 view .LVU433
 1386              		.loc 1 1290 7 is_stmt 0 view .LVU434
 1387 0008 019B     		ldr	r3, [sp, #4]
 1388 000a 1944     		add	r1, r1, r3
 1389              	.LVL113:
 1390              		.loc 1 1290 7 view .LVU435
 1391 000c 0191     		str	r1, [sp, #4]
1291:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1292:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set the selected injected channel data offset */
1293:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *(__IO uint32_t *) tmp = (uint32_t)Offset;
 1392              		.loc 1 1293 2 is_stmt 1 view .LVU436
 1393              		.loc 1 1293 3 is_stmt 0 view .LVU437
 1394 000e 019B     		ldr	r3, [sp, #4]
 1395              		.loc 1 1293 25 view .LVU438
 1396 0010 1A60     		str	r2, [r3]
1294:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1397              		.loc 1 1294 1 view .LVU439
 1398 0012 02B0     		add	sp, sp, #8
 1399              	.LCFI12:
 1400              		.cfi_def_cfa_offset 0
 1401              		@ sp needed
 1402 0014 7047     		bx	lr
 1403              		.cfi_endproc
 1404              	.LFE148:
 1406              		.section	.text.ADC_ExternalTrigInjectedConvConfig,"ax",%progbits
 1407              		.align	1
 1408              		.global	ADC_ExternalTrigInjectedConvConfig
 1409              		.syntax unified
 1410              		.thumb
 1411              		.thumb_func
 1412              		.fpu fpv4-sp-d16
 1414              	ADC_ExternalTrigInjectedConvConfig:
 1415              	.LVL114:
 1416              	.LFB149:
1295:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1296:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  /**
1297:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Configures the ADCx external trigger for injected channels conversion.
1298:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1299:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_ExternalTrigInjecConv: specifies the ADC trigger to start injected conversion.
1300:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:                    
1301:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected 
1302:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected 
1303:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected 
1304:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected 
1305:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T3_CC2: Timer3 capture compare2 selected 
1306:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected 
1307:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC1: Timer4 capture compare1 selected             
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 49


1308:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC2: Timer4 capture compare2 selected 
1309:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected             
1310:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected 
1311:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected             
1312:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected                  
1313:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected
1314:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC3: Timer8 capture compare3 selected             
1315:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected 
1316:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_Ext_IT15: External interrupt line 15 event selected  
1317:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
1318:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1319:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
1320:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1417              		.loc 1 1320 1 is_stmt 1 view -0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 0
 1420              		@ frame_needed = 0, uses_anonymous_args = 0
 1421              		@ link register save eliminated.
1321:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
 1422              		.loc 1 1321 3 view .LVU441
1322:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1323:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1423              		.loc 1 1323 3 view .LVU442
1324:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(ADC_ExternalTrigInjecConv));
 1424              		.loc 1 1324 3 view .LVU443
1325:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1326:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the old register value */
1327:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR2;
 1425              		.loc 1 1327 3 view .LVU444
 1426              		.loc 1 1327 10 is_stmt 0 view .LVU445
 1427 0000 8368     		ldr	r3, [r0, #8]
 1428              	.LVL115:
1328:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1329:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Clear the old external event selection for injected group */
1330:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg &= CR2_JEXTSEL_RESET;
 1429              		.loc 1 1330 3 is_stmt 1 view .LVU446
 1430              		.loc 1 1330 10 is_stmt 0 view .LVU447
 1431 0002 23F47023 		bic	r3, r3, #983040
 1432              	.LVL116:
1331:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1332:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set the external event selection for injected group */
1333:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConv;
 1433              		.loc 1 1333 3 is_stmt 1 view .LVU448
 1434              		.loc 1 1333 10 is_stmt 0 view .LVU449
 1435 0006 0B43     		orrs	r3, r3, r1
 1436              	.LVL117:
1334:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1335:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Store the new register value */
1336:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg;
 1437              		.loc 1 1336 3 is_stmt 1 view .LVU450
 1438              		.loc 1 1336 13 is_stmt 0 view .LVU451
 1439 0008 8360     		str	r3, [r0, #8]
1337:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1440              		.loc 1 1337 1 view .LVU452
 1441 000a 7047     		bx	lr
 1442              		.cfi_endproc
 1443              	.LFE149:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 50


 1445              		.section	.text.ADC_ExternalTrigInjectedConvEdgeConfig,"ax",%progbits
 1446              		.align	1
 1447              		.global	ADC_ExternalTrigInjectedConvEdgeConfig
 1448              		.syntax unified
 1449              		.thumb
 1450              		.thumb_func
 1451              		.fpu fpv4-sp-d16
 1453              	ADC_ExternalTrigInjectedConvEdgeConfig:
 1454              	.LVL118:
 1455              	.LFB150:
1338:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1339:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1340:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Configures the ADCx external trigger edge for injected channels conversion.
1341:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1342:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_ExternalTrigInjecConvEdge: specifies the ADC external trigger edge
1343:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         to start injected conversion. 
1344:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1345:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_None: external trigger disabled for 
1346:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *                                                     injected conversion
1347:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_Rising: detection on rising edge
1348:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_Falling: detection on falling edge
1349:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_RisingFalling: detection on both rising 
1350:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *                                                               and falling edge
1351:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
1352:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1353:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_ExternalTrigInjectedConvEdgeConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConvEd
1354:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1456              		.loc 1 1354 1 is_stmt 1 view -0
 1457              		.cfi_startproc
 1458              		@ args = 0, pretend = 0, frame = 0
 1459              		@ frame_needed = 0, uses_anonymous_args = 0
 1460              		@ link register save eliminated.
1355:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
 1461              		.loc 1 1355 3 view .LVU454
1356:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1357:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1462              		.loc 1 1357 3 view .LVU455
1358:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG_EDGE(ADC_ExternalTrigInjecConvEdge));
 1463              		.loc 1 1358 3 view .LVU456
1359:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the old register value */
1360:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg = ADCx->CR2;
 1464              		.loc 1 1360 3 view .LVU457
 1465              		.loc 1 1360 10 is_stmt 0 view .LVU458
 1466 0000 8368     		ldr	r3, [r0, #8]
 1467              	.LVL119:
1361:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Clear the old external trigger edge for injected group */
1362:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg &= CR2_JEXTEN_RESET;
 1468              		.loc 1 1362 3 is_stmt 1 view .LVU459
 1469              		.loc 1 1362 10 is_stmt 0 view .LVU460
 1470 0002 23F44013 		bic	r3, r3, #3145728
 1471              	.LVL120:
1363:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Set the new external trigger edge for injected group */
1364:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConvEdge;
 1472              		.loc 1 1364 3 is_stmt 1 view .LVU461
 1473              		.loc 1 1364 10 is_stmt 0 view .LVU462
 1474 0006 0B43     		orrs	r3, r3, r1
 1475              	.LVL121:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 51


1365:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Store the new register value */
1366:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg;
 1476              		.loc 1 1366 3 is_stmt 1 view .LVU463
 1477              		.loc 1 1366 13 is_stmt 0 view .LVU464
 1478 0008 8360     		str	r3, [r0, #8]
1367:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1479              		.loc 1 1367 1 view .LVU465
 1480 000a 7047     		bx	lr
 1481              		.cfi_endproc
 1482              	.LFE150:
 1484              		.section	.text.ADC_SoftwareStartInjectedConv,"ax",%progbits
 1485              		.align	1
 1486              		.global	ADC_SoftwareStartInjectedConv
 1487              		.syntax unified
 1488              		.thumb
 1489              		.thumb_func
 1490              		.fpu fpv4-sp-d16
 1492              	ADC_SoftwareStartInjectedConv:
 1493              	.LVL122:
 1494              	.LFB151:
1368:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1369:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1370:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables the selected ADC software start conversion of the injected channels.
1371:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1372:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
1373:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1374:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_SoftwareStartInjectedConv(ADC_TypeDef* ADCx)
1375:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1495              		.loc 1 1375 1 is_stmt 1 view -0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499              		@ link register save eliminated.
1376:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1377:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1500              		.loc 1 1377 3 view .LVU467
1378:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Enable the selected ADC conversion for injected group */
1379:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->CR2 |= (uint32_t)ADC_CR2_JSWSTART;
 1501              		.loc 1 1379 3 view .LVU468
 1502              		.loc 1 1379 13 is_stmt 0 view .LVU469
 1503 0000 8368     		ldr	r3, [r0, #8]
 1504 0002 43F48003 		orr	r3, r3, #4194304
 1505 0006 8360     		str	r3, [r0, #8]
1380:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1506              		.loc 1 1380 1 view .LVU470
 1507 0008 7047     		bx	lr
 1508              		.cfi_endproc
 1509              	.LFE151:
 1511              		.section	.text.ADC_GetSoftwareStartInjectedConvCmdStatus,"ax",%progbits
 1512              		.align	1
 1513              		.global	ADC_GetSoftwareStartInjectedConvCmdStatus
 1514              		.syntax unified
 1515              		.thumb
 1516              		.thumb_func
 1517              		.fpu fpv4-sp-d16
 1519              	ADC_GetSoftwareStartInjectedConvCmdStatus:
 1520              	.LVL123:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 52


 1521              	.LFB152:
1381:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1382:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1383:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Gets the selected ADC Software start injected conversion Status.
1384:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1385:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval The new state of ADC software start injected conversion (SET or RESET).
1386:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1387:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)
1388:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1522              		.loc 1 1388 1 is_stmt 1 view -0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 0
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
 1526              		@ link register save eliminated.
1389:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
 1527              		.loc 1 1389 3 view .LVU472
1390:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1391:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1528              		.loc 1 1391 3 view .LVU473
1392:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1393:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the status of JSWSTART bit */
1394:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if ((ADCx->CR2 & ADC_CR2_JSWSTART) != (uint32_t)RESET)
 1529              		.loc 1 1394 3 view .LVU474
 1530              		.loc 1 1394 12 is_stmt 0 view .LVU475
 1531 0000 8368     		ldr	r3, [r0, #8]
 1532              		.loc 1 1394 6 view .LVU476
 1533 0002 13F4800F 		tst	r3, #4194304
 1534 0006 01D0     		beq	.L77
1395:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1396:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* JSWSTART bit is set */
1397:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     bitstatus = SET;
 1535              		.loc 1 1397 15 view .LVU477
 1536 0008 0120     		movs	r0, #1
 1537              	.LVL124:
 1538              		.loc 1 1397 15 view .LVU478
 1539 000a 7047     		bx	lr
 1540              	.LVL125:
 1541              	.L77:
1398:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1399:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
1400:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1401:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* JSWSTART bit is reset */
1402:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     bitstatus = RESET;
 1542              		.loc 1 1402 15 view .LVU479
 1543 000c 0020     		movs	r0, #0
 1544              	.LVL126:
1403:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1404:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Return the JSWSTART bit status */
1405:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   return  bitstatus;
 1545              		.loc 1 1405 3 is_stmt 1 view .LVU480
1406:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1546              		.loc 1 1406 1 is_stmt 0 view .LVU481
 1547 000e 7047     		bx	lr
 1548              		.cfi_endproc
 1549              	.LFE152:
 1551              		.section	.text.ADC_AutoInjectedConvCmd,"ax",%progbits
 1552              		.align	1
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 53


 1553              		.global	ADC_AutoInjectedConvCmd
 1554              		.syntax unified
 1555              		.thumb
 1556              		.thumb_func
 1557              		.fpu fpv4-sp-d16
 1559              	ADC_AutoInjectedConvCmd:
 1560              	.LVL127:
 1561              	.LFB153:
1407:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1408:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1409:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the selected ADC automatic injected group 
1410:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         conversion after regular one.
1411:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1412:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC auto injected conversion
1413:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1414:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
1415:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1416:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1417:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1562              		.loc 1 1417 1 is_stmt 1 view -0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566              		@ link register save eliminated.
1418:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1419:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1567              		.loc 1 1419 3 view .LVU483
1420:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1568              		.loc 1 1420 3 view .LVU484
1421:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1569              		.loc 1 1421 3 view .LVU485
 1570              		.loc 1 1421 6 is_stmt 0 view .LVU486
 1571 0000 21B1     		cbz	r1, .L79
1422:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1423:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Enable the selected ADC automatic injected group conversion */
1424:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_JAUTO;
 1572              		.loc 1 1424 5 is_stmt 1 view .LVU487
 1573              		.loc 1 1424 15 is_stmt 0 view .LVU488
 1574 0002 4368     		ldr	r3, [r0, #4]
 1575 0004 43F48063 		orr	r3, r3, #1024
 1576 0008 4360     		str	r3, [r0, #4]
 1577 000a 7047     		bx	lr
 1578              	.L79:
1425:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1426:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
1427:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1428:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Disable the selected ADC automatic injected group conversion */
1429:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_JAUTO);
 1579              		.loc 1 1429 5 is_stmt 1 view .LVU489
 1580              		.loc 1 1429 15 is_stmt 0 view .LVU490
 1581 000c 4368     		ldr	r3, [r0, #4]
 1582 000e 23F48063 		bic	r3, r3, #1024
 1583 0012 4360     		str	r3, [r0, #4]
1430:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1431:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1584              		.loc 1 1431 1 view .LVU491
 1585 0014 7047     		bx	lr
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 54


 1586              		.cfi_endproc
 1587              	.LFE153:
 1589              		.section	.text.ADC_InjectedDiscModeCmd,"ax",%progbits
 1590              		.align	1
 1591              		.global	ADC_InjectedDiscModeCmd
 1592              		.syntax unified
 1593              		.thumb
 1594              		.thumb_func
 1595              		.fpu fpv4-sp-d16
 1597              	ADC_InjectedDiscModeCmd:
 1598              	.LVL128:
 1599              	.LFB154:
1432:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1433:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1434:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the discontinuous mode for injected group 
1435:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         channel for the specified ADC
1436:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1437:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode on injected
1438:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *         group channel.
1439:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1440:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
1441:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1442:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1443:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1600              		.loc 1 1443 1 is_stmt 1 view -0
 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 0
 1603              		@ frame_needed = 0, uses_anonymous_args = 0
 1604              		@ link register save eliminated.
1444:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1445:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1605              		.loc 1 1445 3 view .LVU493
1446:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1606              		.loc 1 1446 3 view .LVU494
1447:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1607              		.loc 1 1447 3 view .LVU495
 1608              		.loc 1 1447 6 is_stmt 0 view .LVU496
 1609 0000 21B1     		cbz	r1, .L82
1448:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1449:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Enable the selected ADC injected discontinuous mode */
1450:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_JDISCEN;
 1610              		.loc 1 1450 5 is_stmt 1 view .LVU497
 1611              		.loc 1 1450 15 is_stmt 0 view .LVU498
 1612 0002 4368     		ldr	r3, [r0, #4]
 1613 0004 43F48053 		orr	r3, r3, #4096
 1614 0008 4360     		str	r3, [r0, #4]
 1615 000a 7047     		bx	lr
 1616              	.L82:
1451:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1452:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
1453:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1454:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Disable the selected ADC injected discontinuous mode */
1455:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_JDISCEN);
 1617              		.loc 1 1455 5 is_stmt 1 view .LVU499
 1618              		.loc 1 1455 15 is_stmt 0 view .LVU500
 1619 000c 4368     		ldr	r3, [r0, #4]
 1620 000e 23F48053 		bic	r3, r3, #4096
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 55


 1621 0012 4360     		str	r3, [r0, #4]
1456:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1457:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1622              		.loc 1 1457 1 view .LVU501
 1623 0014 7047     		bx	lr
 1624              		.cfi_endproc
 1625              	.LFE154:
 1627              		.section	.text.ADC_GetInjectedConversionValue,"ax",%progbits
 1628              		.align	1
 1629              		.global	ADC_GetInjectedConversionValue
 1630              		.syntax unified
 1631              		.thumb
 1632              		.thumb_func
 1633              		.fpu fpv4-sp-d16
 1635              	ADC_GetInjectedConversionValue:
 1636              	.LVL129:
 1637              	.LFB155:
1458:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1459:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1460:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Returns the ADC injected channel conversion result
1461:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1462:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_InjectedChannel: the converted ADC injected channel.
1463:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1464:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_1: Injected Channel1 selected
1465:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_2: Injected Channel2 selected
1466:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_3: Injected Channel3 selected
1467:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_4: Injected Channel4 selected
1468:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval The Data conversion value.
1469:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1470:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
1471:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1638              		.loc 1 1471 1 is_stmt 1 view -0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 8
 1641              		@ frame_needed = 0, uses_anonymous_args = 0
 1642              		@ link register save eliminated.
 1643              		.loc 1 1471 1 is_stmt 0 view .LVU503
 1644 0000 82B0     		sub	sp, sp, #8
 1645              	.LCFI13:
 1646              		.cfi_def_cfa_offset 8
1472:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   __IO uint32_t tmp = 0;
 1647              		.loc 1 1472 3 is_stmt 1 view .LVU504
 1648              		.loc 1 1472 17 is_stmt 0 view .LVU505
 1649 0002 0023     		movs	r3, #0
 1650 0004 0193     		str	r3, [sp, #4]
1473:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1474:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1475:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1651              		.loc 1 1475 3 is_stmt 1 view .LVU506
1476:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
 1652              		.loc 1 1476 3 view .LVU507
1477:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1478:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmp = (uint32_t)ADCx;
 1653              		.loc 1 1478 3 view .LVU508
 1654              		.loc 1 1478 7 is_stmt 0 view .LVU509
 1655 0006 0190     		str	r0, [sp, #4]
1479:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   tmp += ADC_InjectedChannel + JDR_OFFSET;
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 56


 1656              		.loc 1 1479 3 is_stmt 1 view .LVU510
 1657              		.loc 1 1479 7 is_stmt 0 view .LVU511
 1658 0008 019B     		ldr	r3, [sp, #4]
 1659 000a 1944     		add	r1, r1, r3
 1660              	.LVL130:
 1661              		.loc 1 1479 7 view .LVU512
 1662 000c 2831     		adds	r1, r1, #40
 1663 000e 0191     		str	r1, [sp, #4]
1480:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1481:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Returns the selected injected channel conversion data value */
1482:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   return (uint16_t) (*(__IO uint32_t*)  tmp); 
 1664              		.loc 1 1482 3 is_stmt 1 view .LVU513
 1665              		.loc 1 1482 23 is_stmt 0 view .LVU514
 1666 0010 019B     		ldr	r3, [sp, #4]
 1667              		.loc 1 1482 22 view .LVU515
 1668 0012 1868     		ldr	r0, [r3]
 1669              	.LVL131:
1483:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1670              		.loc 1 1483 1 view .LVU516
 1671 0014 80B2     		uxth	r0, r0
 1672 0016 02B0     		add	sp, sp, #8
 1673              	.LCFI14:
 1674              		.cfi_def_cfa_offset 0
 1675              		@ sp needed
 1676 0018 7047     		bx	lr
 1677              		.cfi_endproc
 1678              	.LFE155:
 1680              		.section	.text.ADC_ITConfig,"ax",%progbits
 1681              		.align	1
 1682              		.global	ADC_ITConfig
 1683              		.syntax unified
 1684              		.thumb
 1685              		.thumb_func
 1686              		.fpu fpv4-sp-d16
 1688              	ADC_ITConfig:
 1689              	.LVL132:
 1690              	.LFB156:
1484:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1485:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @}
1486:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1487:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1488:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /** @defgroup ADC_Group7 Interrupts and flags management functions
1489:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *  @brief   Interrupts and flags management functions
1490:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  *
1491:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** @verbatim   
1492:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================
1493:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****             ##### Interrupts and flags management functions #####
1494:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****  ===============================================================================  
1495:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1496:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] This section provides functions allowing to configure the ADC Interrupts 
1497:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          and to get the status and clear flags and Interrupts pending bits.
1498:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1499:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] Each ADC provides 4 Interrupts sources and 6 Flags which can be divided
1500:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         into 3 groups:
1501:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1502:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *** Flags and Interrupts for ADC regular channels ***
1503:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   =====================================================
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 57


1504:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..]
1505:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) Flags :
1506:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (##) ADC_FLAG_OVR : Overrun detection when regular converted data are lost
1507:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1508:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (##) ADC_FLAG_EOC : Regular channel end of conversion ==> to indicate 
1509:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              (depending on EOCS bit, managed by ADC_EOCOnEachRegularChannelCmd() )
1510:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              the end of:
1511:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              (+++) a regular CHANNEL conversion 
1512:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              (+++) sequence of regular GROUP conversions .
1513:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1514:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (##) ADC_FLAG_STRT: Regular channel start ==> to indicate when regular 
1515:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              CHANNEL conversion starts.
1516:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..]
1517:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) Interrupts :
1518:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (##) ADC_IT_OVR : specifies the interrupt source for Overrun detection 
1519:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              event.  
1520:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (##) ADC_IT_EOC : specifies the interrupt source for Regular channel end
1521:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              of conversion event.
1522:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1523:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1524:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *** Flags and Interrupts for ADC Injected channels ***
1525:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ======================================================
1526:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..]
1527:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) Flags :
1528:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (##) ADC_FLAG_JEOC : Injected channel end of conversion ==> to indicate 
1529:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              at the end of injected GROUP conversion  
1530:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****               
1531:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (##) ADC_FLAG_JSTRT: Injected channel start ==> to indicate hardware when 
1532:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              injected GROUP conversion starts.
1533:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..]
1534:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) Interrupts :
1535:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (##) ADC_IT_JEOC : specifies the interrupt source for Injected channel 
1536:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              end of conversion event.     
1537:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1538:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *** General Flags and Interrupts for the ADC ***
1539:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ================================================ 
1540:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..]
1541:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+)Flags :
1542:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (##) ADC_FLAG_AWD: Analog watchdog ==> to indicate if the converted voltage 
1543:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****              crosses the programmed thresholds values.
1544:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..]          
1545:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) Interrupts :
1546:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****         (##) ADC_IT_AWD : specifies the interrupt source for Analog watchdog event. 
1547:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1548:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1549:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] The user should identify which mode will be used in his application to 
1550:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****          manage the ADC controller events: Polling mode or Interrupt mode.
1551:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   
1552:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] In the Polling Mode it is advised to use the following functions:
1553:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) ADC_GetFlagStatus() : to check if flags events occur. 
1554:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) ADC_ClearFlag()     : to clear the flags events.
1555:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       
1556:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     [..] In the Interrupt Mode it is advised to use the following functions:
1557:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) ADC_ITConfig()          : to enable or disable the interrupt source.
1558:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) ADC_GetITStatus()       : to check if Interrupt occurs.
1559:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****       (+) ADC_ClearITPendingBit() : to clear the Interrupt pending Bit 
1560:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****                                    (corresponding Flag). 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 58


1561:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** @endverbatim
1562:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @{
1563:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */ 
1564:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1565:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
1566:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1567:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled. 
1568:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1569:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
1570:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1571:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1572:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt enable                       
1573:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
1574:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1575:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
1576:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1577:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)  
1578:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1691              		.loc 1 1578 1 is_stmt 1 view -0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 0
 1694              		@ frame_needed = 0, uses_anonymous_args = 0
 1695              		@ link register save eliminated.
1579:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint32_t itmask = 0;
 1696              		.loc 1 1579 3 view .LVU518
1580:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1581:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1697              		.loc 1 1581 3 view .LVU519
1582:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1698              		.loc 1 1582 3 view .LVU520
1583:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT)); 
 1699              		.loc 1 1583 3 view .LVU521
1584:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1585:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1586:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   itmask = (uint8_t)ADC_IT;
 1700              		.loc 1 1586 3 view .LVU522
 1701              		.loc 1 1586 12 is_stmt 0 view .LVU523
 1702 0000 CBB2     		uxtb	r3, r1
 1703              	.LVL133:
1587:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   itmask = (uint32_t)0x01 << itmask;    
 1704              		.loc 1 1587 3 is_stmt 1 view .LVU524
 1705              		.loc 1 1587 10 is_stmt 0 view .LVU525
 1706 0002 0121     		movs	r1, #1
 1707              	.LVL134:
 1708              		.loc 1 1587 10 view .LVU526
 1709 0004 9940     		lsls	r1, r1, r3
 1710              	.LVL135:
1588:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1589:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1711              		.loc 1 1589 3 is_stmt 1 view .LVU527
 1712              		.loc 1 1589 6 is_stmt 0 view .LVU528
 1713 0006 1AB1     		cbz	r2, .L87
1590:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1591:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Enable the selected ADC interrupts */
1592:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR1 |= itmask;
 1714              		.loc 1 1592 5 is_stmt 1 view .LVU529
 1715              		.loc 1 1592 15 is_stmt 0 view .LVU530
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 59


 1716 0008 4368     		ldr	r3, [r0, #4]
 1717 000a 1943     		orrs	r1, r1, r3
 1718              	.LVL136:
 1719              		.loc 1 1592 15 view .LVU531
 1720 000c 4160     		str	r1, [r0, #4]
 1721 000e 7047     		bx	lr
 1722              	.LVL137:
 1723              	.L87:
1593:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1594:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
1595:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1596:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* Disable the selected ADC interrupts */
1597:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     ADCx->CR1 &= (~(uint32_t)itmask);
 1724              		.loc 1 1597 5 is_stmt 1 view .LVU532
 1725              		.loc 1 1597 15 is_stmt 0 view .LVU533
 1726 0010 4368     		ldr	r3, [r0, #4]
 1727 0012 23EA0101 		bic	r1, r3, r1
 1728              	.LVL138:
 1729              		.loc 1 1597 15 view .LVU534
 1730 0016 4160     		str	r1, [r0, #4]
1598:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1599:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1731              		.loc 1 1599 1 view .LVU535
 1732 0018 7047     		bx	lr
 1733              		.cfi_endproc
 1734              	.LFE156:
 1736              		.section	.text.ADC_GetFlagStatus,"ax",%progbits
 1737              		.align	1
 1738              		.global	ADC_GetFlagStatus
 1739              		.syntax unified
 1740              		.thumb
 1741              		.thumb_func
 1742              		.fpu fpv4-sp-d16
 1744              	ADC_GetFlagStatus:
 1745              	.LVL139:
 1746              	.LFB157:
1600:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1601:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1602:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1603:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1604:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1605:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1606:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_AWD: Analog watchdog flag
1607:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_EOC: End of conversion flag
1608:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JEOC: End of injected group conversion flag
1609:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1610:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_STRT: Start of regular group conversion flag
1611:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_OVR: Overrun flag                                                 
1612:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1613:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1614:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1615:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1747              		.loc 1 1615 1 is_stmt 1 view -0
 1748              		.cfi_startproc
 1749              		@ args = 0, pretend = 0, frame = 0
 1750              		@ frame_needed = 0, uses_anonymous_args = 0
 1751              		@ link register save eliminated.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 60


1616:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
 1752              		.loc 1 1616 3 view .LVU537
1617:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1618:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1753              		.loc 1 1618 3 view .LVU538
1619:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
 1754              		.loc 1 1619 3 view .LVU539
1620:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1621:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the status of the specified ADC flag */
1622:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if ((ADCx->SR & ADC_FLAG) != (uint8_t)RESET)
 1755              		.loc 1 1622 3 view .LVU540
 1756              		.loc 1 1622 12 is_stmt 0 view .LVU541
 1757 0000 0368     		ldr	r3, [r0]
 1758              		.loc 1 1622 6 view .LVU542
 1759 0002 1942     		tst	r1, r3
 1760 0004 01D0     		beq	.L91
1623:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1624:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* ADC_FLAG is set */
1625:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     bitstatus = SET;
 1761              		.loc 1 1625 15 view .LVU543
 1762 0006 0120     		movs	r0, #1
 1763              	.LVL140:
 1764              		.loc 1 1625 15 view .LVU544
 1765 0008 7047     		bx	lr
 1766              	.LVL141:
 1767              	.L91:
1626:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1627:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
1628:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1629:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* ADC_FLAG is reset */
1630:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     bitstatus = RESET;
 1768              		.loc 1 1630 15 view .LVU545
 1769 000a 0020     		movs	r0, #0
 1770              	.LVL142:
1631:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1632:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Return the ADC_FLAG status */
1633:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   return  bitstatus;
 1771              		.loc 1 1633 3 is_stmt 1 view .LVU546
1634:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1772              		.loc 1 1634 1 is_stmt 0 view .LVU547
 1773 000c 7047     		bx	lr
 1774              		.cfi_endproc
 1775              	.LFE157:
 1777              		.section	.text.ADC_ClearFlag,"ax",%progbits
 1778              		.align	1
 1779              		.global	ADC_ClearFlag
 1780              		.syntax unified
 1781              		.thumb
 1782              		.thumb_func
 1783              		.fpu fpv4-sp-d16
 1785              	ADC_ClearFlag:
 1786              	.LVL143:
 1787              	.LFB158:
1635:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1636:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1637:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Clears the ADCx's pending flags.
1638:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 61


1639:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1640:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be any combination of the following values:
1641:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_AWD: Analog watchdog flag
1642:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_EOC: End of conversion flag
1643:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JEOC: End of injected group conversion flag
1644:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1645:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_STRT: Start of regular group conversion flag
1646:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_OVR: Overrun flag                          
1647:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
1648:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1649:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1650:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1788              		.loc 1 1650 1 is_stmt 1 view -0
 1789              		.cfi_startproc
 1790              		@ args = 0, pretend = 0, frame = 0
 1791              		@ frame_needed = 0, uses_anonymous_args = 0
 1792              		@ link register save eliminated.
1651:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1652:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1793              		.loc 1 1652 3 view .LVU549
1653:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
 1794              		.loc 1 1653 3 view .LVU550
1654:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1655:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Clear the selected ADC flags */
1656:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->SR = ~(uint32_t)ADC_FLAG;
 1795              		.loc 1 1656 3 view .LVU551
 1796              		.loc 1 1656 14 is_stmt 0 view .LVU552
 1797 0000 C943     		mvns	r1, r1
 1798              	.LVL144:
 1799              		.loc 1 1656 12 view .LVU553
 1800 0002 0160     		str	r1, [r0]
1657:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1801              		.loc 1 1657 1 view .LVU554
 1802 0004 7047     		bx	lr
 1803              		.cfi_endproc
 1804              	.LFE158:
 1806              		.section	.text.ADC_GetITStatus,"ax",%progbits
 1807              		.align	1
 1808              		.global	ADC_GetITStatus
 1809              		.syntax unified
 1810              		.thumb
 1811              		.thumb_func
 1812              		.fpu fpv4-sp-d16
 1814              	ADC_GetITStatus:
 1815              	.LVL145:
 1816              	.LFB159:
1658:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1659:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1660:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1661:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx:   where x can be 1, 2 or 3 to select the ADC peripheral.
1662:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check. 
1663:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1664:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
1665:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1666:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1667:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt mask                        
1668:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 62


1669:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1670:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1671:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1817              		.loc 1 1671 1 is_stmt 1 view -0
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 0
 1820              		@ frame_needed = 0, uses_anonymous_args = 0
 1821              		@ link register save eliminated.
 1822              		.loc 1 1671 1 is_stmt 0 view .LVU556
 1823 0000 10B4     		push	{r4}
 1824              	.LCFI15:
 1825              		.cfi_def_cfa_offset 4
 1826              		.cfi_offset 4, -4
1672:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ITStatus bitstatus = RESET;
 1827              		.loc 1 1672 3 is_stmt 1 view .LVU557
 1828              	.LVL146:
1673:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint32_t itmask = 0, enablestatus = 0;
 1829              		.loc 1 1673 3 view .LVU558
1674:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1675:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1676:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1830              		.loc 1 1676 3 view .LVU559
1677:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
 1831              		.loc 1 1677 3 view .LVU560
1678:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1679:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1680:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   itmask = ADC_IT >> 8;
 1832              		.loc 1 1680 3 view .LVU561
1681:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1682:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the ADC_IT enable bit status */
1683:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   enablestatus = (ADCx->CR1 & ((uint32_t)0x01 << (uint8_t)ADC_IT)) ;
 1833              		.loc 1 1683 3 view .LVU562
 1834              		.loc 1 1683 23 is_stmt 0 view .LVU563
 1835 0002 4268     		ldr	r2, [r0, #4]
 1836              		.loc 1 1683 50 view .LVU564
 1837 0004 CCB2     		uxtb	r4, r1
 1838              		.loc 1 1683 47 view .LVU565
 1839 0006 0123     		movs	r3, #1
 1840 0008 A340     		lsls	r3, r3, r4
 1841              		.loc 1 1683 16 view .LVU566
 1842 000a 1340     		ands	r3, r3, r2
 1843              	.LVL147:
1684:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1685:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the status of the specified ADC interrupt */
1686:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   if (((ADCx->SR & itmask) != (uint32_t)RESET) && enablestatus)
 1844              		.loc 1 1686 3 is_stmt 1 view .LVU567
 1845              		.loc 1 1686 13 is_stmt 0 view .LVU568
 1846 000c 0268     		ldr	r2, [r0]
 1847              		.loc 1 1686 6 view .LVU569
 1848 000e 12EA1122 		ands	r2, r2, r1, lsr #8
 1849 0012 02D0     		beq	.L95
 1850              		.loc 1 1686 48 discriminator 1 view .LVU570
 1851 0014 2BB9     		cbnz	r3, .L96
1687:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1688:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* ADC_IT is set */
1689:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     bitstatus = SET;
1690:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 63


1691:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   else
1692:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   {
1693:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     /* ADC_IT is reset */
1694:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****     bitstatus = RESET;
 1852              		.loc 1 1694 15 view .LVU571
 1853 0016 0020     		movs	r0, #0
 1854              	.LVL148:
 1855              		.loc 1 1694 15 view .LVU572
 1856 0018 00E0     		b	.L94
 1857              	.LVL149:
 1858              	.L95:
 1859              		.loc 1 1694 15 view .LVU573
 1860 001a 0020     		movs	r0, #0
 1861              	.LVL150:
 1862              	.L94:
1695:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
1696:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Return the ADC_IT status */
1697:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   return  bitstatus;
 1863              		.loc 1 1697 3 is_stmt 1 view .LVU574
1698:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }
 1864              		.loc 1 1698 1 is_stmt 0 view .LVU575
 1865 001c 5DF8044B 		ldr	r4, [sp], #4
 1866              	.LCFI16:
 1867              		.cfi_remember_state
 1868              		.cfi_restore 4
 1869              		.cfi_def_cfa_offset 0
 1870 0020 7047     		bx	lr
 1871              	.LVL151:
 1872              	.L96:
 1873              	.LCFI17:
 1874              		.cfi_restore_state
1689:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 1875              		.loc 1 1689 15 view .LVU576
 1876 0022 0120     		movs	r0, #1
 1877              	.LVL152:
1689:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   }
 1878              		.loc 1 1689 15 view .LVU577
 1879 0024 FAE7     		b	.L94
 1880              		.cfi_endproc
 1881              	.LFE159:
 1883              		.section	.text.ADC_ClearITPendingBit,"ax",%progbits
 1884              		.align	1
 1885              		.global	ADC_ClearITPendingBit
 1886              		.syntax unified
 1887              		.thumb
 1888              		.thumb_func
 1889              		.fpu fpv4-sp-d16
 1891              	ADC_ClearITPendingBit:
 1892              	.LVL153:
 1893              	.LFB160:
1699:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** 
1700:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** /**
1701:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1702:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1703:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1704:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1705:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 64


1706:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1707:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1708:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt mask                         
1709:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   * @retval None
1710:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   */
1711:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1712:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** {
 1894              		.loc 1 1712 1 is_stmt 1 view -0
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 0
 1897              		@ frame_needed = 0, uses_anonymous_args = 0
 1898              		@ link register save eliminated.
1713:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   uint8_t itmask = 0;
 1899              		.loc 1 1713 3 view .LVU579
1714:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Check the parameters */
1715:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1900              		.loc 1 1715 3 view .LVU580
1716:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT)); 
 1901              		.loc 1 1716 3 view .LVU581
1717:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1718:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   itmask = (uint8_t)(ADC_IT >> 8);
 1902              		.loc 1 1718 3 view .LVU582
1719:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1720:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c ****   ADCx->SR = ~(uint32_t)itmask;
 1903              		.loc 1 1720 3 view .LVU583
 1904              		.loc 1 1720 14 is_stmt 0 view .LVU584
 1905 0000 6FEA1121 		mvn	r1, r1, lsr #8
 1906              	.LVL154:
 1907              		.loc 1 1720 12 view .LVU585
 1908 0004 0160     		str	r1, [r0]
1721:STM32F4xx_LIB/periph/src/stm32f4xx_adc.c **** }                    
 1909              		.loc 1 1721 1 view .LVU586
 1910 0006 7047     		bx	lr
 1911              		.cfi_endproc
 1912              	.LFE160:
 1914              		.text
 1915              	.Letext0:
 1916              		.file 2 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\machine\\_default_types.h"
 1917              		.file 3 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 1918              		.file 4 "STM32F4xx_LIB/core/core_cm4.h"
 1919              		.file 5 "User/system_stm32f4xx.h"
 1920              		.file 6 "User/stm32f4xx.h"
 1921              		.file 7 "STM32F4xx_LIB/periph/inc/stm32f4xx_adc.h"
 1922              		.file 8 "STM32F4xx_LIB/periph/inc/stm32f4xx_rcc.h"
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 65


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_adc.c
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:18     .text.ADC_DeInit:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:26     .text.ADC_DeInit:00000000 ADC_DeInit
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:54     .text.ADC_Init:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:61     .text.ADC_Init:00000000 ADC_Init
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:170    .text.ADC_Init:0000004c $d
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:175    .text.ADC_StructInit:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:182    .text.ADC_StructInit:00000000 ADC_StructInit
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:219    .text.ADC_CommonInit:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:226    .text.ADC_CommonInit:00000000 ADC_CommonInit
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:286    .text.ADC_CommonInit:00000024 $d
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:292    .text.ADC_CommonStructInit:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:299    .text.ADC_CommonStructInit:00000000 ADC_CommonStructInit
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:326    .text.ADC_Cmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:333    .text.ADC_Cmd:00000000 ADC_Cmd
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:364    .text.ADC_AnalogWatchdogCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:371    .text.ADC_AnalogWatchdogCmd:00000000 ADC_AnalogWatchdogCmd
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:406    .text.ADC_AnalogWatchdogThresholdsConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:413    .text.ADC_AnalogWatchdogThresholdsConfig:00000000 ADC_AnalogWatchdogThresholdsConfig
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:436    .text.ADC_AnalogWatchdogSingleChannelConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:443    .text.ADC_AnalogWatchdogSingleChannelConfig:00000000 ADC_AnalogWatchdogSingleChannelConfig
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:475    .text.ADC_TempSensorVrefintCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:482    .text.ADC_TempSensorVrefintCmd:00000000 ADC_TempSensorVrefintCmd
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:513    .text.ADC_TempSensorVrefintCmd:0000001c $d
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:518    .text.ADC_VBATCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:525    .text.ADC_VBATCmd:00000000 ADC_VBATCmd
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:556    .text.ADC_VBATCmd:0000001c $d
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:561    .text.ADC_RegularChannelConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:568    .text.ADC_RegularChannelConfig:00000000 ADC_RegularChannelConfig
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:768    .text.ADC_SoftwareStartConv:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:775    .text.ADC_SoftwareStartConv:00000000 ADC_SoftwareStartConv
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:795    .text.ADC_GetSoftwareStartConvStatus:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:802    .text.ADC_GetSoftwareStartConvStatus:00000000 ADC_GetSoftwareStartConvStatus
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:835    .text.ADC_EOCOnEachRegularChannelCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:842    .text.ADC_EOCOnEachRegularChannelCmd:00000000 ADC_EOCOnEachRegularChannelCmd
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:873    .text.ADC_ContinuousModeCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:880    .text.ADC_ContinuousModeCmd:00000000 ADC_ContinuousModeCmd
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:911    .text.ADC_DiscModeChannelCountConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:918    .text.ADC_DiscModeChannelCountConfig:00000000 ADC_DiscModeChannelCountConfig
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:955    .text.ADC_DiscModeCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:962    .text.ADC_DiscModeCmd:00000000 ADC_DiscModeCmd
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:993    .text.ADC_GetConversionValue:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1000   .text.ADC_GetConversionValue:00000000 ADC_GetConversionValue
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1020   .text.ADC_GetMultiModeConversionValue:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1027   .text.ADC_GetMultiModeConversionValue:00000000 ADC_GetMultiModeConversionValue
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1043   .text.ADC_GetMultiModeConversionValue:00000008 $d
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1048   .text.ADC_DMACmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1055   .text.ADC_DMACmd:00000000 ADC_DMACmd
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1086   .text.ADC_DMARequestAfterLastTransferCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1093   .text.ADC_DMARequestAfterLastTransferCmd:00000000 ADC_DMARequestAfterLastTransferCmd
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1124   .text.ADC_MultiModeDMARequestAfterLastTransferCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1131   .text.ADC_MultiModeDMARequestAfterLastTransferCmd:00000000 ADC_MultiModeDMARequestAfterLastTransferCmd
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1162   .text.ADC_MultiModeDMARequestAfterLastTransferCmd:0000001c $d
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1167   .text.ADC_InjectedChannelConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1174   .text.ADC_InjectedChannelConfig:00000000 ADC_InjectedChannelConfig
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1312   .text.ADC_InjectedSequencerLengthConfig:00000000 $t
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s 			page 66


C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1319   .text.ADC_InjectedSequencerLengthConfig:00000000 ADC_InjectedSequencerLengthConfig
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1356   .text.ADC_SetInjectedOffset:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1363   .text.ADC_SetInjectedOffset:00000000 ADC_SetInjectedOffset
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1407   .text.ADC_ExternalTrigInjectedConvConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1414   .text.ADC_ExternalTrigInjectedConvConfig:00000000 ADC_ExternalTrigInjectedConvConfig
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1446   .text.ADC_ExternalTrigInjectedConvEdgeConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1453   .text.ADC_ExternalTrigInjectedConvEdgeConfig:00000000 ADC_ExternalTrigInjectedConvEdgeConfig
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1485   .text.ADC_SoftwareStartInjectedConv:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1492   .text.ADC_SoftwareStartInjectedConv:00000000 ADC_SoftwareStartInjectedConv
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1512   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1519   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:00000000 ADC_GetSoftwareStartInjectedConvCmdStatus
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1552   .text.ADC_AutoInjectedConvCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1559   .text.ADC_AutoInjectedConvCmd:00000000 ADC_AutoInjectedConvCmd
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1590   .text.ADC_InjectedDiscModeCmd:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1597   .text.ADC_InjectedDiscModeCmd:00000000 ADC_InjectedDiscModeCmd
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1628   .text.ADC_GetInjectedConversionValue:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1635   .text.ADC_GetInjectedConversionValue:00000000 ADC_GetInjectedConversionValue
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1681   .text.ADC_ITConfig:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1688   .text.ADC_ITConfig:00000000 ADC_ITConfig
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1737   .text.ADC_GetFlagStatus:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1744   .text.ADC_GetFlagStatus:00000000 ADC_GetFlagStatus
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1778   .text.ADC_ClearFlag:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1785   .text.ADC_ClearFlag:00000000 ADC_ClearFlag
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1807   .text.ADC_GetITStatus:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1814   .text.ADC_GetITStatus:00000000 ADC_GetITStatus
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1884   .text.ADC_ClearITPendingBit:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccmkC1wC.s:1891   .text.ADC_ClearITPendingBit:00000000 ADC_ClearITPendingBit

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
