ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Delay,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Delay:
  26              	.LVL0:
  27              	.LFB124:
  28              		.file 1 "User/main.c"
   1:User/main.c   **** /**
   2:User/main.c   ****   ******************************************************************************
   3:User/main.c   ****   * @file    Project/STM32F4xx_StdPeriph_Templates/main.c 
   4:User/main.c   ****   * @author  MCD Application Team
   5:User/main.c   ****   * @version V1.8.1
   6:User/main.c   ****   * @date    27-January-2022
   7:User/main.c   ****   * @brief   Main program body
   8:User/main.c   ****   ******************************************************************************
   9:User/main.c   ****   * @attention
  10:User/main.c   ****   *
  11:User/main.c   ****   * Copyright (c) 2016 STMicroelectronics.
  12:User/main.c   ****   * All rights reserved.
  13:User/main.c   ****   *
  14:User/main.c   ****   * This software is licensed under terms that can be found in the LICENSE file
  15:User/main.c   ****   * in the root directory of this software component.
  16:User/main.c   ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:User/main.c   ****   *
  18:User/main.c   ****   ******************************************************************************
  19:User/main.c   ****   */
  20:User/main.c   **** 
  21:User/main.c   **** /* Includes ------------------------------------------------------------------*/
  22:User/main.c   **** #include "main.h"
  23:User/main.c   **** 
  24:User/main.c   **** /** @addtogroup Template_Project
  25:User/main.c   ****   * @{
  26:User/main.c   ****   */ 
  27:User/main.c   **** 
  28:User/main.c   **** /* Private typedef -----------------------------------------------------------*/
  29:User/main.c   **** /* Private define ------------------------------------------------------------*/
  30:User/main.c   **** /* Private macro -------------------------------------------------------------*/
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 2


  31:User/main.c   **** /* Private variables ---------------------------------------------------------*/
  32:User/main.c   **** static __IO uint32_t uwTimingDelay;
  33:User/main.c   **** RCC_ClocksTypeDef RCC_Clocks;
  34:User/main.c   **** 
  35:User/main.c   **** /* Private function prototypes -----------------------------------------------*/
  36:User/main.c   **** static void Delay(__IO uint32_t nTime);
  37:User/main.c   **** 
  38:User/main.c   **** /* Private functions ---------------------------------------------------------*/
  39:User/main.c   **** 
  40:User/main.c   **** /**
  41:User/main.c   ****   * @brief  Main program
  42:User/main.c   ****   * @param  None
  43:User/main.c   ****   * @retval None
  44:User/main.c   ****   */
  45:User/main.c   **** int main(void)
  46:User/main.c   **** {
  47:User/main.c   ****   GPIO_InitTypeDef GPIO_InitStructure;
  48:User/main.c   ****  
  49:User/main.c   ****  /*!< At this stage the microcontroller clock setting is already configured, 
  50:User/main.c   ****        this is done through SystemInit() function which is called from startup
  51:User/main.c   ****        files before to branch to application main.
  52:User/main.c   ****        To reconfigure the default setting of SystemInit() function, 
  53:User/main.c   ****        refer to system_stm32f4xx.c file */
  54:User/main.c   **** 
  55:User/main.c   ****   /* SysTick end of count event each 10ms */
  56:User/main.c   ****   RCC_GetClocksFreq(&RCC_Clocks);
  57:User/main.c   ****   SysTick_Config(RCC_Clocks.HCLK_Frequency / 100);
  58:User/main.c   ****   
  59:User/main.c   ****   /* Add your application code here */
  60:User/main.c   ****   /* Insert 50 ms delay */
  61:User/main.c   ****   Delay(5);
  62:User/main.c   ****   
  63:User/main.c   ****   /* Output HSE clock on MCO1 pin(PA8) ****************************************/ 
  64:User/main.c   ****   /* Enable the GPIOA peripheral */ 
  65:User/main.c   ****   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
  66:User/main.c   ****   
  67:User/main.c   ****   /* Configure MCO1 pin(PA8) in alternate function */
  68:User/main.c   ****   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
  69:User/main.c   ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
  70:User/main.c   ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
  71:User/main.c   ****   GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
  72:User/main.c   ****   GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;  
  73:User/main.c   ****   GPIO_Init(GPIOA, &GPIO_InitStructure);
  74:User/main.c   ****     
  75:User/main.c   ****   /* HSE clock selected to output on MCO1 pin(PA8)*/
  76:User/main.c   ****   RCC_MCO1Config(RCC_MCO1Source_HSE, RCC_MCO1Div_1);
  77:User/main.c   ****   
  78:User/main.c   ****   
  79:User/main.c   ****   /* Output SYSCLK/4 clock on MCO2 pin(PC9) ***********************************/ 
  80:User/main.c   ****   /* Enable the GPIOACperipheral */ 
  81:User/main.c   ****   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);
  82:User/main.c   ****   
  83:User/main.c   ****   /* Configure MCO2 pin(PC9) in alternate function */
  84:User/main.c   ****   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
  85:User/main.c   ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
  86:User/main.c   ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
  87:User/main.c   ****   GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 3


  88:User/main.c   ****   GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;  
  89:User/main.c   ****   GPIO_Init(GPIOC, &GPIO_InitStructure);
  90:User/main.c   ****     
  91:User/main.c   ****   /* SYSCLK/4 clock selected to output on MCO2 pin(PC9)*/
  92:User/main.c   ****   RCC_MCO2Config(RCC_MCO2Source_SYSCLK, RCC_MCO2Div_4);
  93:User/main.c   ****   
  94:User/main.c   ****      
  95:User/main.c   ****   /* Infinite loop */
  96:User/main.c   ****   while (1)
  97:User/main.c   ****   {
  98:User/main.c   ****   }
  99:User/main.c   **** }
 100:User/main.c   **** 
 101:User/main.c   **** /**
 102:User/main.c   ****   * @brief  Inserts a delay time.
 103:User/main.c   ****   * @param  nTime: specifies the delay time length, in milliseconds.
 104:User/main.c   ****   * @retval None
 105:User/main.c   ****   */
 106:User/main.c   **** void Delay(__IO uint32_t nTime)
 107:User/main.c   **** { 
  29              		.loc 1 107 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 107 1 is_stmt 0 view .LVU1
  35 0000 82B0     		sub	sp, sp, #8
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38 0002 0190     		str	r0, [sp, #4]
 108:User/main.c   ****   uwTimingDelay = nTime;
  39              		.loc 1 108 3 is_stmt 1 view .LVU2
  40              		.loc 1 108 17 is_stmt 0 view .LVU3
  41 0004 019A     		ldr	r2, [sp, #4]
  42 0006 044B     		ldr	r3, .L4
  43 0008 1A60     		str	r2, [r3]
 109:User/main.c   **** 
 110:User/main.c   ****   while(uwTimingDelay != 0);
  44              		.loc 1 110 3 is_stmt 1 view .LVU4
  45              	.L2:
  46              		.loc 1 110 28 discriminator 1 view .LVU5
  47              		.loc 1 110 8 discriminator 1 view .LVU6
  48              		.loc 1 110 23 is_stmt 0 discriminator 1 view .LVU7
  49 000a 034B     		ldr	r3, .L4
  50 000c 1B68     		ldr	r3, [r3]
  51              		.loc 1 110 8 discriminator 1 view .LVU8
  52 000e 002B     		cmp	r3, #0
  53 0010 FBD1     		bne	.L2
 111:User/main.c   **** }
  54              		.loc 1 111 1 view .LVU9
  55 0012 02B0     		add	sp, sp, #8
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 0
  58              		@ sp needed
  59 0014 7047     		bx	lr
  60              	.L5:
  61 0016 00BF     		.align	2
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 4


  62              	.L4:
  63 0018 00000000 		.word	.LANCHOR0
  64              		.cfi_endproc
  65              	.LFE124:
  67              		.section	.text.main,"ax",%progbits
  68              		.align	1
  69              		.global	main
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	main:
  76              	.LFB123:
  46:User/main.c   ****   GPIO_InitTypeDef GPIO_InitStructure;
  77              		.loc 1 46 1 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 8
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82 0000 80B5     		push	{r7, lr}
  83              	.LCFI2:
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
  87 0002 82B0     		sub	sp, sp, #8
  88              	.LCFI3:
  89              		.cfi_def_cfa_offset 16
  47:User/main.c   ****  
  90              		.loc 1 47 3 view .LVU11
  56:User/main.c   ****   SysTick_Config(RCC_Clocks.HCLK_Frequency / 100);
  91              		.loc 1 56 3 view .LVU12
  92 0004 274C     		ldr	r4, .L10
  93 0006 2046     		mov	r0, r4
  94 0008 FFF7FEFF 		bl	RCC_GetClocksFreq
  95              	.LVL1:
  57:User/main.c   ****   
  96              		.loc 1 57 3 view .LVU13
  57:User/main.c   ****   
  97              		.loc 1 57 28 is_stmt 0 view .LVU14
  98 000c 6368     		ldr	r3, [r4, #4]
  57:User/main.c   ****   
  99              		.loc 1 57 3 view .LVU15
 100 000e 264A     		ldr	r2, .L10+4
 101 0010 A2FB0323 		umull	r2, r3, r2, r3
 102 0014 5B09     		lsrs	r3, r3, #5
 103              	.LVL2:
 104              	.LBB8:
 105              	.LBI8:
 106              		.file 2 "STM32F4xx_LIB/core/core_cm4.h"
   1:STM32F4xx_LIB/core/core_cm4.h **** /**************************************************************************//**
   2:STM32F4xx_LIB/core/core_cm4.h ****  * @file     core_cm4.h
   3:STM32F4xx_LIB/core/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:STM32F4xx_LIB/core/core_cm4.h ****  * @version  V4.10
   5:STM32F4xx_LIB/core/core_cm4.h ****  * @date     18. March 2015
   6:STM32F4xx_LIB/core/core_cm4.h ****  *
   7:STM32F4xx_LIB/core/core_cm4.h ****  * @note
   8:STM32F4xx_LIB/core/core_cm4.h ****  *
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 5


   9:STM32F4xx_LIB/core/core_cm4.h ****  ******************************************************************************/
  10:STM32F4xx_LIB/core/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
  11:STM32F4xx_LIB/core/core_cm4.h **** 
  12:STM32F4xx_LIB/core/core_cm4.h ****    All rights reserved.
  13:STM32F4xx_LIB/core/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:STM32F4xx_LIB/core/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:STM32F4xx_LIB/core/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:STM32F4xx_LIB/core/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:STM32F4xx_LIB/core/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  18:STM32F4xx_LIB/core/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:STM32F4xx_LIB/core/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:STM32F4xx_LIB/core/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:STM32F4xx_LIB/core/core_cm4.h ****      to endorse or promote products derived from this software without
  22:STM32F4xx_LIB/core/core_cm4.h ****      specific prior written permission.
  23:STM32F4xx_LIB/core/core_cm4.h ****    *
  24:STM32F4xx_LIB/core/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:STM32F4xx_LIB/core/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:STM32F4xx_LIB/core/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:STM32F4xx_LIB/core/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:STM32F4xx_LIB/core/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:STM32F4xx_LIB/core/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:STM32F4xx_LIB/core/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:STM32F4xx_LIB/core/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:STM32F4xx_LIB/core/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:STM32F4xx_LIB/core/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:STM32F4xx_LIB/core/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:STM32F4xx_LIB/core/core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:STM32F4xx_LIB/core/core_cm4.h **** 
  37:STM32F4xx_LIB/core/core_cm4.h **** 
  38:STM32F4xx_LIB/core/core_cm4.h **** #if defined ( __ICCARM__ )
  39:STM32F4xx_LIB/core/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:STM32F4xx_LIB/core/core_cm4.h **** #endif
  41:STM32F4xx_LIB/core/core_cm4.h **** 
  42:STM32F4xx_LIB/core/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  43:STM32F4xx_LIB/core/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  44:STM32F4xx_LIB/core/core_cm4.h **** 
  45:STM32F4xx_LIB/core/core_cm4.h **** #ifdef __cplusplus
  46:STM32F4xx_LIB/core/core_cm4.h ****  extern "C" {
  47:STM32F4xx_LIB/core/core_cm4.h **** #endif
  48:STM32F4xx_LIB/core/core_cm4.h **** 
  49:STM32F4xx_LIB/core/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:STM32F4xx_LIB/core/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:STM32F4xx_LIB/core/core_cm4.h **** 
  52:STM32F4xx_LIB/core/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:STM32F4xx_LIB/core/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:STM32F4xx_LIB/core/core_cm4.h **** 
  55:STM32F4xx_LIB/core/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:STM32F4xx_LIB/core/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:STM32F4xx_LIB/core/core_cm4.h **** 
  58:STM32F4xx_LIB/core/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:STM32F4xx_LIB/core/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:STM32F4xx_LIB/core/core_cm4.h ****  */
  61:STM32F4xx_LIB/core/core_cm4.h **** 
  62:STM32F4xx_LIB/core/core_cm4.h **** 
  63:STM32F4xx_LIB/core/core_cm4.h **** /*******************************************************************************
  64:STM32F4xx_LIB/core/core_cm4.h ****  *                 CMSIS definitions
  65:STM32F4xx_LIB/core/core_cm4.h ****  ******************************************************************************/
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 6


  66:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup Cortex_M4
  67:STM32F4xx_LIB/core/core_cm4.h ****   @{
  68:STM32F4xx_LIB/core/core_cm4.h ****  */
  69:STM32F4xx_LIB/core/core_cm4.h **** 
  70:STM32F4xx_LIB/core/core_cm4.h **** /*  CMSIS CM4 definitions */
  71:STM32F4xx_LIB/core/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04)                                   /*!< [31:16] CMSIS HAL m
  72:STM32F4xx_LIB/core/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x00)                                   /*!< [15:0]  CMSIS HAL s
  73:STM32F4xx_LIB/core/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:STM32F4xx_LIB/core/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:STM32F4xx_LIB/core/core_cm4.h **** 
  76:STM32F4xx_LIB/core/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:STM32F4xx_LIB/core/core_cm4.h **** 
  78:STM32F4xx_LIB/core/core_cm4.h **** 
  79:STM32F4xx_LIB/core/core_cm4.h **** #if   defined ( __CC_ARM )
  80:STM32F4xx_LIB/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:STM32F4xx_LIB/core/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:STM32F4xx_LIB/core/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  83:STM32F4xx_LIB/core/core_cm4.h **** 
  84:STM32F4xx_LIB/core/core_cm4.h **** #elif defined ( __GNUC__ )
  85:STM32F4xx_LIB/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  86:STM32F4xx_LIB/core/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  87:STM32F4xx_LIB/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
  88:STM32F4xx_LIB/core/core_cm4.h **** 
  89:STM32F4xx_LIB/core/core_cm4.h **** #elif defined ( __ICCARM__ )
  90:STM32F4xx_LIB/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  91:STM32F4xx_LIB/core/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  92:STM32F4xx_LIB/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
  93:STM32F4xx_LIB/core/core_cm4.h **** 
  94:STM32F4xx_LIB/core/core_cm4.h **** #elif defined ( __TMS470__ )
  95:STM32F4xx_LIB/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  96:STM32F4xx_LIB/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
  97:STM32F4xx_LIB/core/core_cm4.h **** 
  98:STM32F4xx_LIB/core/core_cm4.h **** #elif defined ( __TASKING__ )
  99:STM32F4xx_LIB/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 100:STM32F4xx_LIB/core/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 101:STM32F4xx_LIB/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
 102:STM32F4xx_LIB/core/core_cm4.h **** 
 103:STM32F4xx_LIB/core/core_cm4.h **** #elif defined ( __CSMC__ )
 104:STM32F4xx_LIB/core/core_cm4.h ****   #define __packed
 105:STM32F4xx_LIB/core/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 106:STM32F4xx_LIB/core/core_cm4.h ****   #define __INLINE         inline                                    /*use -pc99 on compile line !<
 107:STM32F4xx_LIB/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
 108:STM32F4xx_LIB/core/core_cm4.h **** 
 109:STM32F4xx_LIB/core/core_cm4.h **** #endif
 110:STM32F4xx_LIB/core/core_cm4.h **** 
 111:STM32F4xx_LIB/core/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 112:STM32F4xx_LIB/core/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 113:STM32F4xx_LIB/core/core_cm4.h **** */
 114:STM32F4xx_LIB/core/core_cm4.h **** #if defined ( __CC_ARM )
 115:STM32F4xx_LIB/core/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 116:STM32F4xx_LIB/core/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 117:STM32F4xx_LIB/core/core_cm4.h ****       #define __FPU_USED       1
 118:STM32F4xx_LIB/core/core_cm4.h ****     #else
 119:STM32F4xx_LIB/core/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 120:STM32F4xx_LIB/core/core_cm4.h ****       #define __FPU_USED       0
 121:STM32F4xx_LIB/core/core_cm4.h ****     #endif
 122:STM32F4xx_LIB/core/core_cm4.h ****   #else
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 7


 123:STM32F4xx_LIB/core/core_cm4.h ****     #define __FPU_USED         0
 124:STM32F4xx_LIB/core/core_cm4.h ****   #endif
 125:STM32F4xx_LIB/core/core_cm4.h **** 
 126:STM32F4xx_LIB/core/core_cm4.h **** #elif defined ( __GNUC__ )
 127:STM32F4xx_LIB/core/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 128:STM32F4xx_LIB/core/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 129:STM32F4xx_LIB/core/core_cm4.h ****       #define __FPU_USED       1
 130:STM32F4xx_LIB/core/core_cm4.h ****     #else
 131:STM32F4xx_LIB/core/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 132:STM32F4xx_LIB/core/core_cm4.h ****       #define __FPU_USED       0
 133:STM32F4xx_LIB/core/core_cm4.h ****     #endif
 134:STM32F4xx_LIB/core/core_cm4.h ****   #else
 135:STM32F4xx_LIB/core/core_cm4.h ****     #define __FPU_USED         0
 136:STM32F4xx_LIB/core/core_cm4.h ****   #endif
 137:STM32F4xx_LIB/core/core_cm4.h **** 
 138:STM32F4xx_LIB/core/core_cm4.h **** #elif defined ( __ICCARM__ )
 139:STM32F4xx_LIB/core/core_cm4.h ****   #if defined __ARMVFP__
 140:STM32F4xx_LIB/core/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 141:STM32F4xx_LIB/core/core_cm4.h ****       #define __FPU_USED       1
 142:STM32F4xx_LIB/core/core_cm4.h ****     #else
 143:STM32F4xx_LIB/core/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 144:STM32F4xx_LIB/core/core_cm4.h ****       #define __FPU_USED       0
 145:STM32F4xx_LIB/core/core_cm4.h ****     #endif
 146:STM32F4xx_LIB/core/core_cm4.h ****   #else
 147:STM32F4xx_LIB/core/core_cm4.h ****     #define __FPU_USED         0
 148:STM32F4xx_LIB/core/core_cm4.h ****   #endif
 149:STM32F4xx_LIB/core/core_cm4.h **** 
 150:STM32F4xx_LIB/core/core_cm4.h **** #elif defined ( __TMS470__ )
 151:STM32F4xx_LIB/core/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 152:STM32F4xx_LIB/core/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 153:STM32F4xx_LIB/core/core_cm4.h ****       #define __FPU_USED       1
 154:STM32F4xx_LIB/core/core_cm4.h ****     #else
 155:STM32F4xx_LIB/core/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 156:STM32F4xx_LIB/core/core_cm4.h ****       #define __FPU_USED       0
 157:STM32F4xx_LIB/core/core_cm4.h ****     #endif
 158:STM32F4xx_LIB/core/core_cm4.h ****   #else
 159:STM32F4xx_LIB/core/core_cm4.h ****     #define __FPU_USED         0
 160:STM32F4xx_LIB/core/core_cm4.h ****   #endif
 161:STM32F4xx_LIB/core/core_cm4.h **** 
 162:STM32F4xx_LIB/core/core_cm4.h **** #elif defined ( __TASKING__ )
 163:STM32F4xx_LIB/core/core_cm4.h ****   #if defined __FPU_VFP__
 164:STM32F4xx_LIB/core/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 165:STM32F4xx_LIB/core/core_cm4.h ****       #define __FPU_USED       1
 166:STM32F4xx_LIB/core/core_cm4.h ****     #else
 167:STM32F4xx_LIB/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 168:STM32F4xx_LIB/core/core_cm4.h ****       #define __FPU_USED       0
 169:STM32F4xx_LIB/core/core_cm4.h ****     #endif
 170:STM32F4xx_LIB/core/core_cm4.h ****   #else
 171:STM32F4xx_LIB/core/core_cm4.h ****     #define __FPU_USED         0
 172:STM32F4xx_LIB/core/core_cm4.h ****   #endif
 173:STM32F4xx_LIB/core/core_cm4.h **** 
 174:STM32F4xx_LIB/core/core_cm4.h **** #elif defined ( __CSMC__ )		/* Cosmic */
 175:STM32F4xx_LIB/core/core_cm4.h ****   #if ( __CSMC__ & 0x400)		// FPU present for parser
 176:STM32F4xx_LIB/core/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 177:STM32F4xx_LIB/core/core_cm4.h ****       #define __FPU_USED       1
 178:STM32F4xx_LIB/core/core_cm4.h ****     #else
 179:STM32F4xx_LIB/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 8


 180:STM32F4xx_LIB/core/core_cm4.h ****       #define __FPU_USED       0
 181:STM32F4xx_LIB/core/core_cm4.h ****     #endif
 182:STM32F4xx_LIB/core/core_cm4.h ****   #else
 183:STM32F4xx_LIB/core/core_cm4.h ****     #define __FPU_USED         0
 184:STM32F4xx_LIB/core/core_cm4.h ****   #endif
 185:STM32F4xx_LIB/core/core_cm4.h **** #endif
 186:STM32F4xx_LIB/core/core_cm4.h **** 
 187:STM32F4xx_LIB/core/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 188:STM32F4xx_LIB/core/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 189:STM32F4xx_LIB/core/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 190:STM32F4xx_LIB/core/core_cm4.h **** #include <core_cmSimd.h>                 /* Compiler specific SIMD Intrinsics               */
 191:STM32F4xx_LIB/core/core_cm4.h **** 
 192:STM32F4xx_LIB/core/core_cm4.h **** #ifdef __cplusplus
 193:STM32F4xx_LIB/core/core_cm4.h **** }
 194:STM32F4xx_LIB/core/core_cm4.h **** #endif
 195:STM32F4xx_LIB/core/core_cm4.h **** 
 196:STM32F4xx_LIB/core/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 197:STM32F4xx_LIB/core/core_cm4.h **** 
 198:STM32F4xx_LIB/core/core_cm4.h **** #ifndef __CMSIS_GENERIC
 199:STM32F4xx_LIB/core/core_cm4.h **** 
 200:STM32F4xx_LIB/core/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 201:STM32F4xx_LIB/core/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 202:STM32F4xx_LIB/core/core_cm4.h **** 
 203:STM32F4xx_LIB/core/core_cm4.h **** #ifdef __cplusplus
 204:STM32F4xx_LIB/core/core_cm4.h ****  extern "C" {
 205:STM32F4xx_LIB/core/core_cm4.h **** #endif
 206:STM32F4xx_LIB/core/core_cm4.h **** 
 207:STM32F4xx_LIB/core/core_cm4.h **** /* check device defines and use defaults */
 208:STM32F4xx_LIB/core/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 209:STM32F4xx_LIB/core/core_cm4.h ****   #ifndef __CM4_REV
 210:STM32F4xx_LIB/core/core_cm4.h ****     #define __CM4_REV               0x0000
 211:STM32F4xx_LIB/core/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 212:STM32F4xx_LIB/core/core_cm4.h ****   #endif
 213:STM32F4xx_LIB/core/core_cm4.h **** 
 214:STM32F4xx_LIB/core/core_cm4.h ****   #ifndef __FPU_PRESENT
 215:STM32F4xx_LIB/core/core_cm4.h ****     #define __FPU_PRESENT             0
 216:STM32F4xx_LIB/core/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 217:STM32F4xx_LIB/core/core_cm4.h ****   #endif
 218:STM32F4xx_LIB/core/core_cm4.h **** 
 219:STM32F4xx_LIB/core/core_cm4.h ****   #ifndef __MPU_PRESENT
 220:STM32F4xx_LIB/core/core_cm4.h ****     #define __MPU_PRESENT             0
 221:STM32F4xx_LIB/core/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 222:STM32F4xx_LIB/core/core_cm4.h ****   #endif
 223:STM32F4xx_LIB/core/core_cm4.h **** 
 224:STM32F4xx_LIB/core/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 225:STM32F4xx_LIB/core/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 226:STM32F4xx_LIB/core/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 227:STM32F4xx_LIB/core/core_cm4.h ****   #endif
 228:STM32F4xx_LIB/core/core_cm4.h **** 
 229:STM32F4xx_LIB/core/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 230:STM32F4xx_LIB/core/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 231:STM32F4xx_LIB/core/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 232:STM32F4xx_LIB/core/core_cm4.h ****   #endif
 233:STM32F4xx_LIB/core/core_cm4.h **** #endif
 234:STM32F4xx_LIB/core/core_cm4.h **** 
 235:STM32F4xx_LIB/core/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 236:STM32F4xx_LIB/core/core_cm4.h **** /**
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 9


 237:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 238:STM32F4xx_LIB/core/core_cm4.h **** 
 239:STM32F4xx_LIB/core/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 240:STM32F4xx_LIB/core/core_cm4.h ****     \li to specify the access to peripheral variables.
 241:STM32F4xx_LIB/core/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 242:STM32F4xx_LIB/core/core_cm4.h **** */
 243:STM32F4xx_LIB/core/core_cm4.h **** #ifdef __cplusplus
 244:STM32F4xx_LIB/core/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 245:STM32F4xx_LIB/core/core_cm4.h **** #else
 246:STM32F4xx_LIB/core/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 247:STM32F4xx_LIB/core/core_cm4.h **** #endif
 248:STM32F4xx_LIB/core/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 249:STM32F4xx_LIB/core/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 250:STM32F4xx_LIB/core/core_cm4.h **** 
 251:STM32F4xx_LIB/core/core_cm4.h **** /*@} end of group Cortex_M4 */
 252:STM32F4xx_LIB/core/core_cm4.h **** 
 253:STM32F4xx_LIB/core/core_cm4.h **** 
 254:STM32F4xx_LIB/core/core_cm4.h **** 
 255:STM32F4xx_LIB/core/core_cm4.h **** /*******************************************************************************
 256:STM32F4xx_LIB/core/core_cm4.h ****  *                 Register Abstraction
 257:STM32F4xx_LIB/core/core_cm4.h ****   Core Register contain:
 258:STM32F4xx_LIB/core/core_cm4.h ****   - Core Register
 259:STM32F4xx_LIB/core/core_cm4.h ****   - Core NVIC Register
 260:STM32F4xx_LIB/core/core_cm4.h ****   - Core SCB Register
 261:STM32F4xx_LIB/core/core_cm4.h ****   - Core SysTick Register
 262:STM32F4xx_LIB/core/core_cm4.h ****   - Core Debug Register
 263:STM32F4xx_LIB/core/core_cm4.h ****   - Core MPU Register
 264:STM32F4xx_LIB/core/core_cm4.h ****   - Core FPU Register
 265:STM32F4xx_LIB/core/core_cm4.h ****  ******************************************************************************/
 266:STM32F4xx_LIB/core/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 267:STM32F4xx_LIB/core/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 268:STM32F4xx_LIB/core/core_cm4.h **** */
 269:STM32F4xx_LIB/core/core_cm4.h **** 
 270:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup    CMSIS_core_register
 271:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 272:STM32F4xx_LIB/core/core_cm4.h ****     \brief  Core Register type definitions.
 273:STM32F4xx_LIB/core/core_cm4.h ****   @{
 274:STM32F4xx_LIB/core/core_cm4.h ****  */
 275:STM32F4xx_LIB/core/core_cm4.h **** 
 276:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 277:STM32F4xx_LIB/core/core_cm4.h ****  */
 278:STM32F4xx_LIB/core/core_cm4.h **** typedef union
 279:STM32F4xx_LIB/core/core_cm4.h **** {
 280:STM32F4xx_LIB/core/core_cm4.h ****   struct
 281:STM32F4xx_LIB/core/core_cm4.h ****   {
 282:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 283:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 284:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 285:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 286:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 287:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 288:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 289:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 290:STM32F4xx_LIB/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 291:STM32F4xx_LIB/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 292:STM32F4xx_LIB/core/core_cm4.h **** } APSR_Type;
 293:STM32F4xx_LIB/core/core_cm4.h **** 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 10


 294:STM32F4xx_LIB/core/core_cm4.h **** /* APSR Register Definitions */
 295:STM32F4xx_LIB/core/core_cm4.h **** #define APSR_N_Pos                         31                                             /*!< APSR
 296:STM32F4xx_LIB/core/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 297:STM32F4xx_LIB/core/core_cm4.h **** 
 298:STM32F4xx_LIB/core/core_cm4.h **** #define APSR_Z_Pos                         30                                             /*!< APSR
 299:STM32F4xx_LIB/core/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 300:STM32F4xx_LIB/core/core_cm4.h **** 
 301:STM32F4xx_LIB/core/core_cm4.h **** #define APSR_C_Pos                         29                                             /*!< APSR
 302:STM32F4xx_LIB/core/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 303:STM32F4xx_LIB/core/core_cm4.h **** 
 304:STM32F4xx_LIB/core/core_cm4.h **** #define APSR_V_Pos                         28                                             /*!< APSR
 305:STM32F4xx_LIB/core/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 306:STM32F4xx_LIB/core/core_cm4.h **** 
 307:STM32F4xx_LIB/core/core_cm4.h **** #define APSR_Q_Pos                         27                                             /*!< APSR
 308:STM32F4xx_LIB/core/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 309:STM32F4xx_LIB/core/core_cm4.h **** 
 310:STM32F4xx_LIB/core/core_cm4.h **** #define APSR_GE_Pos                        16                                             /*!< APSR
 311:STM32F4xx_LIB/core/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 312:STM32F4xx_LIB/core/core_cm4.h **** 
 313:STM32F4xx_LIB/core/core_cm4.h **** 
 314:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 315:STM32F4xx_LIB/core/core_cm4.h ****  */
 316:STM32F4xx_LIB/core/core_cm4.h **** typedef union
 317:STM32F4xx_LIB/core/core_cm4.h **** {
 318:STM32F4xx_LIB/core/core_cm4.h ****   struct
 319:STM32F4xx_LIB/core/core_cm4.h ****   {
 320:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 321:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 322:STM32F4xx_LIB/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 323:STM32F4xx_LIB/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 324:STM32F4xx_LIB/core/core_cm4.h **** } IPSR_Type;
 325:STM32F4xx_LIB/core/core_cm4.h **** 
 326:STM32F4xx_LIB/core/core_cm4.h **** /* IPSR Register Definitions */
 327:STM32F4xx_LIB/core/core_cm4.h **** #define IPSR_ISR_Pos                        0                                             /*!< IPSR
 328:STM32F4xx_LIB/core/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 329:STM32F4xx_LIB/core/core_cm4.h **** 
 330:STM32F4xx_LIB/core/core_cm4.h **** 
 331:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 332:STM32F4xx_LIB/core/core_cm4.h ****  */
 333:STM32F4xx_LIB/core/core_cm4.h **** typedef union
 334:STM32F4xx_LIB/core/core_cm4.h **** {
 335:STM32F4xx_LIB/core/core_cm4.h ****   struct
 336:STM32F4xx_LIB/core/core_cm4.h ****   {
 337:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 338:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 339:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 340:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 341:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 342:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 343:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 344:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 345:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 346:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 347:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 348:STM32F4xx_LIB/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 349:STM32F4xx_LIB/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 350:STM32F4xx_LIB/core/core_cm4.h **** } xPSR_Type;
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 11


 351:STM32F4xx_LIB/core/core_cm4.h **** 
 352:STM32F4xx_LIB/core/core_cm4.h **** /* xPSR Register Definitions */
 353:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_N_Pos                         31                                             /*!< xPSR
 354:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 355:STM32F4xx_LIB/core/core_cm4.h **** 
 356:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_Z_Pos                         30                                             /*!< xPSR
 357:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 358:STM32F4xx_LIB/core/core_cm4.h **** 
 359:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_C_Pos                         29                                             /*!< xPSR
 360:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 361:STM32F4xx_LIB/core/core_cm4.h **** 
 362:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_V_Pos                         28                                             /*!< xPSR
 363:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 364:STM32F4xx_LIB/core/core_cm4.h **** 
 365:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_Q_Pos                         27                                             /*!< xPSR
 366:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 367:STM32F4xx_LIB/core/core_cm4.h **** 
 368:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_IT_Pos                        25                                             /*!< xPSR
 369:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 370:STM32F4xx_LIB/core/core_cm4.h **** 
 371:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_T_Pos                         24                                             /*!< xPSR
 372:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 373:STM32F4xx_LIB/core/core_cm4.h **** 
 374:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_GE_Pos                        16                                             /*!< xPSR
 375:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 376:STM32F4xx_LIB/core/core_cm4.h **** 
 377:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_ISR_Pos                        0                                             /*!< xPSR
 378:STM32F4xx_LIB/core/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 379:STM32F4xx_LIB/core/core_cm4.h **** 
 380:STM32F4xx_LIB/core/core_cm4.h **** 
 381:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 382:STM32F4xx_LIB/core/core_cm4.h ****  */
 383:STM32F4xx_LIB/core/core_cm4.h **** typedef union
 384:STM32F4xx_LIB/core/core_cm4.h **** {
 385:STM32F4xx_LIB/core/core_cm4.h ****   struct
 386:STM32F4xx_LIB/core/core_cm4.h ****   {
 387:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 388:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 389:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 390:STM32F4xx_LIB/core/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 391:STM32F4xx_LIB/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 392:STM32F4xx_LIB/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 393:STM32F4xx_LIB/core/core_cm4.h **** } CONTROL_Type;
 394:STM32F4xx_LIB/core/core_cm4.h **** 
 395:STM32F4xx_LIB/core/core_cm4.h **** /* CONTROL Register Definitions */
 396:STM32F4xx_LIB/core/core_cm4.h **** #define CONTROL_FPCA_Pos                    2                                             /*!< CONT
 397:STM32F4xx_LIB/core/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 398:STM32F4xx_LIB/core/core_cm4.h **** 
 399:STM32F4xx_LIB/core/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1                                             /*!< CONT
 400:STM32F4xx_LIB/core/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 401:STM32F4xx_LIB/core/core_cm4.h **** 
 402:STM32F4xx_LIB/core/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0                                             /*!< CONT
 403:STM32F4xx_LIB/core/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 404:STM32F4xx_LIB/core/core_cm4.h **** 
 405:STM32F4xx_LIB/core/core_cm4.h **** /*@} end of group CMSIS_CORE */
 406:STM32F4xx_LIB/core/core_cm4.h **** 
 407:STM32F4xx_LIB/core/core_cm4.h **** 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 12


 408:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup    CMSIS_core_register
 409:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 410:STM32F4xx_LIB/core/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 411:STM32F4xx_LIB/core/core_cm4.h ****   @{
 412:STM32F4xx_LIB/core/core_cm4.h ****  */
 413:STM32F4xx_LIB/core/core_cm4.h **** 
 414:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 415:STM32F4xx_LIB/core/core_cm4.h ****  */
 416:STM32F4xx_LIB/core/core_cm4.h **** typedef struct
 417:STM32F4xx_LIB/core/core_cm4.h **** {
 418:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 419:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED0[24];
 420:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 421:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RSERVED1[24];
 422:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 423:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED2[24];
 424:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 425:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED3[24];
 426:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 427:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED4[56];
 428:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 429:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED5[644];
 430:STM32F4xx_LIB/core/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 431:STM32F4xx_LIB/core/core_cm4.h **** }  NVIC_Type;
 432:STM32F4xx_LIB/core/core_cm4.h **** 
 433:STM32F4xx_LIB/core/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 434:STM32F4xx_LIB/core/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 435:STM32F4xx_LIB/core/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 436:STM32F4xx_LIB/core/core_cm4.h **** 
 437:STM32F4xx_LIB/core/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 438:STM32F4xx_LIB/core/core_cm4.h **** 
 439:STM32F4xx_LIB/core/core_cm4.h **** 
 440:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup  CMSIS_core_register
 441:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 442:STM32F4xx_LIB/core/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 443:STM32F4xx_LIB/core/core_cm4.h ****   @{
 444:STM32F4xx_LIB/core/core_cm4.h ****  */
 445:STM32F4xx_LIB/core/core_cm4.h **** 
 446:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 447:STM32F4xx_LIB/core/core_cm4.h ****  */
 448:STM32F4xx_LIB/core/core_cm4.h **** typedef struct
 449:STM32F4xx_LIB/core/core_cm4.h **** {
 450:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 451:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 452:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 453:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 454:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 455:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 456:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 457:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 458:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 459:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 460:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 461:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 462:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 463:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 464:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 13


 465:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 466:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 467:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 468:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 469:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED0[5];
 470:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 471:STM32F4xx_LIB/core/core_cm4.h **** } SCB_Type;
 472:STM32F4xx_LIB/core/core_cm4.h **** 
 473:STM32F4xx_LIB/core/core_cm4.h **** /* SCB CPUID Register Definitions */
 474:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 475:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 476:STM32F4xx_LIB/core/core_cm4.h **** 
 477:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 478:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 479:STM32F4xx_LIB/core/core_cm4.h **** 
 480:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 481:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 482:STM32F4xx_LIB/core/core_cm4.h **** 
 483:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 484:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 485:STM32F4xx_LIB/core/core_cm4.h **** 
 486:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 487:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 488:STM32F4xx_LIB/core/core_cm4.h **** 
 489:STM32F4xx_LIB/core/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 490:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 491:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 492:STM32F4xx_LIB/core/core_cm4.h **** 
 493:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 494:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 495:STM32F4xx_LIB/core/core_cm4.h **** 
 496:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 497:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 498:STM32F4xx_LIB/core/core_cm4.h **** 
 499:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 500:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 501:STM32F4xx_LIB/core/core_cm4.h **** 
 502:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 503:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 504:STM32F4xx_LIB/core/core_cm4.h **** 
 505:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 506:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 507:STM32F4xx_LIB/core/core_cm4.h **** 
 508:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 509:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 510:STM32F4xx_LIB/core/core_cm4.h **** 
 511:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 512:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 513:STM32F4xx_LIB/core/core_cm4.h **** 
 514:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 515:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 516:STM32F4xx_LIB/core/core_cm4.h **** 
 517:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 518:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 519:STM32F4xx_LIB/core/core_cm4.h **** 
 520:STM32F4xx_LIB/core/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 521:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 14


 522:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 523:STM32F4xx_LIB/core/core_cm4.h **** 
 524:STM32F4xx_LIB/core/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 525:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 526:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 527:STM32F4xx_LIB/core/core_cm4.h **** 
 528:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 529:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 530:STM32F4xx_LIB/core/core_cm4.h **** 
 531:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 532:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 533:STM32F4xx_LIB/core/core_cm4.h **** 
 534:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 535:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 536:STM32F4xx_LIB/core/core_cm4.h **** 
 537:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 538:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 539:STM32F4xx_LIB/core/core_cm4.h **** 
 540:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 541:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 542:STM32F4xx_LIB/core/core_cm4.h **** 
 543:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 544:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 545:STM32F4xx_LIB/core/core_cm4.h **** 
 546:STM32F4xx_LIB/core/core_cm4.h **** /* SCB System Control Register Definitions */
 547:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 548:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 549:STM32F4xx_LIB/core/core_cm4.h **** 
 550:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 551:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 552:STM32F4xx_LIB/core/core_cm4.h **** 
 553:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 554:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 555:STM32F4xx_LIB/core/core_cm4.h **** 
 556:STM32F4xx_LIB/core/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 557:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 558:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 559:STM32F4xx_LIB/core/core_cm4.h **** 
 560:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 561:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 562:STM32F4xx_LIB/core/core_cm4.h **** 
 563:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 564:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 565:STM32F4xx_LIB/core/core_cm4.h **** 
 566:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 567:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 568:STM32F4xx_LIB/core/core_cm4.h **** 
 569:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 570:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 571:STM32F4xx_LIB/core/core_cm4.h **** 
 572:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 573:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 574:STM32F4xx_LIB/core/core_cm4.h **** 
 575:STM32F4xx_LIB/core/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 576:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 577:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 578:STM32F4xx_LIB/core/core_cm4.h **** 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 15


 579:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 580:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 581:STM32F4xx_LIB/core/core_cm4.h **** 
 582:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 583:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 584:STM32F4xx_LIB/core/core_cm4.h **** 
 585:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 586:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 587:STM32F4xx_LIB/core/core_cm4.h **** 
 588:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 589:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 590:STM32F4xx_LIB/core/core_cm4.h **** 
 591:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 592:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 593:STM32F4xx_LIB/core/core_cm4.h **** 
 594:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 595:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 596:STM32F4xx_LIB/core/core_cm4.h **** 
 597:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 598:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 599:STM32F4xx_LIB/core/core_cm4.h **** 
 600:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 601:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 602:STM32F4xx_LIB/core/core_cm4.h **** 
 603:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 604:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 605:STM32F4xx_LIB/core/core_cm4.h **** 
 606:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 607:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 608:STM32F4xx_LIB/core/core_cm4.h **** 
 609:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 610:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 611:STM32F4xx_LIB/core/core_cm4.h **** 
 612:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 613:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 614:STM32F4xx_LIB/core/core_cm4.h **** 
 615:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 616:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 617:STM32F4xx_LIB/core/core_cm4.h **** 
 618:STM32F4xx_LIB/core/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 619:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 620:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 621:STM32F4xx_LIB/core/core_cm4.h **** 
 622:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 623:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 624:STM32F4xx_LIB/core/core_cm4.h **** 
 625:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 626:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 627:STM32F4xx_LIB/core/core_cm4.h **** 
 628:STM32F4xx_LIB/core/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 629:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 630:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 631:STM32F4xx_LIB/core/core_cm4.h **** 
 632:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 633:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 634:STM32F4xx_LIB/core/core_cm4.h **** 
 635:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 16


 636:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 637:STM32F4xx_LIB/core/core_cm4.h **** 
 638:STM32F4xx_LIB/core/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 639:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 640:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 641:STM32F4xx_LIB/core/core_cm4.h **** 
 642:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 643:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 644:STM32F4xx_LIB/core/core_cm4.h **** 
 645:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 646:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 647:STM32F4xx_LIB/core/core_cm4.h **** 
 648:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 649:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 650:STM32F4xx_LIB/core/core_cm4.h **** 
 651:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 652:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 653:STM32F4xx_LIB/core/core_cm4.h **** 
 654:STM32F4xx_LIB/core/core_cm4.h **** /*@} end of group CMSIS_SCB */
 655:STM32F4xx_LIB/core/core_cm4.h **** 
 656:STM32F4xx_LIB/core/core_cm4.h **** 
 657:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup  CMSIS_core_register
 658:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 659:STM32F4xx_LIB/core/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 660:STM32F4xx_LIB/core/core_cm4.h ****   @{
 661:STM32F4xx_LIB/core/core_cm4.h ****  */
 662:STM32F4xx_LIB/core/core_cm4.h **** 
 663:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 664:STM32F4xx_LIB/core/core_cm4.h ****  */
 665:STM32F4xx_LIB/core/core_cm4.h **** typedef struct
 666:STM32F4xx_LIB/core/core_cm4.h **** {
 667:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED0[1];
 668:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 669:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 670:STM32F4xx_LIB/core/core_cm4.h **** } SCnSCB_Type;
 671:STM32F4xx_LIB/core/core_cm4.h **** 
 672:STM32F4xx_LIB/core/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 673:STM32F4xx_LIB/core/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 674:STM32F4xx_LIB/core/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 675:STM32F4xx_LIB/core/core_cm4.h **** 
 676:STM32F4xx_LIB/core/core_cm4.h **** /* Auxiliary Control Register Definitions */
 677:STM32F4xx_LIB/core/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 678:STM32F4xx_LIB/core/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 679:STM32F4xx_LIB/core/core_cm4.h **** 
 680:STM32F4xx_LIB/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 681:STM32F4xx_LIB/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 682:STM32F4xx_LIB/core/core_cm4.h **** 
 683:STM32F4xx_LIB/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 684:STM32F4xx_LIB/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 685:STM32F4xx_LIB/core/core_cm4.h **** 
 686:STM32F4xx_LIB/core/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 687:STM32F4xx_LIB/core/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 688:STM32F4xx_LIB/core/core_cm4.h **** 
 689:STM32F4xx_LIB/core/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 690:STM32F4xx_LIB/core/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 691:STM32F4xx_LIB/core/core_cm4.h **** 
 692:STM32F4xx_LIB/core/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 17


 693:STM32F4xx_LIB/core/core_cm4.h **** 
 694:STM32F4xx_LIB/core/core_cm4.h **** 
 695:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup  CMSIS_core_register
 696:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 697:STM32F4xx_LIB/core/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 698:STM32F4xx_LIB/core/core_cm4.h ****   @{
 699:STM32F4xx_LIB/core/core_cm4.h ****  */
 700:STM32F4xx_LIB/core/core_cm4.h **** 
 701:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 702:STM32F4xx_LIB/core/core_cm4.h ****  */
 703:STM32F4xx_LIB/core/core_cm4.h **** typedef struct
 704:STM32F4xx_LIB/core/core_cm4.h **** {
 705:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 706:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 707:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 708:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 709:STM32F4xx_LIB/core/core_cm4.h **** } SysTick_Type;
 710:STM32F4xx_LIB/core/core_cm4.h **** 
 711:STM32F4xx_LIB/core/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 712:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 713:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 714:STM32F4xx_LIB/core/core_cm4.h **** 
 715:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 716:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 717:STM32F4xx_LIB/core/core_cm4.h **** 
 718:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 719:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 720:STM32F4xx_LIB/core/core_cm4.h **** 
 721:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 722:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 723:STM32F4xx_LIB/core/core_cm4.h **** 
 724:STM32F4xx_LIB/core/core_cm4.h **** /* SysTick Reload Register Definitions */
 725:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 726:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 727:STM32F4xx_LIB/core/core_cm4.h **** 
 728:STM32F4xx_LIB/core/core_cm4.h **** /* SysTick Current Register Definitions */
 729:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 730:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 731:STM32F4xx_LIB/core/core_cm4.h **** 
 732:STM32F4xx_LIB/core/core_cm4.h **** /* SysTick Calibration Register Definitions */
 733:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 734:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 735:STM32F4xx_LIB/core/core_cm4.h **** 
 736:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 737:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 738:STM32F4xx_LIB/core/core_cm4.h **** 
 739:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 740:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 741:STM32F4xx_LIB/core/core_cm4.h **** 
 742:STM32F4xx_LIB/core/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 743:STM32F4xx_LIB/core/core_cm4.h **** 
 744:STM32F4xx_LIB/core/core_cm4.h **** 
 745:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup  CMSIS_core_register
 746:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 747:STM32F4xx_LIB/core/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 748:STM32F4xx_LIB/core/core_cm4.h ****   @{
 749:STM32F4xx_LIB/core/core_cm4.h ****  */
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 18


 750:STM32F4xx_LIB/core/core_cm4.h **** 
 751:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 752:STM32F4xx_LIB/core/core_cm4.h ****  */
 753:STM32F4xx_LIB/core/core_cm4.h **** typedef struct
 754:STM32F4xx_LIB/core/core_cm4.h **** {
 755:STM32F4xx_LIB/core/core_cm4.h ****   __O  union
 756:STM32F4xx_LIB/core/core_cm4.h ****   {
 757:STM32F4xx_LIB/core/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 758:STM32F4xx_LIB/core/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 759:STM32F4xx_LIB/core/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 760:STM32F4xx_LIB/core/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 761:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED0[864];
 762:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 763:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED1[15];
 764:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 765:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED2[15];
 766:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 767:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED3[29];
 768:STM32F4xx_LIB/core/core_cm4.h ****   __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register  
 769:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register   
 770:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 771:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED4[43];
 772:STM32F4xx_LIB/core/core_cm4.h ****   __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register        
 773:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register        
 774:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED5[6];
 775:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 776:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 777:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 778:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 779:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 780:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 781:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 782:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 783:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 784:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 785:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 786:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 787:STM32F4xx_LIB/core/core_cm4.h **** } ITM_Type;
 788:STM32F4xx_LIB/core/core_cm4.h **** 
 789:STM32F4xx_LIB/core/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 790:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 791:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 792:STM32F4xx_LIB/core/core_cm4.h **** 
 793:STM32F4xx_LIB/core/core_cm4.h **** /* ITM Trace Control Register Definitions */
 794:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 795:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 796:STM32F4xx_LIB/core/core_cm4.h **** 
 797:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 798:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 799:STM32F4xx_LIB/core/core_cm4.h **** 
 800:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 801:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 802:STM32F4xx_LIB/core/core_cm4.h **** 
 803:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 804:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 805:STM32F4xx_LIB/core/core_cm4.h **** 
 806:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 19


 807:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 808:STM32F4xx_LIB/core/core_cm4.h **** 
 809:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 810:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 811:STM32F4xx_LIB/core/core_cm4.h **** 
 812:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 813:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 814:STM32F4xx_LIB/core/core_cm4.h **** 
 815:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 816:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 817:STM32F4xx_LIB/core/core_cm4.h **** 
 818:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 819:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 820:STM32F4xx_LIB/core/core_cm4.h **** 
 821:STM32F4xx_LIB/core/core_cm4.h **** /* ITM Integration Write Register Definitions */
 822:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 823:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 824:STM32F4xx_LIB/core/core_cm4.h **** 
 825:STM32F4xx_LIB/core/core_cm4.h **** /* ITM Integration Read Register Definitions */
 826:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 827:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 828:STM32F4xx_LIB/core/core_cm4.h **** 
 829:STM32F4xx_LIB/core/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 830:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 831:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 832:STM32F4xx_LIB/core/core_cm4.h **** 
 833:STM32F4xx_LIB/core/core_cm4.h **** /* ITM Lock Status Register Definitions */
 834:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 835:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 836:STM32F4xx_LIB/core/core_cm4.h **** 
 837:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 838:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 839:STM32F4xx_LIB/core/core_cm4.h **** 
 840:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 841:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 842:STM32F4xx_LIB/core/core_cm4.h **** 
 843:STM32F4xx_LIB/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 844:STM32F4xx_LIB/core/core_cm4.h **** 
 845:STM32F4xx_LIB/core/core_cm4.h **** 
 846:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup  CMSIS_core_register
 847:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 848:STM32F4xx_LIB/core/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 849:STM32F4xx_LIB/core/core_cm4.h ****   @{
 850:STM32F4xx_LIB/core/core_cm4.h ****  */
 851:STM32F4xx_LIB/core/core_cm4.h **** 
 852:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 853:STM32F4xx_LIB/core/core_cm4.h ****  */
 854:STM32F4xx_LIB/core/core_cm4.h **** typedef struct
 855:STM32F4xx_LIB/core/core_cm4.h **** {
 856:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 857:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 858:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 859:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 860:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 861:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 862:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 863:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 20


 864:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 865:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 866:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 867:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED0[1];
 868:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 869:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 870:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 871:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED1[1];
 872:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 873:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 874:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 875:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED2[1];
 876:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 877:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 878:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 879:STM32F4xx_LIB/core/core_cm4.h **** } DWT_Type;
 880:STM32F4xx_LIB/core/core_cm4.h **** 
 881:STM32F4xx_LIB/core/core_cm4.h **** /* DWT Control Register Definitions */
 882:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 883:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 884:STM32F4xx_LIB/core/core_cm4.h **** 
 885:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 886:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 887:STM32F4xx_LIB/core/core_cm4.h **** 
 888:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 889:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 890:STM32F4xx_LIB/core/core_cm4.h **** 
 891:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 892:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 893:STM32F4xx_LIB/core/core_cm4.h **** 
 894:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 895:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 896:STM32F4xx_LIB/core/core_cm4.h **** 
 897:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 898:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 899:STM32F4xx_LIB/core/core_cm4.h **** 
 900:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 901:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 902:STM32F4xx_LIB/core/core_cm4.h **** 
 903:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 904:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 905:STM32F4xx_LIB/core/core_cm4.h **** 
 906:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 907:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 908:STM32F4xx_LIB/core/core_cm4.h **** 
 909:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 910:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 911:STM32F4xx_LIB/core/core_cm4.h **** 
 912:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 913:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 914:STM32F4xx_LIB/core/core_cm4.h **** 
 915:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 916:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 917:STM32F4xx_LIB/core/core_cm4.h **** 
 918:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 919:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 920:STM32F4xx_LIB/core/core_cm4.h **** 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 21


 921:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 922:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 923:STM32F4xx_LIB/core/core_cm4.h **** 
 924:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 925:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 926:STM32F4xx_LIB/core/core_cm4.h **** 
 927:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 928:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 929:STM32F4xx_LIB/core/core_cm4.h **** 
 930:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 931:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 932:STM32F4xx_LIB/core/core_cm4.h **** 
 933:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 934:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 935:STM32F4xx_LIB/core/core_cm4.h **** 
 936:STM32F4xx_LIB/core/core_cm4.h **** /* DWT CPI Count Register Definitions */
 937:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 938:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 939:STM32F4xx_LIB/core/core_cm4.h **** 
 940:STM32F4xx_LIB/core/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 941:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 942:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 943:STM32F4xx_LIB/core/core_cm4.h **** 
 944:STM32F4xx_LIB/core/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 945:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 946:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 947:STM32F4xx_LIB/core/core_cm4.h **** 
 948:STM32F4xx_LIB/core/core_cm4.h **** /* DWT LSU Count Register Definitions */
 949:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 950:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 951:STM32F4xx_LIB/core/core_cm4.h **** 
 952:STM32F4xx_LIB/core/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 953:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 954:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 955:STM32F4xx_LIB/core/core_cm4.h **** 
 956:STM32F4xx_LIB/core/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 957:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 958:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 959:STM32F4xx_LIB/core/core_cm4.h **** 
 960:STM32F4xx_LIB/core/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 961:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 962:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 963:STM32F4xx_LIB/core/core_cm4.h **** 
 964:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 965:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 966:STM32F4xx_LIB/core/core_cm4.h **** 
 967:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 968:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 969:STM32F4xx_LIB/core/core_cm4.h **** 
 970:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 971:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 972:STM32F4xx_LIB/core/core_cm4.h **** 
 973:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 974:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 975:STM32F4xx_LIB/core/core_cm4.h **** 
 976:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 977:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 22


 978:STM32F4xx_LIB/core/core_cm4.h **** 
 979:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 980:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 981:STM32F4xx_LIB/core/core_cm4.h **** 
 982:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 983:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 984:STM32F4xx_LIB/core/core_cm4.h **** 
 985:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 986:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 987:STM32F4xx_LIB/core/core_cm4.h **** 
 988:STM32F4xx_LIB/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 989:STM32F4xx_LIB/core/core_cm4.h **** 
 990:STM32F4xx_LIB/core/core_cm4.h **** 
 991:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup  CMSIS_core_register
 992:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 993:STM32F4xx_LIB/core/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 994:STM32F4xx_LIB/core/core_cm4.h ****   @{
 995:STM32F4xx_LIB/core/core_cm4.h ****  */
 996:STM32F4xx_LIB/core/core_cm4.h **** 
 997:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 998:STM32F4xx_LIB/core/core_cm4.h ****  */
 999:STM32F4xx_LIB/core/core_cm4.h **** typedef struct
1000:STM32F4xx_LIB/core/core_cm4.h **** {
1001:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1002:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1003:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED0[2];
1004:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1005:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED1[55];
1006:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1007:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED2[131];
1008:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1009:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1010:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1011:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED3[759];
1012:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1013:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1014:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1015:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED4[1];
1016:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1017:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1018:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1019:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED5[39];
1020:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1021:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1022:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED7[8];
1023:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1024:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1025:STM32F4xx_LIB/core/core_cm4.h **** } TPI_Type;
1026:STM32F4xx_LIB/core/core_cm4.h **** 
1027:STM32F4xx_LIB/core/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1028:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
1029:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1030:STM32F4xx_LIB/core/core_cm4.h **** 
1031:STM32F4xx_LIB/core/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1032:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
1033:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1034:STM32F4xx_LIB/core/core_cm4.h **** 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 23


1035:STM32F4xx_LIB/core/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1036:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
1037:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1038:STM32F4xx_LIB/core/core_cm4.h **** 
1039:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
1040:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1041:STM32F4xx_LIB/core/core_cm4.h **** 
1042:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
1043:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1044:STM32F4xx_LIB/core/core_cm4.h **** 
1045:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
1046:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1047:STM32F4xx_LIB/core/core_cm4.h **** 
1048:STM32F4xx_LIB/core/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1049:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
1050:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1051:STM32F4xx_LIB/core/core_cm4.h **** 
1052:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
1053:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1054:STM32F4xx_LIB/core/core_cm4.h **** 
1055:STM32F4xx_LIB/core/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1056:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
1057:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1058:STM32F4xx_LIB/core/core_cm4.h **** 
1059:STM32F4xx_LIB/core/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1060:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1061:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1062:STM32F4xx_LIB/core/core_cm4.h **** 
1063:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1064:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1065:STM32F4xx_LIB/core/core_cm4.h **** 
1066:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1067:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1068:STM32F4xx_LIB/core/core_cm4.h **** 
1069:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1070:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1071:STM32F4xx_LIB/core/core_cm4.h **** 
1072:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
1073:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1074:STM32F4xx_LIB/core/core_cm4.h **** 
1075:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
1076:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1077:STM32F4xx_LIB/core/core_cm4.h **** 
1078:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
1079:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1080:STM32F4xx_LIB/core/core_cm4.h **** 
1081:STM32F4xx_LIB/core/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1082:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1083:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1084:STM32F4xx_LIB/core/core_cm4.h **** 
1085:STM32F4xx_LIB/core/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1086:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1087:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1088:STM32F4xx_LIB/core/core_cm4.h **** 
1089:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1090:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1091:STM32F4xx_LIB/core/core_cm4.h **** 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 24


1092:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1093:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1094:STM32F4xx_LIB/core/core_cm4.h **** 
1095:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1096:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1097:STM32F4xx_LIB/core/core_cm4.h **** 
1098:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1099:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1100:STM32F4xx_LIB/core/core_cm4.h **** 
1101:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1102:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1103:STM32F4xx_LIB/core/core_cm4.h **** 
1104:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1105:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1106:STM32F4xx_LIB/core/core_cm4.h **** 
1107:STM32F4xx_LIB/core/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1108:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1109:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1110:STM32F4xx_LIB/core/core_cm4.h **** 
1111:STM32F4xx_LIB/core/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1112:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1113:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1114:STM32F4xx_LIB/core/core_cm4.h **** 
1115:STM32F4xx_LIB/core/core_cm4.h **** /* TPI DEVID Register Definitions */
1116:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1117:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1118:STM32F4xx_LIB/core/core_cm4.h **** 
1119:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1120:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1121:STM32F4xx_LIB/core/core_cm4.h **** 
1122:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1123:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1124:STM32F4xx_LIB/core/core_cm4.h **** 
1125:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1126:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1127:STM32F4xx_LIB/core/core_cm4.h **** 
1128:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1129:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1130:STM32F4xx_LIB/core/core_cm4.h **** 
1131:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1132:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1133:STM32F4xx_LIB/core/core_cm4.h **** 
1134:STM32F4xx_LIB/core/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1135:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1136:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1137:STM32F4xx_LIB/core/core_cm4.h **** 
1138:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1139:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1140:STM32F4xx_LIB/core/core_cm4.h **** 
1141:STM32F4xx_LIB/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1142:STM32F4xx_LIB/core/core_cm4.h **** 
1143:STM32F4xx_LIB/core/core_cm4.h **** 
1144:STM32F4xx_LIB/core/core_cm4.h **** #if (__MPU_PRESENT == 1)
1145:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup  CMSIS_core_register
1146:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1147:STM32F4xx_LIB/core/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1148:STM32F4xx_LIB/core/core_cm4.h ****   @{
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 25


1149:STM32F4xx_LIB/core/core_cm4.h ****  */
1150:STM32F4xx_LIB/core/core_cm4.h **** 
1151:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1152:STM32F4xx_LIB/core/core_cm4.h ****  */
1153:STM32F4xx_LIB/core/core_cm4.h **** typedef struct
1154:STM32F4xx_LIB/core/core_cm4.h **** {
1155:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1156:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1157:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1158:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1159:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1160:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1161:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1162:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1163:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1164:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1165:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1166:STM32F4xx_LIB/core/core_cm4.h **** } MPU_Type;
1167:STM32F4xx_LIB/core/core_cm4.h **** 
1168:STM32F4xx_LIB/core/core_cm4.h **** /* MPU Type Register */
1169:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1170:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1171:STM32F4xx_LIB/core/core_cm4.h **** 
1172:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1173:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1174:STM32F4xx_LIB/core/core_cm4.h **** 
1175:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1176:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1177:STM32F4xx_LIB/core/core_cm4.h **** 
1178:STM32F4xx_LIB/core/core_cm4.h **** /* MPU Control Register */
1179:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1180:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1181:STM32F4xx_LIB/core/core_cm4.h **** 
1182:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1183:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1184:STM32F4xx_LIB/core/core_cm4.h **** 
1185:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1186:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1187:STM32F4xx_LIB/core/core_cm4.h **** 
1188:STM32F4xx_LIB/core/core_cm4.h **** /* MPU Region Number Register */
1189:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1190:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1191:STM32F4xx_LIB/core/core_cm4.h **** 
1192:STM32F4xx_LIB/core/core_cm4.h **** /* MPU Region Base Address Register */
1193:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1194:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1195:STM32F4xx_LIB/core/core_cm4.h **** 
1196:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1197:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1198:STM32F4xx_LIB/core/core_cm4.h **** 
1199:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1200:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1201:STM32F4xx_LIB/core/core_cm4.h **** 
1202:STM32F4xx_LIB/core/core_cm4.h **** /* MPU Region Attribute and Size Register */
1203:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1204:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1205:STM32F4xx_LIB/core/core_cm4.h **** 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 26


1206:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1207:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1208:STM32F4xx_LIB/core/core_cm4.h **** 
1209:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1210:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1211:STM32F4xx_LIB/core/core_cm4.h **** 
1212:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1213:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1214:STM32F4xx_LIB/core/core_cm4.h **** 
1215:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1216:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1217:STM32F4xx_LIB/core/core_cm4.h **** 
1218:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1219:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1220:STM32F4xx_LIB/core/core_cm4.h **** 
1221:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1222:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1223:STM32F4xx_LIB/core/core_cm4.h **** 
1224:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1225:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1226:STM32F4xx_LIB/core/core_cm4.h **** 
1227:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1228:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1229:STM32F4xx_LIB/core/core_cm4.h **** 
1230:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1231:STM32F4xx_LIB/core/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1232:STM32F4xx_LIB/core/core_cm4.h **** 
1233:STM32F4xx_LIB/core/core_cm4.h **** /*@} end of group CMSIS_MPU */
1234:STM32F4xx_LIB/core/core_cm4.h **** #endif
1235:STM32F4xx_LIB/core/core_cm4.h **** 
1236:STM32F4xx_LIB/core/core_cm4.h **** 
1237:STM32F4xx_LIB/core/core_cm4.h **** #if (__FPU_PRESENT == 1)
1238:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup  CMSIS_core_register
1239:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1240:STM32F4xx_LIB/core/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1241:STM32F4xx_LIB/core/core_cm4.h ****   @{
1242:STM32F4xx_LIB/core/core_cm4.h ****  */
1243:STM32F4xx_LIB/core/core_cm4.h **** 
1244:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1245:STM32F4xx_LIB/core/core_cm4.h ****  */
1246:STM32F4xx_LIB/core/core_cm4.h **** typedef struct
1247:STM32F4xx_LIB/core/core_cm4.h **** {
1248:STM32F4xx_LIB/core/core_cm4.h ****        uint32_t RESERVED0[1];
1249:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1250:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1251:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1252:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1253:STM32F4xx_LIB/core/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1254:STM32F4xx_LIB/core/core_cm4.h **** } FPU_Type;
1255:STM32F4xx_LIB/core/core_cm4.h **** 
1256:STM32F4xx_LIB/core/core_cm4.h **** /* Floating-Point Context Control Register */
1257:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1258:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1259:STM32F4xx_LIB/core/core_cm4.h **** 
1260:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1261:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1262:STM32F4xx_LIB/core/core_cm4.h **** 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 27


1263:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1264:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1265:STM32F4xx_LIB/core/core_cm4.h **** 
1266:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1267:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1268:STM32F4xx_LIB/core/core_cm4.h **** 
1269:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1270:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1271:STM32F4xx_LIB/core/core_cm4.h **** 
1272:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1273:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1274:STM32F4xx_LIB/core/core_cm4.h **** 
1275:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1276:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1277:STM32F4xx_LIB/core/core_cm4.h **** 
1278:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1279:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1280:STM32F4xx_LIB/core/core_cm4.h **** 
1281:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1282:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1283:STM32F4xx_LIB/core/core_cm4.h **** 
1284:STM32F4xx_LIB/core/core_cm4.h **** /* Floating-Point Context Address Register */
1285:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1286:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1287:STM32F4xx_LIB/core/core_cm4.h **** 
1288:STM32F4xx_LIB/core/core_cm4.h **** /* Floating-Point Default Status Control Register */
1289:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1290:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1291:STM32F4xx_LIB/core/core_cm4.h **** 
1292:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1293:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1294:STM32F4xx_LIB/core/core_cm4.h **** 
1295:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1296:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1297:STM32F4xx_LIB/core/core_cm4.h **** 
1298:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1299:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1300:STM32F4xx_LIB/core/core_cm4.h **** 
1301:STM32F4xx_LIB/core/core_cm4.h **** /* Media and FP Feature Register 0 */
1302:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1303:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1304:STM32F4xx_LIB/core/core_cm4.h **** 
1305:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1306:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1307:STM32F4xx_LIB/core/core_cm4.h **** 
1308:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1309:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1310:STM32F4xx_LIB/core/core_cm4.h **** 
1311:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1312:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1313:STM32F4xx_LIB/core/core_cm4.h **** 
1314:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1315:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1316:STM32F4xx_LIB/core/core_cm4.h **** 
1317:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1318:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1319:STM32F4xx_LIB/core/core_cm4.h **** 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 28


1320:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1321:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1322:STM32F4xx_LIB/core/core_cm4.h **** 
1323:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1324:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1325:STM32F4xx_LIB/core/core_cm4.h **** 
1326:STM32F4xx_LIB/core/core_cm4.h **** /* Media and FP Feature Register 1 */
1327:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1328:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1329:STM32F4xx_LIB/core/core_cm4.h **** 
1330:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1331:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1332:STM32F4xx_LIB/core/core_cm4.h **** 
1333:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1334:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1335:STM32F4xx_LIB/core/core_cm4.h **** 
1336:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1337:STM32F4xx_LIB/core/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1338:STM32F4xx_LIB/core/core_cm4.h **** 
1339:STM32F4xx_LIB/core/core_cm4.h **** /*@} end of group CMSIS_FPU */
1340:STM32F4xx_LIB/core/core_cm4.h **** #endif
1341:STM32F4xx_LIB/core/core_cm4.h **** 
1342:STM32F4xx_LIB/core/core_cm4.h **** 
1343:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup  CMSIS_core_register
1344:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1345:STM32F4xx_LIB/core/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1346:STM32F4xx_LIB/core/core_cm4.h ****   @{
1347:STM32F4xx_LIB/core/core_cm4.h ****  */
1348:STM32F4xx_LIB/core/core_cm4.h **** 
1349:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1350:STM32F4xx_LIB/core/core_cm4.h ****  */
1351:STM32F4xx_LIB/core/core_cm4.h **** typedef struct
1352:STM32F4xx_LIB/core/core_cm4.h **** {
1353:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1354:STM32F4xx_LIB/core/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1355:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1356:STM32F4xx_LIB/core/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1357:STM32F4xx_LIB/core/core_cm4.h **** } CoreDebug_Type;
1358:STM32F4xx_LIB/core/core_cm4.h **** 
1359:STM32F4xx_LIB/core/core_cm4.h **** /* Debug Halting Control and Status Register */
1360:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1361:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1362:STM32F4xx_LIB/core/core_cm4.h **** 
1363:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1364:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1365:STM32F4xx_LIB/core/core_cm4.h **** 
1366:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1367:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1368:STM32F4xx_LIB/core/core_cm4.h **** 
1369:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1370:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1371:STM32F4xx_LIB/core/core_cm4.h **** 
1372:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1373:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1374:STM32F4xx_LIB/core/core_cm4.h **** 
1375:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1376:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 29


1377:STM32F4xx_LIB/core/core_cm4.h **** 
1378:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1379:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1380:STM32F4xx_LIB/core/core_cm4.h **** 
1381:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1382:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1383:STM32F4xx_LIB/core/core_cm4.h **** 
1384:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1385:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1386:STM32F4xx_LIB/core/core_cm4.h **** 
1387:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1388:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1389:STM32F4xx_LIB/core/core_cm4.h **** 
1390:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1391:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1392:STM32F4xx_LIB/core/core_cm4.h **** 
1393:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1394:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1395:STM32F4xx_LIB/core/core_cm4.h **** 
1396:STM32F4xx_LIB/core/core_cm4.h **** /* Debug Core Register Selector Register */
1397:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1398:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1399:STM32F4xx_LIB/core/core_cm4.h **** 
1400:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1401:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1402:STM32F4xx_LIB/core/core_cm4.h **** 
1403:STM32F4xx_LIB/core/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1404:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1405:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1406:STM32F4xx_LIB/core/core_cm4.h **** 
1407:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1408:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1409:STM32F4xx_LIB/core/core_cm4.h **** 
1410:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1411:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1412:STM32F4xx_LIB/core/core_cm4.h **** 
1413:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1414:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1415:STM32F4xx_LIB/core/core_cm4.h **** 
1416:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1417:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1418:STM32F4xx_LIB/core/core_cm4.h **** 
1419:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1420:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1421:STM32F4xx_LIB/core/core_cm4.h **** 
1422:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1423:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1424:STM32F4xx_LIB/core/core_cm4.h **** 
1425:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1426:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1427:STM32F4xx_LIB/core/core_cm4.h **** 
1428:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1429:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1430:STM32F4xx_LIB/core/core_cm4.h **** 
1431:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1432:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1433:STM32F4xx_LIB/core/core_cm4.h **** 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 30


1434:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1435:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1436:STM32F4xx_LIB/core/core_cm4.h **** 
1437:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1438:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1439:STM32F4xx_LIB/core/core_cm4.h **** 
1440:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1441:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1442:STM32F4xx_LIB/core/core_cm4.h **** 
1443:STM32F4xx_LIB/core/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1444:STM32F4xx_LIB/core/core_cm4.h **** 
1445:STM32F4xx_LIB/core/core_cm4.h **** 
1446:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup    CMSIS_core_register
1447:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1448:STM32F4xx_LIB/core/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1449:STM32F4xx_LIB/core/core_cm4.h ****   @{
1450:STM32F4xx_LIB/core/core_cm4.h ****  */
1451:STM32F4xx_LIB/core/core_cm4.h **** 
1452:STM32F4xx_LIB/core/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1453:STM32F4xx_LIB/core/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1454:STM32F4xx_LIB/core/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1455:STM32F4xx_LIB/core/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1456:STM32F4xx_LIB/core/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1457:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1458:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1459:STM32F4xx_LIB/core/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1460:STM32F4xx_LIB/core/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1461:STM32F4xx_LIB/core/core_cm4.h **** 
1462:STM32F4xx_LIB/core/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1463:STM32F4xx_LIB/core/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1464:STM32F4xx_LIB/core/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1465:STM32F4xx_LIB/core/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1466:STM32F4xx_LIB/core/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1467:STM32F4xx_LIB/core/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1468:STM32F4xx_LIB/core/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1469:STM32F4xx_LIB/core/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1470:STM32F4xx_LIB/core/core_cm4.h **** 
1471:STM32F4xx_LIB/core/core_cm4.h **** #if (__MPU_PRESENT == 1)
1472:STM32F4xx_LIB/core/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1473:STM32F4xx_LIB/core/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1474:STM32F4xx_LIB/core/core_cm4.h **** #endif
1475:STM32F4xx_LIB/core/core_cm4.h **** 
1476:STM32F4xx_LIB/core/core_cm4.h **** #if (__FPU_PRESENT == 1)
1477:STM32F4xx_LIB/core/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1478:STM32F4xx_LIB/core/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1479:STM32F4xx_LIB/core/core_cm4.h **** #endif
1480:STM32F4xx_LIB/core/core_cm4.h **** 
1481:STM32F4xx_LIB/core/core_cm4.h **** /*@} */
1482:STM32F4xx_LIB/core/core_cm4.h **** 
1483:STM32F4xx_LIB/core/core_cm4.h **** 
1484:STM32F4xx_LIB/core/core_cm4.h **** 
1485:STM32F4xx_LIB/core/core_cm4.h **** /*******************************************************************************
1486:STM32F4xx_LIB/core/core_cm4.h ****  *                Hardware Abstraction Layer
1487:STM32F4xx_LIB/core/core_cm4.h ****   Core Function Interface contains:
1488:STM32F4xx_LIB/core/core_cm4.h ****   - Core NVIC Functions
1489:STM32F4xx_LIB/core/core_cm4.h ****   - Core SysTick Functions
1490:STM32F4xx_LIB/core/core_cm4.h ****   - Core Debug Functions
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 31


1491:STM32F4xx_LIB/core/core_cm4.h ****   - Core Register Access Functions
1492:STM32F4xx_LIB/core/core_cm4.h ****  ******************************************************************************/
1493:STM32F4xx_LIB/core/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1494:STM32F4xx_LIB/core/core_cm4.h **** */
1495:STM32F4xx_LIB/core/core_cm4.h **** 
1496:STM32F4xx_LIB/core/core_cm4.h **** 
1497:STM32F4xx_LIB/core/core_cm4.h **** 
1498:STM32F4xx_LIB/core/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1499:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1500:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1501:STM32F4xx_LIB/core/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1502:STM32F4xx_LIB/core/core_cm4.h ****     @{
1503:STM32F4xx_LIB/core/core_cm4.h ****  */
1504:STM32F4xx_LIB/core/core_cm4.h **** 
1505:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Set Priority Grouping
1506:STM32F4xx_LIB/core/core_cm4.h **** 
1507:STM32F4xx_LIB/core/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1508:STM32F4xx_LIB/core/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1509:STM32F4xx_LIB/core/core_cm4.h ****   Only values from 0..7 are used.
1510:STM32F4xx_LIB/core/core_cm4.h ****   In case of a conflict between priority grouping and available
1511:STM32F4xx_LIB/core/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1512:STM32F4xx_LIB/core/core_cm4.h **** 
1513:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1514:STM32F4xx_LIB/core/core_cm4.h ****  */
1515:STM32F4xx_LIB/core/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1516:STM32F4xx_LIB/core/core_cm4.h **** {
1517:STM32F4xx_LIB/core/core_cm4.h ****   uint32_t reg_value;
1518:STM32F4xx_LIB/core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1519:STM32F4xx_LIB/core/core_cm4.h **** 
1520:STM32F4xx_LIB/core/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1521:STM32F4xx_LIB/core/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk));             /* clear 
1522:STM32F4xx_LIB/core/core_cm4.h ****   reg_value  =  (reg_value                                   |
1523:STM32F4xx_LIB/core/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1524:STM32F4xx_LIB/core/core_cm4.h ****                 (PriorityGroupTmp << 8)                       );              /* Insert write key a
1525:STM32F4xx_LIB/core/core_cm4.h ****   SCB->AIRCR =  reg_value;
1526:STM32F4xx_LIB/core/core_cm4.h **** }
1527:STM32F4xx_LIB/core/core_cm4.h **** 
1528:STM32F4xx_LIB/core/core_cm4.h **** 
1529:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Get Priority Grouping
1530:STM32F4xx_LIB/core/core_cm4.h **** 
1531:STM32F4xx_LIB/core/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1532:STM32F4xx_LIB/core/core_cm4.h **** 
1533:STM32F4xx_LIB/core/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1534:STM32F4xx_LIB/core/core_cm4.h ****  */
1535:STM32F4xx_LIB/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1536:STM32F4xx_LIB/core/core_cm4.h **** {
1537:STM32F4xx_LIB/core/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1538:STM32F4xx_LIB/core/core_cm4.h **** }
1539:STM32F4xx_LIB/core/core_cm4.h **** 
1540:STM32F4xx_LIB/core/core_cm4.h **** 
1541:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Enable External Interrupt
1542:STM32F4xx_LIB/core/core_cm4.h **** 
1543:STM32F4xx_LIB/core/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1544:STM32F4xx_LIB/core/core_cm4.h **** 
1545:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1546:STM32F4xx_LIB/core/core_cm4.h ****  */
1547:STM32F4xx_LIB/core/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 32


1548:STM32F4xx_LIB/core/core_cm4.h **** {
1549:STM32F4xx_LIB/core/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1550:STM32F4xx_LIB/core/core_cm4.h **** }
1551:STM32F4xx_LIB/core/core_cm4.h **** 
1552:STM32F4xx_LIB/core/core_cm4.h **** 
1553:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Disable External Interrupt
1554:STM32F4xx_LIB/core/core_cm4.h **** 
1555:STM32F4xx_LIB/core/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1556:STM32F4xx_LIB/core/core_cm4.h **** 
1557:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1558:STM32F4xx_LIB/core/core_cm4.h ****  */
1559:STM32F4xx_LIB/core/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1560:STM32F4xx_LIB/core/core_cm4.h **** {
1561:STM32F4xx_LIB/core/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1562:STM32F4xx_LIB/core/core_cm4.h **** }
1563:STM32F4xx_LIB/core/core_cm4.h **** 
1564:STM32F4xx_LIB/core/core_cm4.h **** 
1565:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Get Pending Interrupt
1566:STM32F4xx_LIB/core/core_cm4.h **** 
1567:STM32F4xx_LIB/core/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1568:STM32F4xx_LIB/core/core_cm4.h ****     for the specified interrupt.
1569:STM32F4xx_LIB/core/core_cm4.h **** 
1570:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1571:STM32F4xx_LIB/core/core_cm4.h **** 
1572:STM32F4xx_LIB/core/core_cm4.h ****     \return             0  Interrupt status is not pending.
1573:STM32F4xx_LIB/core/core_cm4.h ****     \return             1  Interrupt status is pending.
1574:STM32F4xx_LIB/core/core_cm4.h ****  */
1575:STM32F4xx_LIB/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1576:STM32F4xx_LIB/core/core_cm4.h **** {
1577:STM32F4xx_LIB/core/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1578:STM32F4xx_LIB/core/core_cm4.h **** }
1579:STM32F4xx_LIB/core/core_cm4.h **** 
1580:STM32F4xx_LIB/core/core_cm4.h **** 
1581:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Set Pending Interrupt
1582:STM32F4xx_LIB/core/core_cm4.h **** 
1583:STM32F4xx_LIB/core/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1584:STM32F4xx_LIB/core/core_cm4.h **** 
1585:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1586:STM32F4xx_LIB/core/core_cm4.h ****  */
1587:STM32F4xx_LIB/core/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1588:STM32F4xx_LIB/core/core_cm4.h **** {
1589:STM32F4xx_LIB/core/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1590:STM32F4xx_LIB/core/core_cm4.h **** }
1591:STM32F4xx_LIB/core/core_cm4.h **** 
1592:STM32F4xx_LIB/core/core_cm4.h **** 
1593:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Clear Pending Interrupt
1594:STM32F4xx_LIB/core/core_cm4.h **** 
1595:STM32F4xx_LIB/core/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1596:STM32F4xx_LIB/core/core_cm4.h **** 
1597:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1598:STM32F4xx_LIB/core/core_cm4.h ****  */
1599:STM32F4xx_LIB/core/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1600:STM32F4xx_LIB/core/core_cm4.h **** {
1601:STM32F4xx_LIB/core/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1602:STM32F4xx_LIB/core/core_cm4.h **** }
1603:STM32F4xx_LIB/core/core_cm4.h **** 
1604:STM32F4xx_LIB/core/core_cm4.h **** 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 33


1605:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Get Active Interrupt
1606:STM32F4xx_LIB/core/core_cm4.h **** 
1607:STM32F4xx_LIB/core/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1608:STM32F4xx_LIB/core/core_cm4.h **** 
1609:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1610:STM32F4xx_LIB/core/core_cm4.h **** 
1611:STM32F4xx_LIB/core/core_cm4.h ****     \return             0  Interrupt status is not active.
1612:STM32F4xx_LIB/core/core_cm4.h ****     \return             1  Interrupt status is active.
1613:STM32F4xx_LIB/core/core_cm4.h ****  */
1614:STM32F4xx_LIB/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1615:STM32F4xx_LIB/core/core_cm4.h **** {
1616:STM32F4xx_LIB/core/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1617:STM32F4xx_LIB/core/core_cm4.h **** }
1618:STM32F4xx_LIB/core/core_cm4.h **** 
1619:STM32F4xx_LIB/core/core_cm4.h **** 
1620:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Set Interrupt Priority
1621:STM32F4xx_LIB/core/core_cm4.h **** 
1622:STM32F4xx_LIB/core/core_cm4.h ****     The function sets the priority of an interrupt.
1623:STM32F4xx_LIB/core/core_cm4.h **** 
1624:STM32F4xx_LIB/core/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1625:STM32F4xx_LIB/core/core_cm4.h **** 
1626:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1627:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]  priority  Priority to set.
1628:STM32F4xx_LIB/core/core_cm4.h ****  */
1629:STM32F4xx_LIB/core/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1630:STM32F4xx_LIB/core/core_cm4.h **** {
1631:STM32F4xx_LIB/core/core_cm4.h ****   if((int32_t)IRQn < 0) {
1632:STM32F4xx_LIB/core/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8 - __NVIC_PRIO_BIT
1633:STM32F4xx_LIB/core/core_cm4.h ****   }
1634:STM32F4xx_LIB/core/core_cm4.h ****   else {
1635:STM32F4xx_LIB/core/core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8 - __NVIC_PRIO_BIT
1636:STM32F4xx_LIB/core/core_cm4.h ****   }
1637:STM32F4xx_LIB/core/core_cm4.h **** }
1638:STM32F4xx_LIB/core/core_cm4.h **** 
1639:STM32F4xx_LIB/core/core_cm4.h **** 
1640:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Get Interrupt Priority
1641:STM32F4xx_LIB/core/core_cm4.h **** 
1642:STM32F4xx_LIB/core/core_cm4.h ****     The function reads the priority of an interrupt. The interrupt
1643:STM32F4xx_LIB/core/core_cm4.h ****     number can be positive to specify an external (device specific)
1644:STM32F4xx_LIB/core/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1645:STM32F4xx_LIB/core/core_cm4.h **** 
1646:STM32F4xx_LIB/core/core_cm4.h **** 
1647:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]   IRQn  Interrupt number.
1648:STM32F4xx_LIB/core/core_cm4.h ****     \return             Interrupt Priority. Value is aligned automatically to the implemented
1649:STM32F4xx_LIB/core/core_cm4.h ****                         priority bits of the microcontroller.
1650:STM32F4xx_LIB/core/core_cm4.h ****  */
1651:STM32F4xx_LIB/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1652:STM32F4xx_LIB/core/core_cm4.h **** {
1653:STM32F4xx_LIB/core/core_cm4.h **** 
1654:STM32F4xx_LIB/core/core_cm4.h ****   if((int32_t)IRQn < 0) {
1655:STM32F4xx_LIB/core/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8 - __NVIC_PRIO_BITS)))
1656:STM32F4xx_LIB/core/core_cm4.h ****   }
1657:STM32F4xx_LIB/core/core_cm4.h ****   else {
1658:STM32F4xx_LIB/core/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8 - __NVIC_PRIO_BITS)))
1659:STM32F4xx_LIB/core/core_cm4.h ****   }
1660:STM32F4xx_LIB/core/core_cm4.h **** }
1661:STM32F4xx_LIB/core/core_cm4.h **** 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 34


1662:STM32F4xx_LIB/core/core_cm4.h **** 
1663:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Encode Priority
1664:STM32F4xx_LIB/core/core_cm4.h **** 
1665:STM32F4xx_LIB/core/core_cm4.h ****     The function encodes the priority for an interrupt with the given priority group,
1666:STM32F4xx_LIB/core/core_cm4.h ****     preemptive priority value, and subpriority value.
1667:STM32F4xx_LIB/core/core_cm4.h ****     In case of a conflict between priority grouping and available
1668:STM32F4xx_LIB/core/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1669:STM32F4xx_LIB/core/core_cm4.h **** 
1670:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1671:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1672:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
1673:STM32F4xx_LIB/core/core_cm4.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
1674:STM32F4xx_LIB/core/core_cm4.h ****  */
1675:STM32F4xx_LIB/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1676:STM32F4xx_LIB/core/core_cm4.h **** {
1677:STM32F4xx_LIB/core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1678:STM32F4xx_LIB/core/core_cm4.h ****   uint32_t PreemptPriorityBits;
1679:STM32F4xx_LIB/core/core_cm4.h ****   uint32_t SubPriorityBits;
1680:STM32F4xx_LIB/core/core_cm4.h **** 
1681:STM32F4xx_LIB/core/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1682:STM32F4xx_LIB/core/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1683:STM32F4xx_LIB/core/core_cm4.h **** 
1684:STM32F4xx_LIB/core/core_cm4.h ****   return (
1685:STM32F4xx_LIB/core/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1686:STM32F4xx_LIB/core/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1687:STM32F4xx_LIB/core/core_cm4.h ****          );
1688:STM32F4xx_LIB/core/core_cm4.h **** }
1689:STM32F4xx_LIB/core/core_cm4.h **** 
1690:STM32F4xx_LIB/core/core_cm4.h **** 
1691:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  Decode Priority
1692:STM32F4xx_LIB/core/core_cm4.h **** 
1693:STM32F4xx_LIB/core/core_cm4.h ****     The function decodes an interrupt priority value with a given priority group to
1694:STM32F4xx_LIB/core/core_cm4.h ****     preemptive priority value and subpriority value.
1695:STM32F4xx_LIB/core/core_cm4.h ****     In case of a conflict between priority grouping and available
1696:STM32F4xx_LIB/core/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1697:STM32F4xx_LIB/core/core_cm4.h **** 
1698:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]         Priority   Priority value, which can be retrieved with the function \ref NV
1699:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1700:STM32F4xx_LIB/core/core_cm4.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1701:STM32F4xx_LIB/core/core_cm4.h ****     \param [out]     pSubPriority  Subpriority value (starting from 0).
1702:STM32F4xx_LIB/core/core_cm4.h ****  */
1703:STM32F4xx_LIB/core/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1704:STM32F4xx_LIB/core/core_cm4.h **** {
1705:STM32F4xx_LIB/core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1706:STM32F4xx_LIB/core/core_cm4.h ****   uint32_t PreemptPriorityBits;
1707:STM32F4xx_LIB/core/core_cm4.h ****   uint32_t SubPriorityBits;
1708:STM32F4xx_LIB/core/core_cm4.h **** 
1709:STM32F4xx_LIB/core/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1710:STM32F4xx_LIB/core/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1711:STM32F4xx_LIB/core/core_cm4.h **** 
1712:STM32F4xx_LIB/core/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1713:STM32F4xx_LIB/core/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1714:STM32F4xx_LIB/core/core_cm4.h **** }
1715:STM32F4xx_LIB/core/core_cm4.h **** 
1716:STM32F4xx_LIB/core/core_cm4.h **** 
1717:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  System Reset
1718:STM32F4xx_LIB/core/core_cm4.h **** 
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 35


1719:STM32F4xx_LIB/core/core_cm4.h ****     The function initiates a system reset request to reset the MCU.
1720:STM32F4xx_LIB/core/core_cm4.h ****  */
1721:STM32F4xx_LIB/core/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1722:STM32F4xx_LIB/core/core_cm4.h **** {
1723:STM32F4xx_LIB/core/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1724:STM32F4xx_LIB/core/core_cm4.h ****                                                                        buffered write are completed
1725:STM32F4xx_LIB/core/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1726:STM32F4xx_LIB/core/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1727:STM32F4xx_LIB/core/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1728:STM32F4xx_LIB/core/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1729:STM32F4xx_LIB/core/core_cm4.h ****   while(1) { __NOP(); }                                             /* wait until reset */
1730:STM32F4xx_LIB/core/core_cm4.h **** }
1731:STM32F4xx_LIB/core/core_cm4.h **** 
1732:STM32F4xx_LIB/core/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1733:STM32F4xx_LIB/core/core_cm4.h **** 
1734:STM32F4xx_LIB/core/core_cm4.h **** 
1735:STM32F4xx_LIB/core/core_cm4.h **** 
1736:STM32F4xx_LIB/core/core_cm4.h **** /* ##################################    SysTick function  ########################################
1737:STM32F4xx_LIB/core/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1738:STM32F4xx_LIB/core/core_cm4.h ****     \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1739:STM32F4xx_LIB/core/core_cm4.h ****     \brief      Functions that configure the System.
1740:STM32F4xx_LIB/core/core_cm4.h ****   @{
1741:STM32F4xx_LIB/core/core_cm4.h ****  */
1742:STM32F4xx_LIB/core/core_cm4.h **** 
1743:STM32F4xx_LIB/core/core_cm4.h **** #if (__Vendor_SysTickConfig == 0)
1744:STM32F4xx_LIB/core/core_cm4.h **** 
1745:STM32F4xx_LIB/core/core_cm4.h **** /** \brief  System Tick Configuration
1746:STM32F4xx_LIB/core/core_cm4.h **** 
1747:STM32F4xx_LIB/core/core_cm4.h ****     The function initializes the System Timer and its interrupt, and starts the System Tick Timer.
1748:STM32F4xx_LIB/core/core_cm4.h ****     Counter is in free running mode to generate periodic interrupts.
1749:STM32F4xx_LIB/core/core_cm4.h **** 
1750:STM32F4xx_LIB/core/core_cm4.h ****     \param [in]  ticks  Number of ticks between two interrupts.
1751:STM32F4xx_LIB/core/core_cm4.h **** 
1752:STM32F4xx_LIB/core/core_cm4.h ****     \return          0  Function succeeded.
1753:STM32F4xx_LIB/core/core_cm4.h ****     \return          1  Function failed.
1754:STM32F4xx_LIB/core/core_cm4.h **** 
1755:STM32F4xx_LIB/core/core_cm4.h ****     \note     When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1756:STM32F4xx_LIB/core/core_cm4.h ****     function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
1757:STM32F4xx_LIB/core/core_cm4.h ****     must contain a vendor-specific implementation of this function.
1758:STM32F4xx_LIB/core/core_cm4.h **** 
1759:STM32F4xx_LIB/core/core_cm4.h ****  */
1760:STM32F4xx_LIB/core/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 107              		.loc 2 1760 26 is_stmt 1 view .LVU16
 108              	.LBB9:
1761:STM32F4xx_LIB/core/core_cm4.h **** {
1762:STM32F4xx_LIB/core/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk) { return (1UL); }    /* Reload value impossible */
 109              		.loc 2 1762 3 view .LVU17
 110              		.loc 2 1762 14 is_stmt 0 view .LVU18
 111 0016 013B     		subs	r3, r3, #1
 112              	.LVL3:
 113              		.loc 2 1762 6 view .LVU19
 114 0018 B3F1807F 		cmp	r3, #16777216
 115 001c 09D2     		bcs	.L7
1763:STM32F4xx_LIB/core/core_cm4.h **** 
1764:STM32F4xx_LIB/core/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 116              		.loc 2 1764 3 is_stmt 1 view .LVU20
 117              		.loc 2 1764 18 is_stmt 0 view .LVU21
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 36


 118 001e 234A     		ldr	r2, .L10+8
 119 0020 5360     		str	r3, [r2, #4]
1765:STM32F4xx_LIB/core/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 120              		.loc 2 1765 3 is_stmt 1 view .LVU22
 121              	.LVL4:
 122              	.LBB10:
 123              	.LBI10:
1629:STM32F4xx_LIB/core/core_cm4.h **** {
 124              		.loc 2 1629 22 view .LVU23
 125              	.LBB11:
1631:STM32F4xx_LIB/core/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8 - __NVIC_PRIO_BIT
 126              		.loc 2 1631 3 view .LVU24
1632:STM32F4xx_LIB/core/core_cm4.h ****   }
 127              		.loc 2 1632 5 view .LVU25
1632:STM32F4xx_LIB/core/core_cm4.h ****   }
 128              		.loc 2 1632 55 is_stmt 0 view .LVU26
 129 0022 234B     		ldr	r3, .L10+12
 130              	.LVL5:
1632:STM32F4xx_LIB/core/core_cm4.h ****   }
 131              		.loc 2 1632 55 view .LVU27
 132 0024 F021     		movs	r1, #240
 133 0026 83F82310 		strb	r1, [r3, #35]
 134              	.LVL6:
1632:STM32F4xx_LIB/core/core_cm4.h ****   }
 135              		.loc 2 1632 55 view .LVU28
 136              	.LBE11:
 137              	.LBE10:
1766:STM32F4xx_LIB/core/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 138              		.loc 2 1766 3 is_stmt 1 view .LVU29
 139              		.loc 2 1766 18 is_stmt 0 view .LVU30
 140 002a 0023     		movs	r3, #0
 141 002c 9360     		str	r3, [r2, #8]
1767:STM32F4xx_LIB/core/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 142              		.loc 2 1767 3 is_stmt 1 view .LVU31
 143              		.loc 2 1767 18 is_stmt 0 view .LVU32
 144 002e 0723     		movs	r3, #7
 145 0030 1360     		str	r3, [r2]
1768:STM32F4xx_LIB/core/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
1769:STM32F4xx_LIB/core/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
1770:STM32F4xx_LIB/core/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 146              		.loc 2 1770 3 is_stmt 1 view .LVU33
 147              	.L7:
 148              	.LVL7:
 149              		.loc 2 1770 3 is_stmt 0 view .LVU34
 150              	.LBE9:
 151              	.LBE8:
  61:User/main.c   ****   
 152              		.loc 1 61 3 is_stmt 1 view .LVU35
 153 0032 0520     		movs	r0, #5
 154 0034 FFF7FEFF 		bl	Delay
 155              	.LVL8:
  65:User/main.c   ****   
 156              		.loc 1 65 3 view .LVU36
 157 0038 0121     		movs	r1, #1
 158 003a 0846     		mov	r0, r1
 159 003c FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 160              	.LVL9:
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 37


  68:User/main.c   ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 161              		.loc 1 68 3 view .LVU37
  68:User/main.c   ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 162              		.loc 1 68 31 is_stmt 0 view .LVU38
 163 0040 4FF48073 		mov	r3, #256
 164 0044 0093     		str	r3, [sp]
  69:User/main.c   ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 165              		.loc 1 69 3 is_stmt 1 view .LVU39
  69:User/main.c   ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 166              		.loc 1 69 33 is_stmt 0 view .LVU40
 167 0046 0327     		movs	r7, #3
 168 0048 8DF80570 		strb	r7, [sp, #5]
  70:User/main.c   ****   GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 169              		.loc 1 70 3 is_stmt 1 view .LVU41
  70:User/main.c   ****   GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 170              		.loc 1 70 32 is_stmt 0 view .LVU42
 171 004c 0226     		movs	r6, #2
 172 004e 8DF80460 		strb	r6, [sp, #4]
  71:User/main.c   ****   GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;  
 173              		.loc 1 71 3 is_stmt 1 view .LVU43
  71:User/main.c   ****   GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;  
 174              		.loc 1 71 33 is_stmt 0 view .LVU44
 175 0052 0024     		movs	r4, #0
 176 0054 8DF80640 		strb	r4, [sp, #6]
  72:User/main.c   ****   GPIO_Init(GPIOA, &GPIO_InitStructure);
 177              		.loc 1 72 3 is_stmt 1 view .LVU45
  72:User/main.c   ****   GPIO_Init(GPIOA, &GPIO_InitStructure);
 178              		.loc 1 72 32 is_stmt 0 view .LVU46
 179 0058 0125     		movs	r5, #1
 180 005a 8DF80750 		strb	r5, [sp, #7]
  73:User/main.c   ****     
 181              		.loc 1 73 3 is_stmt 1 view .LVU47
 182 005e 6946     		mov	r1, sp
 183 0060 1448     		ldr	r0, .L10+16
 184 0062 FFF7FEFF 		bl	GPIO_Init
 185              	.LVL10:
  76:User/main.c   ****   
 186              		.loc 1 76 3 view .LVU48
 187 0066 2146     		mov	r1, r4
 188 0068 4FF48000 		mov	r0, #4194304
 189 006c FFF7FEFF 		bl	RCC_MCO1Config
 190              	.LVL11:
  81:User/main.c   ****   
 191              		.loc 1 81 3 view .LVU49
 192 0070 2946     		mov	r1, r5
 193 0072 0420     		movs	r0, #4
 194 0074 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 195              	.LVL12:
  84:User/main.c   ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 196              		.loc 1 84 3 view .LVU50
  84:User/main.c   ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 197              		.loc 1 84 31 is_stmt 0 view .LVU51
 198 0078 4FF40073 		mov	r3, #512
 199 007c 0093     		str	r3, [sp]
  85:User/main.c   ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 200              		.loc 1 85 3 is_stmt 1 view .LVU52
  85:User/main.c   ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 38


 201              		.loc 1 85 33 is_stmt 0 view .LVU53
 202 007e 8DF80570 		strb	r7, [sp, #5]
  86:User/main.c   ****   GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 203              		.loc 1 86 3 is_stmt 1 view .LVU54
  86:User/main.c   ****   GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 204              		.loc 1 86 32 is_stmt 0 view .LVU55
 205 0082 8DF80460 		strb	r6, [sp, #4]
  87:User/main.c   ****   GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;  
 206              		.loc 1 87 3 is_stmt 1 view .LVU56
  87:User/main.c   ****   GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;  
 207              		.loc 1 87 33 is_stmt 0 view .LVU57
 208 0086 8DF80640 		strb	r4, [sp, #6]
  88:User/main.c   ****   GPIO_Init(GPIOC, &GPIO_InitStructure);
 209              		.loc 1 88 3 is_stmt 1 view .LVU58
  88:User/main.c   ****   GPIO_Init(GPIOC, &GPIO_InitStructure);
 210              		.loc 1 88 32 is_stmt 0 view .LVU59
 211 008a 8DF80750 		strb	r5, [sp, #7]
  89:User/main.c   ****     
 212              		.loc 1 89 3 is_stmt 1 view .LVU60
 213 008e 6946     		mov	r1, sp
 214 0090 0948     		ldr	r0, .L10+20
 215 0092 FFF7FEFF 		bl	GPIO_Init
 216              	.LVL13:
  92:User/main.c   ****   
 217              		.loc 1 92 3 view .LVU61
 218 0096 4FF04051 		mov	r1, #805306368
 219 009a 2046     		mov	r0, r4
 220 009c FFF7FEFF 		bl	RCC_MCO2Config
 221              	.LVL14:
 222              	.L8:
  96:User/main.c   ****   {
 223              		.loc 1 96 3 discriminator 1 view .LVU62
  98:User/main.c   **** }
 224              		.loc 1 98 3 discriminator 1 view .LVU63
  96:User/main.c   ****   {
 225              		.loc 1 96 9 discriminator 1 view .LVU64
 226 00a0 FEE7     		b	.L8
 227              	.L11:
 228 00a2 00BF     		.align	2
 229              	.L10:
 230 00a4 00000000 		.word	RCC_Clocks
 231 00a8 1F85EB51 		.word	1374389535
 232 00ac 10E000E0 		.word	-536813552
 233 00b0 00ED00E0 		.word	-536810240
 234 00b4 00000240 		.word	1073872896
 235 00b8 00080240 		.word	1073874944
 236              		.cfi_endproc
 237              	.LFE123:
 239              		.section	.text.TimingDelay_Decrement,"ax",%progbits
 240              		.align	1
 241              		.global	TimingDelay_Decrement
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 245              		.fpu fpv4-sp-d16
 247              	TimingDelay_Decrement:
 248              	.LFB125:
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 39


 112:User/main.c   **** 
 113:User/main.c   **** /**
 114:User/main.c   ****   * @brief  Decrements the TimingDelay variable.
 115:User/main.c   ****   * @param  None
 116:User/main.c   ****   * @retval None
 117:User/main.c   ****   */
 118:User/main.c   **** void TimingDelay_Decrement(void)
 119:User/main.c   **** {
 249              		.loc 1 119 1 view -0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 120:User/main.c   ****   if (uwTimingDelay != 0x00)
 254              		.loc 1 120 3 view .LVU66
 255              		.loc 1 120 21 is_stmt 0 view .LVU67
 256 0000 034B     		ldr	r3, .L14
 257 0002 1B68     		ldr	r3, [r3]
 258              		.loc 1 120 6 view .LVU68
 259 0004 1BB1     		cbz	r3, .L12
 121:User/main.c   ****   { 
 122:User/main.c   ****     uwTimingDelay--;
 260              		.loc 1 122 5 is_stmt 1 view .LVU69
 261              		.loc 1 122 18 is_stmt 0 view .LVU70
 262 0006 024A     		ldr	r2, .L14
 263 0008 1368     		ldr	r3, [r2]
 264 000a 013B     		subs	r3, r3, #1
 265 000c 1360     		str	r3, [r2]
 266              	.L12:
 123:User/main.c   ****   }
 124:User/main.c   **** }
 267              		.loc 1 124 1 view .LVU71
 268 000e 7047     		bx	lr
 269              	.L15:
 270              		.align	2
 271              	.L14:
 272 0010 00000000 		.word	.LANCHOR0
 273              		.cfi_endproc
 274              	.LFE125:
 276              		.comm	RCC_Clocks,16,4
 277              		.section	.bss.uwTimingDelay,"aw",%nobits
 278              		.align	2
 279              		.set	.LANCHOR0,. + 0
 282              	uwTimingDelay:
 283 0000 00000000 		.space	4
 284              		.text
 285              	.Letext0:
 286              		.file 3 "User/stm32f4xx.h"
 287              		.file 4 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\machine\\_default_types.h"
 288              		.file 5 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 289              		.file 6 "User/system_stm32f4xx.h"
 290              		.file 7 "STM32F4xx_LIB/periph/inc/stm32f4xx_gpio.h"
 291              		.file 8 "STM32F4xx_LIB/periph/inc/stm32f4xx_rcc.h"
ARM GAS  C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s 			page 40


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s:18     .text.Delay:00000000 $t
C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s:25     .text.Delay:00000000 Delay
C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s:63     .text.Delay:00000018 $d
C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s:68     .text.main:00000000 $t
C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s:75     .text.main:00000000 main
C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s:230    .text.main:000000a4 $d
                            *COM*:00000010 RCC_Clocks
C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s:240    .text.TimingDelay_Decrement:00000000 $t
C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s:247    .text.TimingDelay_Decrement:00000000 TimingDelay_Decrement
C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s:272    .text.TimingDelay_Decrement:00000010 $d
C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s:278    .bss.uwTimingDelay:00000000 $d
C:\Users\京垓\AppData\Local\Temp\ccxSQBXe.s:282    .bss.uwTimingDelay:00000000 uwTimingDelay

UNDEFINED SYMBOLS
RCC_GetClocksFreq
RCC_AHB1PeriphClockCmd
GPIO_Init
RCC_MCO1Config
RCC_MCO2Config
