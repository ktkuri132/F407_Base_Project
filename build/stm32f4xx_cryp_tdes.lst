ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_cryp_tdes.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CRYP_TDES_ECB,"ax",%progbits
  18              		.align	1
  19              		.global	CRYP_TDES_ECB
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	CRYP_TDES_ECB:
  27              	.LVL0:
  28              	.LFB123:
  29              		.file 1 "STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c"
   1:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** /**
   2:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   ******************************************************************************
   3:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @file    stm32f4xx_cryp_tdes.c
   4:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @author  MCD Application Team
   5:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @version V1.8.1
   6:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @date    27-January-2022
   7:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @brief   This file provides high level functions to encrypt and decrypt an 
   8:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *          input message using TDES in ECB/CBC modes .
   9:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *          It uses the stm32f4xx_cryp.c/.h drivers to access the STM32F4xx CRYP
  10:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *          peripheral.
  11:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *
  12:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** @verbatim
  13:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
  14:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****  ===============================================================================
  15:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****                            ##### How to use this driver #####
  16:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****  ===============================================================================
  17:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****  [..]
  18:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****    (#) Enable The CRYP controller clock using 
  19:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****        RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  20:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   
  21:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****    (#) Encrypt and decrypt using TDES in ECB Mode using CRYP_TDES_ECB() function.
  22:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   
  23:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****    (#) Encrypt and decrypt using TDES in CBC Mode using CRYP_TDES_CBC() function.
  24:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   
  25:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** @endverbatim
  26:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *
  27:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   ******************************************************************************
  28:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @attention
  29:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 2


  30:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * Copyright (c) 2016 STMicroelectronics.
  31:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * All rights reserved.
  32:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *
  33:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * This software is licensed under terms that can be found in the LICENSE file
  34:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * in the root directory of this software component.
  35:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  36:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *
  37:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   ******************************************************************************
  38:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   */
  39:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
  40:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** /* Includes ------------------------------------------------------------------*/
  41:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** #include "stm32f4xx_cryp.h"
  42:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
  43:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
  44:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  45:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @{
  46:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   */
  47:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
  48:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** /** @defgroup CRYP 
  49:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @brief CRYP driver modules
  50:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @{
  51:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   */
  52:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
  53:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** /* Private typedef -----------------------------------------------------------*/
  54:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** /* Private define ------------------------------------------------------------*/
  55:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** #define TDESBUSY_TIMEOUT    ((uint32_t) 0x00010000)
  56:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
  57:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** /* Private macro -------------------------------------------------------------*/
  58:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** /* Private variables ---------------------------------------------------------*/
  59:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** /* Private function prototypes -----------------------------------------------*/
  60:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** /* Private functions ---------------------------------------------------------*/
  61:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
  62:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
  63:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** /** @defgroup CRYP_Private_Functions
  64:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @{
  65:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   */ 
  66:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
  67:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** /** @defgroup CRYP_Group7 High Level TDES functions
  68:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****  *  @brief   High Level TDES functions 
  69:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****  *
  70:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** @verbatim   
  71:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****  ===============================================================================
  72:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****                       ##### High Level TDES functions #####
  73:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****  ===============================================================================
  74:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
  75:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** @endverbatim
  76:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @{
  77:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   */
  78:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
  79:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** /**
  80:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @brief  Encrypt and decrypt using TDES in ECB Mode
  81:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @param  Mode: encryption or decryption Mode.
  82:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *           This parameter can be one of the following values:
  83:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *            @arg MODE_ENCRYPT: Encryption
  84:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *            @arg MODE_DECRYPT: Decryption
  85:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @param  Key: Key used for TDES algorithm.
  86:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 8.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 3


  87:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @param  Input: pointer to the Input buffer.
  88:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @param  Output: pointer to the returned buffer.
  89:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @retval An ErrorStatus enumeration value:
  90:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *          - SUCCESS: Operation done
  91:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *          - ERROR: Operation failed
  92:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   */
  93:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** ErrorStatus CRYP_TDES_ECB(uint8_t Mode, uint8_t Key[24], uint8_t *Input, 
  94:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****                           uint32_t Ilength, uint8_t *Output)
  95:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** {
  30              		.loc 1 95 1 view -0
  31              		.cfi_startproc
  32              		@ args = 4, pretend = 0, frame = 56
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 95 1 is_stmt 0 view .LVU1
  35 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 24
  38              		.cfi_offset 4, -24
  39              		.cfi_offset 5, -20
  40              		.cfi_offset 6, -16
  41              		.cfi_offset 7, -12
  42              		.cfi_offset 8, -8
  43              		.cfi_offset 14, -4
  44 0004 8EB0     		sub	sp, sp, #56
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 80
  47 0006 0646     		mov	r6, r0
  48 0008 0D46     		mov	r5, r1
  49 000a 1F46     		mov	r7, r3
  96:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_InitTypeDef TDES_CRYP_InitStructure;
  50              		.loc 1 96 3 is_stmt 1 view .LVU2
  97:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_KeyInitTypeDef TDES_CRYP_KeyInitStructure;
  51              		.loc 1 97 3 view .LVU3
  98:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   __IO uint32_t counter = 0;
  52              		.loc 1 98 3 view .LVU4
  53              		.loc 1 98 17 is_stmt 0 view .LVU5
  54 000c 0023     		movs	r3, #0
  55              	.LVL1:
  56              		.loc 1 98 17 view .LVU6
  57 000e 0193     		str	r3, [sp, #4]
  99:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   uint32_t busystatus = 0;
  58              		.loc 1 99 3 is_stmt 1 view .LVU7
  59              	.LVL2:
 100:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   ErrorStatus status = SUCCESS;
  60              		.loc 1 100 3 view .LVU8
 101:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   uint32_t keyaddr    = (uint32_t)Key;
  61              		.loc 1 101 3 view .LVU9
 102:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   uint32_t inputaddr  = (uint32_t)Input;
  62              		.loc 1 102 3 view .LVU10
  63              		.loc 1 102 12 is_stmt 0 view .LVU11
  64 0010 1446     		mov	r4, r2
  65              	.LVL3:
 103:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   uint32_t outputaddr = (uint32_t)Output;
  66              		.loc 1 103 3 is_stmt 1 view .LVU12
  67              		.loc 1 103 12 is_stmt 0 view .LVU13
  68 0012 DDF85080 		ldr	r8, [sp, #80]
  69              	.LVL4:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 4


 104:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   uint32_t i = 0;
  70              		.loc 1 104 3 is_stmt 1 view .LVU14
 105:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
 106:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   /* Crypto structures initialisation*/
 107:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_KeyStructInit(&TDES_CRYP_KeyInitStructure);
  71              		.loc 1 107 3 view .LVU15
  72 0016 02A8     		add	r0, sp, #8
  73              	.LVL5:
  74              		.loc 1 107 3 is_stmt 0 view .LVU16
  75 0018 FFF7FEFF 		bl	CRYP_KeyStructInit
  76              	.LVL6:
 108:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
 109:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   /* Crypto Init for Encryption process */
 110:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   if(Mode == MODE_ENCRYPT) /* TDES encryption */
  77              		.loc 1 110 3 is_stmt 1 view .LVU17
  78              		.loc 1 110 5 is_stmt 0 view .LVU18
  79 001c 012E     		cmp	r6, #1
  80 001e 29D0     		beq	.L13
 111:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   {
 112:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****      TDES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 113:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   }
 114:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   else /*if(Mode == MODE_DECRYPT)*/ /* TDES decryption */
 115:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   {
 116:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****      TDES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
  81              		.loc 1 116 6 is_stmt 1 view .LVU19
  82              		.loc 1 116 43 is_stmt 0 view .LVU20
  83 0020 0423     		movs	r3, #4
  84 0022 0A93     		str	r3, [sp, #40]
  85              	.L3:
 117:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   }
 118:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
 119:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_TDES_ECB;
  86              		.loc 1 119 3 is_stmt 1 view .LVU21
  87              		.loc 1 119 41 is_stmt 0 view .LVU22
  88 0024 0023     		movs	r3, #0
  89 0026 0B93     		str	r3, [sp, #44]
 120:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
  90              		.loc 1 120 3 is_stmt 1 view .LVU23
  91              		.loc 1 120 41 is_stmt 0 view .LVU24
  92 0028 8023     		movs	r3, #128
  93 002a 0C93     		str	r3, [sp, #48]
 121:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_Init(&TDES_CRYP_InitStructure);
  94              		.loc 1 121 3 is_stmt 1 view .LVU25
  95 002c 0AA8     		add	r0, sp, #40
  96 002e FFF7FEFF 		bl	CRYP_Init
  97              	.LVL7:
 122:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
 123:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   /* Key Initialisation */
 124:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
  98              		.loc 1 124 3 view .LVU26
  99              		.loc 1 124 46 is_stmt 0 view .LVU27
 100 0032 2B68     		ldr	r3, [r5]
 101              	.LVL8:
 102              	.LBB30:
 103              	.LBI30:
 104              		.file 2 "STM32F4xx_LIB/core/core_cmInstr.h"
   1:STM32F4xx_LIB/core/core_cmInstr.h **** /**************************************************************************//**
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 5


   2:STM32F4xx_LIB/core/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:STM32F4xx_LIB/core/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:STM32F4xx_LIB/core/core_cmInstr.h ****  * @version  V4.10
   5:STM32F4xx_LIB/core/core_cmInstr.h ****  * @date     18. March 2015
   6:STM32F4xx_LIB/core/core_cmInstr.h ****  *
   7:STM32F4xx_LIB/core/core_cmInstr.h ****  * @note
   8:STM32F4xx_LIB/core/core_cmInstr.h ****  *
   9:STM32F4xx_LIB/core/core_cmInstr.h ****  ******************************************************************************/
  10:STM32F4xx_LIB/core/core_cmInstr.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:STM32F4xx_LIB/core/core_cmInstr.h **** 
  12:STM32F4xx_LIB/core/core_cmInstr.h ****    All rights reserved.
  13:STM32F4xx_LIB/core/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:STM32F4xx_LIB/core/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:STM32F4xx_LIB/core/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:STM32F4xx_LIB/core/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:STM32F4xx_LIB/core/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:STM32F4xx_LIB/core/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:STM32F4xx_LIB/core/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:STM32F4xx_LIB/core/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:STM32F4xx_LIB/core/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:STM32F4xx_LIB/core/core_cmInstr.h ****      specific prior written permission.
  23:STM32F4xx_LIB/core/core_cmInstr.h ****    *
  24:STM32F4xx_LIB/core/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:STM32F4xx_LIB/core/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:STM32F4xx_LIB/core/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:STM32F4xx_LIB/core/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:STM32F4xx_LIB/core/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:STM32F4xx_LIB/core/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:STM32F4xx_LIB/core/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:STM32F4xx_LIB/core/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:STM32F4xx_LIB/core/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:STM32F4xx_LIB/core/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:STM32F4xx_LIB/core/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:STM32F4xx_LIB/core/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:STM32F4xx_LIB/core/core_cmInstr.h **** 
  37:STM32F4xx_LIB/core/core_cmInstr.h **** 
  38:STM32F4xx_LIB/core/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:STM32F4xx_LIB/core/core_cmInstr.h **** 
  41:STM32F4xx_LIB/core/core_cmInstr.h **** 
  42:STM32F4xx_LIB/core/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:STM32F4xx_LIB/core/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:STM32F4xx_LIB/core/core_cmInstr.h ****   Access to dedicated instructions
  45:STM32F4xx_LIB/core/core_cmInstr.h ****   @{
  46:STM32F4xx_LIB/core/core_cmInstr.h **** */
  47:STM32F4xx_LIB/core/core_cmInstr.h **** 
  48:STM32F4xx_LIB/core/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:STM32F4xx_LIB/core/core_cmInstr.h **** /* ARM armcc specific functions */
  50:STM32F4xx_LIB/core/core_cmInstr.h **** 
  51:STM32F4xx_LIB/core/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:STM32F4xx_LIB/core/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
  54:STM32F4xx_LIB/core/core_cmInstr.h **** 
  55:STM32F4xx_LIB/core/core_cmInstr.h **** 
  56:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  No Operation
  57:STM32F4xx_LIB/core/core_cmInstr.h **** 
  58:STM32F4xx_LIB/core/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 6


  59:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  60:STM32F4xx_LIB/core/core_cmInstr.h **** #define __NOP                             __nop
  61:STM32F4xx_LIB/core/core_cmInstr.h **** 
  62:STM32F4xx_LIB/core/core_cmInstr.h **** 
  63:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:STM32F4xx_LIB/core/core_cmInstr.h **** 
  65:STM32F4xx_LIB/core/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:STM32F4xx_LIB/core/core_cmInstr.h ****     until one of a number of events occurs.
  67:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  68:STM32F4xx_LIB/core/core_cmInstr.h **** #define __WFI                             __wfi
  69:STM32F4xx_LIB/core/core_cmInstr.h **** 
  70:STM32F4xx_LIB/core/core_cmInstr.h **** 
  71:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Wait For Event
  72:STM32F4xx_LIB/core/core_cmInstr.h **** 
  73:STM32F4xx_LIB/core/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:STM32F4xx_LIB/core/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  76:STM32F4xx_LIB/core/core_cmInstr.h **** #define __WFE                             __wfe
  77:STM32F4xx_LIB/core/core_cmInstr.h **** 
  78:STM32F4xx_LIB/core/core_cmInstr.h **** 
  79:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Send Event
  80:STM32F4xx_LIB/core/core_cmInstr.h **** 
  81:STM32F4xx_LIB/core/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  83:STM32F4xx_LIB/core/core_cmInstr.h **** #define __SEV                             __sev
  84:STM32F4xx_LIB/core/core_cmInstr.h **** 
  85:STM32F4xx_LIB/core/core_cmInstr.h **** 
  86:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:STM32F4xx_LIB/core/core_cmInstr.h **** 
  88:STM32F4xx_LIB/core/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:STM32F4xx_LIB/core/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:STM32F4xx_LIB/core/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:STM32F4xx_LIB/core/core_cmInstr.h ****  */
  92:STM32F4xx_LIB/core/core_cmInstr.h **** #define __ISB() do {\
  93:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
  94:STM32F4xx_LIB/core/core_cmInstr.h ****                    __isb(0xF);\
  95:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
  96:STM32F4xx_LIB/core/core_cmInstr.h ****                 } while (0)
  97:STM32F4xx_LIB/core/core_cmInstr.h **** 
  98:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  99:STM32F4xx_LIB/core/core_cmInstr.h **** 
 100:STM32F4xx_LIB/core/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 101:STM32F4xx_LIB/core/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 102:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 103:STM32F4xx_LIB/core/core_cmInstr.h **** #define __DSB() do {\
 104:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
 105:STM32F4xx_LIB/core/core_cmInstr.h ****                    __dsb(0xF);\
 106:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
 107:STM32F4xx_LIB/core/core_cmInstr.h ****                 } while (0)
 108:STM32F4xx_LIB/core/core_cmInstr.h **** 
 109:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Data Memory Barrier
 110:STM32F4xx_LIB/core/core_cmInstr.h **** 
 111:STM32F4xx_LIB/core/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 112:STM32F4xx_LIB/core/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 113:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 114:STM32F4xx_LIB/core/core_cmInstr.h **** #define __DMB() do {\
 115:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 7


 116:STM32F4xx_LIB/core/core_cmInstr.h ****                    __dmb(0xF);\
 117:STM32F4xx_LIB/core/core_cmInstr.h ****                    __schedule_barrier();\
 118:STM32F4xx_LIB/core/core_cmInstr.h ****                 } while (0)
 119:STM32F4xx_LIB/core/core_cmInstr.h **** 
 120:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 121:STM32F4xx_LIB/core/core_cmInstr.h **** 
 122:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the byte order in integer value.
 123:STM32F4xx_LIB/core/core_cmInstr.h **** 
 124:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 125:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 126:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 127:STM32F4xx_LIB/core/core_cmInstr.h **** #define __REV                             __rev
 128:STM32F4xx_LIB/core/core_cmInstr.h **** 
 129:STM32F4xx_LIB/core/core_cmInstr.h **** 
 130:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 131:STM32F4xx_LIB/core/core_cmInstr.h **** 
 132:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 133:STM32F4xx_LIB/core/core_cmInstr.h **** 
 134:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 135:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 136:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 137:STM32F4xx_LIB/core/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 138:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 139:STM32F4xx_LIB/core/core_cmInstr.h **** {
 140:STM32F4xx_LIB/core/core_cmInstr.h ****   rev16 r0, r0
 141:STM32F4xx_LIB/core/core_cmInstr.h ****   bx lr
 142:STM32F4xx_LIB/core/core_cmInstr.h **** }
 143:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 144:STM32F4xx_LIB/core/core_cmInstr.h **** 
 145:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 146:STM32F4xx_LIB/core/core_cmInstr.h **** 
 147:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 148:STM32F4xx_LIB/core/core_cmInstr.h **** 
 149:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 150:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 151:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 152:STM32F4xx_LIB/core/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 153:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 154:STM32F4xx_LIB/core/core_cmInstr.h **** {
 155:STM32F4xx_LIB/core/core_cmInstr.h ****   revsh r0, r0
 156:STM32F4xx_LIB/core/core_cmInstr.h ****   bx lr
 157:STM32F4xx_LIB/core/core_cmInstr.h **** }
 158:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 159:STM32F4xx_LIB/core/core_cmInstr.h **** 
 160:STM32F4xx_LIB/core/core_cmInstr.h **** 
 161:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 162:STM32F4xx_LIB/core/core_cmInstr.h **** 
 163:STM32F4xx_LIB/core/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 164:STM32F4xx_LIB/core/core_cmInstr.h **** 
 165:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to rotate
 166:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 167:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Rotated value
 168:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 169:STM32F4xx_LIB/core/core_cmInstr.h **** #define __ROR                             __ror
 170:STM32F4xx_LIB/core/core_cmInstr.h **** 
 171:STM32F4xx_LIB/core/core_cmInstr.h **** 
 172:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Breakpoint
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 8


 173:STM32F4xx_LIB/core/core_cmInstr.h **** 
 174:STM32F4xx_LIB/core/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 175:STM32F4xx_LIB/core/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 176:STM32F4xx_LIB/core/core_cmInstr.h **** 
 177:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 178:STM32F4xx_LIB/core/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 179:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 180:STM32F4xx_LIB/core/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 181:STM32F4xx_LIB/core/core_cmInstr.h **** 
 182:STM32F4xx_LIB/core/core_cmInstr.h **** 
 183:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse bit order of value
 184:STM32F4xx_LIB/core/core_cmInstr.h **** 
 185:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the bit order of the given value.
 186:STM32F4xx_LIB/core/core_cmInstr.h **** 
 187:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 188:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 189:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 190:STM32F4xx_LIB/core/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 191:STM32F4xx_LIB/core/core_cmInstr.h ****   #define __RBIT                          __rbit
 192:STM32F4xx_LIB/core/core_cmInstr.h **** #else
 193:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 194:STM32F4xx_LIB/core/core_cmInstr.h **** {
 195:STM32F4xx_LIB/core/core_cmInstr.h ****   uint32_t result;
 196:STM32F4xx_LIB/core/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 197:STM32F4xx_LIB/core/core_cmInstr.h **** 
 198:STM32F4xx_LIB/core/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
 199:STM32F4xx_LIB/core/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 200:STM32F4xx_LIB/core/core_cmInstr.h ****   {
 201:STM32F4xx_LIB/core/core_cmInstr.h ****     result <<= 1;
 202:STM32F4xx_LIB/core/core_cmInstr.h ****     result |= value & 1;
 203:STM32F4xx_LIB/core/core_cmInstr.h ****     s--;
 204:STM32F4xx_LIB/core/core_cmInstr.h ****   }
 205:STM32F4xx_LIB/core/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 206:STM32F4xx_LIB/core/core_cmInstr.h ****   return(result);
 207:STM32F4xx_LIB/core/core_cmInstr.h **** }
 208:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 209:STM32F4xx_LIB/core/core_cmInstr.h **** 
 210:STM32F4xx_LIB/core/core_cmInstr.h **** 
 211:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Count leading zeros
 212:STM32F4xx_LIB/core/core_cmInstr.h **** 
 213:STM32F4xx_LIB/core/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 214:STM32F4xx_LIB/core/core_cmInstr.h **** 
 215:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 216:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             number of leading zeros in value
 217:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 218:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CLZ                             __clz
 219:STM32F4xx_LIB/core/core_cmInstr.h **** 
 220:STM32F4xx_LIB/core/core_cmInstr.h **** 
 221:STM32F4xx_LIB/core/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 222:STM32F4xx_LIB/core/core_cmInstr.h **** 
 223:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 224:STM32F4xx_LIB/core/core_cmInstr.h **** 
 225:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 8 bit value.
 226:STM32F4xx_LIB/core/core_cmInstr.h **** 
 227:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 228:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 229:STM32F4xx_LIB/core/core_cmInstr.h ****  */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 9


 230:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 231:STM32F4xx_LIB/core/core_cmInstr.h **** 
 232:STM32F4xx_LIB/core/core_cmInstr.h **** 
 233:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 234:STM32F4xx_LIB/core/core_cmInstr.h **** 
 235:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 16 bit values.
 236:STM32F4xx_LIB/core/core_cmInstr.h **** 
 237:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 238:STM32F4xx_LIB/core/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 239:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 240:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 241:STM32F4xx_LIB/core/core_cmInstr.h **** 
 242:STM32F4xx_LIB/core/core_cmInstr.h **** 
 243:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 244:STM32F4xx_LIB/core/core_cmInstr.h **** 
 245:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 32 bit values.
 246:STM32F4xx_LIB/core/core_cmInstr.h **** 
 247:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 248:STM32F4xx_LIB/core/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 249:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 250:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 251:STM32F4xx_LIB/core/core_cmInstr.h **** 
 252:STM32F4xx_LIB/core/core_cmInstr.h **** 
 253:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 254:STM32F4xx_LIB/core/core_cmInstr.h **** 
 255:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive STR instruction for 8 bit values.
 256:STM32F4xx_LIB/core/core_cmInstr.h **** 
 257:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 258:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 259:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          0  Function succeeded
 260:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          1  Function failed
 261:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 262:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 263:STM32F4xx_LIB/core/core_cmInstr.h **** 
 264:STM32F4xx_LIB/core/core_cmInstr.h **** 
 265:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 266:STM32F4xx_LIB/core/core_cmInstr.h **** 
 267:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive STR instruction for 16 bit values.
 268:STM32F4xx_LIB/core/core_cmInstr.h **** 
 269:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 270:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 271:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          0  Function succeeded
 272:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          1  Function failed
 273:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 274:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 275:STM32F4xx_LIB/core/core_cmInstr.h **** 
 276:STM32F4xx_LIB/core/core_cmInstr.h **** 
 277:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 278:STM32F4xx_LIB/core/core_cmInstr.h **** 
 279:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a exclusive STR instruction for 32 bit values.
 280:STM32F4xx_LIB/core/core_cmInstr.h **** 
 281:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 282:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 283:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          0  Function succeeded
 284:STM32F4xx_LIB/core/core_cmInstr.h ****     \return          1  Function failed
 285:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 286:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 10


 287:STM32F4xx_LIB/core/core_cmInstr.h **** 
 288:STM32F4xx_LIB/core/core_cmInstr.h **** 
 289:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 290:STM32F4xx_LIB/core/core_cmInstr.h **** 
 291:STM32F4xx_LIB/core/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 292:STM32F4xx_LIB/core/core_cmInstr.h **** 
 293:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 294:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CLREX                           __clrex
 295:STM32F4xx_LIB/core/core_cmInstr.h **** 
 296:STM32F4xx_LIB/core/core_cmInstr.h **** 
 297:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Signed Saturate
 298:STM32F4xx_LIB/core/core_cmInstr.h **** 
 299:STM32F4xx_LIB/core/core_cmInstr.h ****     This function saturates a signed value.
 300:STM32F4xx_LIB/core/core_cmInstr.h **** 
 301:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 302:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 303:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             Saturated value
 304:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 305:STM32F4xx_LIB/core/core_cmInstr.h **** #define __SSAT                            __ssat
 306:STM32F4xx_LIB/core/core_cmInstr.h **** 
 307:STM32F4xx_LIB/core/core_cmInstr.h **** 
 308:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Unsigned Saturate
 309:STM32F4xx_LIB/core/core_cmInstr.h **** 
 310:STM32F4xx_LIB/core/core_cmInstr.h ****     This function saturates an unsigned value.
 311:STM32F4xx_LIB/core/core_cmInstr.h **** 
 312:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 313:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 314:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             Saturated value
 315:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 316:STM32F4xx_LIB/core/core_cmInstr.h **** #define __USAT                            __usat
 317:STM32F4xx_LIB/core/core_cmInstr.h **** 
 318:STM32F4xx_LIB/core/core_cmInstr.h **** 
 319:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Rotate Right with Extend (32 bit)
 320:STM32F4xx_LIB/core/core_cmInstr.h **** 
 321:STM32F4xx_LIB/core/core_cmInstr.h ****     This function moves each bit of a bitstring right by one bit.
 322:STM32F4xx_LIB/core/core_cmInstr.h ****     The carry input is shifted in at the left end of the bitstring.
 323:STM32F4xx_LIB/core/core_cmInstr.h **** 
 324:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to rotate
 325:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Rotated value
 326:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 327:STM32F4xx_LIB/core/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 328:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((section(".rrx_text"))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)
 329:STM32F4xx_LIB/core/core_cmInstr.h **** {
 330:STM32F4xx_LIB/core/core_cmInstr.h ****   rrx r0, r0
 331:STM32F4xx_LIB/core/core_cmInstr.h ****   bx lr
 332:STM32F4xx_LIB/core/core_cmInstr.h **** }
 333:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 334:STM32F4xx_LIB/core/core_cmInstr.h **** 
 335:STM32F4xx_LIB/core/core_cmInstr.h **** 
 336:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDRT Unprivileged (8 bit)
 337:STM32F4xx_LIB/core/core_cmInstr.h **** 
 338:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 8 bit value.
 339:STM32F4xx_LIB/core/core_cmInstr.h **** 
 340:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 341:STM32F4xx_LIB/core/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 342:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 343:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDRBT(ptr)                      ((uint8_t )  __ldrt(ptr))
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 11


 344:STM32F4xx_LIB/core/core_cmInstr.h **** 
 345:STM32F4xx_LIB/core/core_cmInstr.h **** 
 346:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDRT Unprivileged (16 bit)
 347:STM32F4xx_LIB/core/core_cmInstr.h **** 
 348:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 16 bit values.
 349:STM32F4xx_LIB/core/core_cmInstr.h **** 
 350:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 351:STM32F4xx_LIB/core/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 352:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 353:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDRHT(ptr)                      ((uint16_t)  __ldrt(ptr))
 354:STM32F4xx_LIB/core/core_cmInstr.h **** 
 355:STM32F4xx_LIB/core/core_cmInstr.h **** 
 356:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  LDRT Unprivileged (32 bit)
 357:STM32F4xx_LIB/core/core_cmInstr.h **** 
 358:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 32 bit values.
 359:STM32F4xx_LIB/core/core_cmInstr.h **** 
 360:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 361:STM32F4xx_LIB/core/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 362:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 363:STM32F4xx_LIB/core/core_cmInstr.h **** #define __LDRT(ptr)                       ((uint32_t ) __ldrt(ptr))
 364:STM32F4xx_LIB/core/core_cmInstr.h **** 
 365:STM32F4xx_LIB/core/core_cmInstr.h **** 
 366:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STRT Unprivileged (8 bit)
 367:STM32F4xx_LIB/core/core_cmInstr.h **** 
 368:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 8 bit values.
 369:STM32F4xx_LIB/core/core_cmInstr.h **** 
 370:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 371:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 372:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 373:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STRBT(value, ptr)               __strt(value, ptr)
 374:STM32F4xx_LIB/core/core_cmInstr.h **** 
 375:STM32F4xx_LIB/core/core_cmInstr.h **** 
 376:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STRT Unprivileged (16 bit)
 377:STM32F4xx_LIB/core/core_cmInstr.h **** 
 378:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 16 bit values.
 379:STM32F4xx_LIB/core/core_cmInstr.h **** 
 380:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 381:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 382:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 383:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STRHT(value, ptr)               __strt(value, ptr)
 384:STM32F4xx_LIB/core/core_cmInstr.h **** 
 385:STM32F4xx_LIB/core/core_cmInstr.h **** 
 386:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  STRT Unprivileged (32 bit)
 387:STM32F4xx_LIB/core/core_cmInstr.h **** 
 388:STM32F4xx_LIB/core/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 32 bit values.
 389:STM32F4xx_LIB/core/core_cmInstr.h **** 
 390:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]  value  Value to store
 391:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 392:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 393:STM32F4xx_LIB/core/core_cmInstr.h **** #define __STRT(value, ptr)                __strt(value, ptr)
 394:STM32F4xx_LIB/core/core_cmInstr.h **** 
 395:STM32F4xx_LIB/core/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 396:STM32F4xx_LIB/core/core_cmInstr.h **** 
 397:STM32F4xx_LIB/core/core_cmInstr.h **** 
 398:STM32F4xx_LIB/core/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 399:STM32F4xx_LIB/core/core_cmInstr.h **** /* GNU gcc specific functions */
 400:STM32F4xx_LIB/core/core_cmInstr.h **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 12


 401:STM32F4xx_LIB/core/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 402:STM32F4xx_LIB/core/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 403:STM32F4xx_LIB/core/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 404:STM32F4xx_LIB/core/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 405:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 406:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 407:STM32F4xx_LIB/core/core_cmInstr.h **** #else
 408:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 409:STM32F4xx_LIB/core/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 410:STM32F4xx_LIB/core/core_cmInstr.h **** #endif
 411:STM32F4xx_LIB/core/core_cmInstr.h **** 
 412:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  No Operation
 413:STM32F4xx_LIB/core/core_cmInstr.h **** 
 414:STM32F4xx_LIB/core/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 415:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 416:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 417:STM32F4xx_LIB/core/core_cmInstr.h **** {
 418:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("nop");
 419:STM32F4xx_LIB/core/core_cmInstr.h **** }
 420:STM32F4xx_LIB/core/core_cmInstr.h **** 
 421:STM32F4xx_LIB/core/core_cmInstr.h **** 
 422:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Wait For Interrupt
 423:STM32F4xx_LIB/core/core_cmInstr.h **** 
 424:STM32F4xx_LIB/core/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 425:STM32F4xx_LIB/core/core_cmInstr.h ****     until one of a number of events occurs.
 426:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 427:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 428:STM32F4xx_LIB/core/core_cmInstr.h **** {
 429:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("wfi");
 430:STM32F4xx_LIB/core/core_cmInstr.h **** }
 431:STM32F4xx_LIB/core/core_cmInstr.h **** 
 432:STM32F4xx_LIB/core/core_cmInstr.h **** 
 433:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Wait For Event
 434:STM32F4xx_LIB/core/core_cmInstr.h **** 
 435:STM32F4xx_LIB/core/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 436:STM32F4xx_LIB/core/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 437:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 438:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 439:STM32F4xx_LIB/core/core_cmInstr.h **** {
 440:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("wfe");
 441:STM32F4xx_LIB/core/core_cmInstr.h **** }
 442:STM32F4xx_LIB/core/core_cmInstr.h **** 
 443:STM32F4xx_LIB/core/core_cmInstr.h **** 
 444:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Send Event
 445:STM32F4xx_LIB/core/core_cmInstr.h **** 
 446:STM32F4xx_LIB/core/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 447:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 448:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 449:STM32F4xx_LIB/core/core_cmInstr.h **** {
 450:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("sev");
 451:STM32F4xx_LIB/core/core_cmInstr.h **** }
 452:STM32F4xx_LIB/core/core_cmInstr.h **** 
 453:STM32F4xx_LIB/core/core_cmInstr.h **** 
 454:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 455:STM32F4xx_LIB/core/core_cmInstr.h **** 
 456:STM32F4xx_LIB/core/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 457:STM32F4xx_LIB/core/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 13


 458:STM32F4xx_LIB/core/core_cmInstr.h ****     memory, after the instruction has been completed.
 459:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 460:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 461:STM32F4xx_LIB/core/core_cmInstr.h **** {
 462:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("isb 0xF":::"memory");
 463:STM32F4xx_LIB/core/core_cmInstr.h **** }
 464:STM32F4xx_LIB/core/core_cmInstr.h **** 
 465:STM32F4xx_LIB/core/core_cmInstr.h **** 
 466:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 467:STM32F4xx_LIB/core/core_cmInstr.h **** 
 468:STM32F4xx_LIB/core/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 469:STM32F4xx_LIB/core/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 470:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 471:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 472:STM32F4xx_LIB/core/core_cmInstr.h **** {
 473:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("dsb 0xF":::"memory");
 474:STM32F4xx_LIB/core/core_cmInstr.h **** }
 475:STM32F4xx_LIB/core/core_cmInstr.h **** 
 476:STM32F4xx_LIB/core/core_cmInstr.h **** 
 477:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Data Memory Barrier
 478:STM32F4xx_LIB/core/core_cmInstr.h **** 
 479:STM32F4xx_LIB/core/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 480:STM32F4xx_LIB/core/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 481:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 482:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 483:STM32F4xx_LIB/core/core_cmInstr.h **** {
 484:STM32F4xx_LIB/core/core_cmInstr.h ****   __ASM volatile ("dmb 0xF":::"memory");
 485:STM32F4xx_LIB/core/core_cmInstr.h **** }
 486:STM32F4xx_LIB/core/core_cmInstr.h **** 
 487:STM32F4xx_LIB/core/core_cmInstr.h **** 
 488:STM32F4xx_LIB/core/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 489:STM32F4xx_LIB/core/core_cmInstr.h **** 
 490:STM32F4xx_LIB/core/core_cmInstr.h ****     This function reverses the byte order in integer value.
 491:STM32F4xx_LIB/core/core_cmInstr.h **** 
 492:STM32F4xx_LIB/core/core_cmInstr.h ****     \param [in]    value  Value to reverse
 493:STM32F4xx_LIB/core/core_cmInstr.h ****     \return               Reversed value
 494:STM32F4xx_LIB/core/core_cmInstr.h ****  */
 495:STM32F4xx_LIB/core/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 105              		.loc 2 495 57 is_stmt 1 view .LVU28
 106              	.LBB31:
 496:STM32F4xx_LIB/core/core_cmInstr.h **** {
 497:STM32F4xx_LIB/core/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 498:STM32F4xx_LIB/core/core_cmInstr.h ****   return __builtin_bswap32(value);
 107              		.loc 2 498 3 view .LVU29
 108              		.loc 2 498 10 is_stmt 0 view .LVU30
 109 0034 1BBA     		rev	r3, r3
 110              	.LVL9:
 111              		.loc 2 498 10 view .LVU31
 112              	.LBE31:
 113              	.LBE30:
 114              		.loc 1 124 44 view .LVU32
 115 0036 0493     		str	r3, [sp, #16]
 125:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   keyaddr+=4;
 116              		.loc 1 125 3 is_stmt 1 view .LVU33
 117              	.LVL10:
 126:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 118              		.loc 1 126 3 view .LVU34
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 14


 119              		.loc 1 126 46 is_stmt 0 view .LVU35
 120 0038 6B68     		ldr	r3, [r5, #4]
 121              	.LVL11:
 122              	.LBB32:
 123              	.LBI32:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 124              		.loc 2 495 57 is_stmt 1 view .LVU36
 125              	.LBB33:
 126              		.loc 2 498 3 view .LVU37
 127              		.loc 2 498 10 is_stmt 0 view .LVU38
 128 003a 1BBA     		rev	r3, r3
 129              	.LVL12:
 130              		.loc 2 498 10 view .LVU39
 131              	.LBE33:
 132              	.LBE32:
 133              		.loc 1 126 44 view .LVU40
 134 003c 0593     		str	r3, [sp, #20]
 127:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   keyaddr+=4;
 135              		.loc 1 127 3 is_stmt 1 view .LVU41
 136              	.LVL13:
 128:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 137              		.loc 1 128 3 view .LVU42
 138              		.loc 1 128 46 is_stmt 0 view .LVU43
 139 003e AB68     		ldr	r3, [r5, #8]
 140              	.LVL14:
 141              	.LBB34:
 142              	.LBI34:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 143              		.loc 2 495 57 is_stmt 1 view .LVU44
 144              	.LBB35:
 145              		.loc 2 498 3 view .LVU45
 146              		.loc 2 498 10 is_stmt 0 view .LVU46
 147 0040 1BBA     		rev	r3, r3
 148              	.LVL15:
 149              		.loc 2 498 10 view .LVU47
 150              	.LBE35:
 151              	.LBE34:
 152              		.loc 1 128 44 view .LVU48
 153 0042 0693     		str	r3, [sp, #24]
 129:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   keyaddr+=4;
 154              		.loc 1 129 3 is_stmt 1 view .LVU49
 155              	.LVL16:
 130:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 156              		.loc 1 130 3 view .LVU50
 157              		.loc 1 130 46 is_stmt 0 view .LVU51
 158 0044 EB68     		ldr	r3, [r5, #12]
 159              	.LVL17:
 160              	.LBB36:
 161              	.LBI36:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 162              		.loc 2 495 57 is_stmt 1 view .LVU52
 163              	.LBB37:
 164              		.loc 2 498 3 view .LVU53
 165              		.loc 2 498 10 is_stmt 0 view .LVU54
 166 0046 1BBA     		rev	r3, r3
 167              	.LVL18:
 168              		.loc 2 498 10 view .LVU55
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 15


 169              	.LBE37:
 170              	.LBE36:
 171              		.loc 1 130 44 view .LVU56
 172 0048 0793     		str	r3, [sp, #28]
 131:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   keyaddr+=4;
 173              		.loc 1 131 3 is_stmt 1 view .LVU57
 174              	.LVL19:
 132:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 175              		.loc 1 132 3 view .LVU58
 176              		.loc 1 132 46 is_stmt 0 view .LVU59
 177 004a 2B69     		ldr	r3, [r5, #16]
 178              	.LVL20:
 179              	.LBB38:
 180              	.LBI38:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 181              		.loc 2 495 57 is_stmt 1 view .LVU60
 182              	.LBB39:
 183              		.loc 2 498 3 view .LVU61
 184              		.loc 2 498 10 is_stmt 0 view .LVU62
 185 004c 1BBA     		rev	r3, r3
 186              	.LVL21:
 187              		.loc 2 498 10 view .LVU63
 188              	.LBE39:
 189              	.LBE38:
 190              		.loc 1 132 44 view .LVU64
 191 004e 0893     		str	r3, [sp, #32]
 133:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   keyaddr+=4;
 192              		.loc 1 133 3 is_stmt 1 view .LVU65
 193              	.LVL22:
 134:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 194              		.loc 1 134 3 view .LVU66
 195              		.loc 1 134 46 is_stmt 0 view .LVU67
 196 0050 6B69     		ldr	r3, [r5, #20]
 197              	.LVL23:
 198              	.LBB40:
 199              	.LBI40:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 200              		.loc 2 495 57 is_stmt 1 view .LVU68
 201              	.LBB41:
 202              		.loc 2 498 3 view .LVU69
 203              		.loc 2 498 10 is_stmt 0 view .LVU70
 204 0052 1BBA     		rev	r3, r3
 205              	.LVL24:
 206              		.loc 2 498 10 view .LVU71
 207              	.LBE41:
 208              	.LBE40:
 209              		.loc 1 134 44 view .LVU72
 210 0054 0993     		str	r3, [sp, #36]
 135:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_KeyInit(& TDES_CRYP_KeyInitStructure);
 211              		.loc 1 135 3 is_stmt 1 view .LVU73
 212 0056 02A8     		add	r0, sp, #8
 213 0058 FFF7FEFF 		bl	CRYP_KeyInit
 214              	.LVL25:
 136:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
 137:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   /* Flush IN/OUT FIFO */
 138:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_FIFOFlush();
 215              		.loc 1 138 3 view .LVU74
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 16


 216 005c FFF7FEFF 		bl	CRYP_FIFOFlush
 217              	.LVL26:
 139:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
 140:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   /* Enable Crypto processor */
 141:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_Cmd(ENABLE);
 218              		.loc 1 141 3 view .LVU75
 219 0060 0120     		movs	r0, #1
 220 0062 FFF7FEFF 		bl	CRYP_Cmd
 221              	.LVL27:
 142:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
 143:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 222              		.loc 1 143 3 view .LVU76
 223              		.loc 1 143 6 is_stmt 0 view .LVU77
 224 0066 FFF7FEFF 		bl	CRYP_GetCmdStatus
 225              	.LVL28:
 226              		.loc 1 143 5 view .LVU78
 227 006a 0646     		mov	r6, r0
 228 006c 80B3     		cbz	r0, .L4
 144:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   {
 145:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embed 
 146:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     the CRYP peripheral (please check the device sales type. */
 147:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     status = ERROR;
 148:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   }
 149:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   else
 150:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   {
 151:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 229              		.loc 1 151 10 view .LVU79
 230 006e 0025     		movs	r5, #0
 231              	.LVL29:
 100:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 232              		.loc 1 100 15 view .LVU80
 233 0070 0126     		movs	r6, #1
 234 0072 05E0     		b	.L5
 235              	.LVL30:
 236              	.L13:
 112:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   }
 237              		.loc 1 112 6 is_stmt 1 view .LVU81
 112:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   }
 238              		.loc 1 112 43 is_stmt 0 view .LVU82
 239 0074 0023     		movs	r3, #0
 240 0076 0A93     		str	r3, [sp, #40]
 241 0078 D4E7     		b	.L3
 242              	.LVL31:
 243              	.L6:
 152:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     {
 153:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       /* Write the Input block in the Input FIFO */
 154:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       CRYP_DataIn(*(uint32_t*)(inputaddr));
 155:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       inputaddr+=4;
 156:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       CRYP_DataIn(*(uint32_t*)(inputaddr));
 157:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       inputaddr+=4;
 158:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 159:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       /* Wait until the complete message has been processed */
 160:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       counter = 0;
 161:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       do
 162:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       {
 163:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 164:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         counter++;
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 17


 165:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       }while ((counter != TDESBUSY_TIMEOUT) && (busystatus != RESET));
 166:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 167:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       if (busystatus != RESET)
 244              		.loc 1 167 7 is_stmt 1 view .LVU83
 245              		.loc 1 167 10 is_stmt 0 view .LVU84
 246 007a DAB1     		cbz	r2, .L14
 168:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       {
 169:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         status = ERROR;
 247              		.loc 1 169 16 view .LVU85
 248 007c 0026     		movs	r6, #0
 249              	.LVL32:
 250              	.L8:
 151:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     {
 251              		.loc 1 151 50 is_stmt 1 discriminator 2 view .LVU86
 151:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     {
 252              		.loc 1 151 51 is_stmt 0 discriminator 2 view .LVU87
 253 007e 0835     		adds	r5, r5, #8
 254              	.LVL33:
 255              	.L5:
 151:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     {
 256              		.loc 1 151 14 is_stmt 1 discriminator 1 view .LVU88
 151:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     {
 257              		.loc 1 151 5 is_stmt 0 discriminator 1 view .LVU89
 258 0080 BD42     		cmp	r5, r7
 259 0082 22D2     		bcs	.L9
 151:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     {
 260              		.loc 1 151 27 discriminator 3 view .LVU90
 261 0084 0EB3     		cbz	r6, .L9
 154:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       inputaddr+=4;
 262              		.loc 1 154 7 is_stmt 1 view .LVU91
 263 0086 2068     		ldr	r0, [r4]
 264 0088 FFF7FEFF 		bl	CRYP_DataIn
 265              	.LVL34:
 155:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       CRYP_DataIn(*(uint32_t*)(inputaddr));
 266              		.loc 1 155 7 view .LVU92
 156:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       inputaddr+=4;
 267              		.loc 1 156 7 view .LVU93
 268 008c 6068     		ldr	r0, [r4, #4]
 269 008e FFF7FEFF 		bl	CRYP_DataIn
 270              	.LVL35:
 157:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 271              		.loc 1 157 7 view .LVU94
 157:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 272              		.loc 1 157 16 is_stmt 0 view .LVU95
 273 0092 0834     		adds	r4, r4, #8
 274              	.LVL36:
 160:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       do
 275              		.loc 1 160 7 is_stmt 1 view .LVU96
 160:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       do
 276              		.loc 1 160 15 is_stmt 0 view .LVU97
 277 0094 0023     		movs	r3, #0
 278 0096 0193     		str	r3, [sp, #4]
 279              	.L7:
 161:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       {
 280              		.loc 1 161 7 is_stmt 1 discriminator 2 view .LVU98
 163:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         counter++;
 281              		.loc 1 163 9 discriminator 2 view .LVU99
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 18


 163:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         counter++;
 282              		.loc 1 163 22 is_stmt 0 discriminator 2 view .LVU100
 283 0098 1020     		movs	r0, #16
 284 009a FFF7FEFF 		bl	CRYP_GetFlagStatus
 285              	.LVL37:
 163:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         counter++;
 286              		.loc 1 163 20 discriminator 2 view .LVU101
 287 009e 0246     		mov	r2, r0
 288              	.LVL38:
 164:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       }while ((counter != TDESBUSY_TIMEOUT) && (busystatus != RESET));
 289              		.loc 1 164 9 is_stmt 1 discriminator 2 view .LVU102
 164:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       }while ((counter != TDESBUSY_TIMEOUT) && (busystatus != RESET));
 290              		.loc 1 164 16 is_stmt 0 discriminator 2 view .LVU103
 291 00a0 0199     		ldr	r1, [sp, #4]
 292 00a2 0131     		adds	r1, r1, #1
 293 00a4 0191     		str	r1, [sp, #4]
 165:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 294              		.loc 1 165 14 is_stmt 1 discriminator 2 view .LVU104
 165:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 295              		.loc 1 165 24 is_stmt 0 discriminator 2 view .LVU105
 296 00a6 019B     		ldr	r3, [sp, #4]
 165:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 297              		.loc 1 165 7 discriminator 2 view .LVU106
 298 00a8 B3F5803F 		cmp	r3, #65536
 299 00ac E5D0     		beq	.L6
 165:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 300              		.loc 1 165 45 discriminator 1 view .LVU107
 301 00ae 0028     		cmp	r0, #0
 302 00b0 F2D1     		bne	.L7
 303 00b2 E2E7     		b	.L6
 304              	.L14:
 170:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       }
 171:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       else
 172:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       {
 173:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         
 174:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         /* Read the Output block from the Output FIFO */
 175:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         *(uint32_t*)(outputaddr) = CRYP_DataOut();
 305              		.loc 1 175 9 is_stmt 1 view .LVU108
 306              		.loc 1 175 36 is_stmt 0 view .LVU109
 307 00b4 FFF7FEFF 		bl	CRYP_DataOut
 308              	.LVL39:
 309              		.loc 1 175 34 view .LVU110
 310 00b8 C8F80000 		str	r0, [r8]
 176:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         outputaddr+=4;
 311              		.loc 1 176 9 is_stmt 1 view .LVU111
 312              	.LVL40:
 177:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         *(uint32_t*)(outputaddr) = CRYP_DataOut();
 313              		.loc 1 177 9 view .LVU112
 314              		.loc 1 177 36 is_stmt 0 view .LVU113
 315 00bc FFF7FEFF 		bl	CRYP_DataOut
 316              	.LVL41:
 317              		.loc 1 177 34 view .LVU114
 318 00c0 C8F80400 		str	r0, [r8, #4]
 178:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         outputaddr+=4;
 319              		.loc 1 178 9 is_stmt 1 view .LVU115
 320              		.loc 1 178 19 is_stmt 0 view .LVU116
 321 00c4 08F10808 		add	r8, r8, #8
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 19


 322              	.LVL42:
 323              		.loc 1 178 19 view .LVU117
 324 00c8 D9E7     		b	.L8
 325              	.L9:
 179:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       }
 180:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     }
 181:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     
 182:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     /* Disable Crypto */
 183:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     CRYP_Cmd(DISABLE);
 326              		.loc 1 183 5 is_stmt 1 view .LVU118
 327 00ca 0020     		movs	r0, #0
 328 00cc FFF7FEFF 		bl	CRYP_Cmd
 329              	.LVL43:
 330              	.L4:
 184:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   }
 185:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   return status; 
 331              		.loc 1 185 3 view .LVU119
 186:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** }
 332              		.loc 1 186 1 is_stmt 0 view .LVU120
 333 00d0 3046     		mov	r0, r6
 334 00d2 0EB0     		add	sp, sp, #56
 335              	.LCFI2:
 336              		.cfi_def_cfa_offset 24
 337              		@ sp needed
 338 00d4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 339              		.loc 1 186 1 view .LVU121
 340              		.cfi_endproc
 341              	.LFE123:
 343              		.section	.text.CRYP_TDES_CBC,"ax",%progbits
 344              		.align	1
 345              		.global	CRYP_TDES_CBC
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 349              		.fpu fpv4-sp-d16
 351              	CRYP_TDES_CBC:
 352              	.LVL44:
 353              	.LFB124:
 187:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
 188:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** /**
 189:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @brief  Encrypt and decrypt using TDES in CBC Mode
 190:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @param  Mode: encryption or decryption Mode.
 191:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *           This parameter can be one of the following values:
 192:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *            @arg MODE_ENCRYPT: Encryption
 193:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *            @arg MODE_DECRYPT: Decryption
 194:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @param  Key: Key used for TDES algorithm.
 195:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @param  InitVectors: Initialisation Vectors used for TDES algorithm.
 196:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @param  Input: pointer to the Input buffer.
 197:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 8.
 198:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @param  Output: pointer to the returned buffer.
 199:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   * @retval An ErrorStatus enumeration value:
 200:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *          - SUCCESS: Operation done
 201:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   *          - ERROR: Operation failed
 202:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   */
 203:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** ErrorStatus CRYP_TDES_CBC(uint8_t Mode, uint8_t Key[24], uint8_t InitVectors[8],
 204:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****                           uint8_t *Input, uint32_t Ilength, uint8_t *Output)
 205:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** {
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 20


 354              		.loc 1 205 1 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 8, pretend = 0, frame = 72
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		.loc 1 205 1 is_stmt 0 view .LVU123
 359 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 360              	.LCFI3:
 361              		.cfi_def_cfa_offset 28
 362              		.cfi_offset 4, -28
 363              		.cfi_offset 5, -24
 364              		.cfi_offset 6, -20
 365              		.cfi_offset 7, -16
 366              		.cfi_offset 8, -12
 367              		.cfi_offset 9, -8
 368              		.cfi_offset 14, -4
 369 0004 93B0     		sub	sp, sp, #76
 370              	.LCFI4:
 371              		.cfi_def_cfa_offset 104
 372 0006 8146     		mov	r9, r0
 373 0008 0D46     		mov	r5, r1
 374 000a 1646     		mov	r6, r2
 375 000c DDF86880 		ldr	r8, [sp, #104]
 206:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_InitTypeDef TDES_CRYP_InitStructure;
 376              		.loc 1 206 3 is_stmt 1 view .LVU124
 207:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_KeyInitTypeDef TDES_CRYP_KeyInitStructure;
 377              		.loc 1 207 3 view .LVU125
 208:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_IVInitTypeDef TDES_CRYP_IVInitStructure;
 378              		.loc 1 208 3 view .LVU126
 209:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   __IO uint32_t counter = 0;
 379              		.loc 1 209 3 view .LVU127
 380              		.loc 1 209 17 is_stmt 0 view .LVU128
 381 0010 0022     		movs	r2, #0
 382              	.LVL45:
 383              		.loc 1 209 17 view .LVU129
 384 0012 0192     		str	r2, [sp, #4]
 210:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   uint32_t busystatus = 0;
 385              		.loc 1 210 3 is_stmt 1 view .LVU130
 386              	.LVL46:
 211:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   ErrorStatus status = SUCCESS;
 387              		.loc 1 211 3 view .LVU131
 212:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 388              		.loc 1 212 3 view .LVU132
 213:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 389              		.loc 1 213 3 view .LVU133
 390              		.loc 1 213 12 is_stmt 0 view .LVU134
 391 0014 1C46     		mov	r4, r3
 392              	.LVL47:
 214:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   uint32_t outputaddr = (uint32_t)Output;
 393              		.loc 1 214 3 is_stmt 1 view .LVU135
 394              		.loc 1 214 12 is_stmt 0 view .LVU136
 395 0016 1B9F     		ldr	r7, [sp, #108]
 396              	.LVL48:
 215:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 397              		.loc 1 215 3 is_stmt 1 view .LVU137
 216:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   uint32_t i = 0;
 398              		.loc 1 216 3 view .LVU138
 217:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 21


 218:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   /* Crypto structures initialisation*/
 219:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_KeyStructInit(&TDES_CRYP_KeyInitStructure);
 399              		.loc 1 219 3 view .LVU139
 400 0018 06A8     		add	r0, sp, #24
 401              	.LVL49:
 402              		.loc 1 219 3 is_stmt 0 view .LVU140
 403 001a FFF7FEFF 		bl	CRYP_KeyStructInit
 404              	.LVL50:
 220:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
 221:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   /* Crypto Init for Encryption process */
 222:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   if(Mode == MODE_ENCRYPT) /* TDES encryption */
 405              		.loc 1 222 3 is_stmt 1 view .LVU141
 406              		.loc 1 222 5 is_stmt 0 view .LVU142
 407 001e B9F1010F 		cmp	r9, #1
 408 0022 32D0     		beq	.L27
 223:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   {
 224:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     TDES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 225:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   }
 226:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   else
 227:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   {
 228:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     TDES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 409              		.loc 1 228 5 is_stmt 1 view .LVU143
 410              		.loc 1 228 42 is_stmt 0 view .LVU144
 411 0024 0423     		movs	r3, #4
 412 0026 0E93     		str	r3, [sp, #56]
 413              	.L17:
 229:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   }
 230:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_TDES_CBC;
 414              		.loc 1 230 3 is_stmt 1 view .LVU145
 415              		.loc 1 230 41 is_stmt 0 view .LVU146
 416 0028 0823     		movs	r3, #8
 417 002a 0F93     		str	r3, [sp, #60]
 231:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 418              		.loc 1 231 3 is_stmt 1 view .LVU147
 419              		.loc 1 231 41 is_stmt 0 view .LVU148
 420 002c 8023     		movs	r3, #128
 421 002e 1093     		str	r3, [sp, #64]
 232:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
 233:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_Init(&TDES_CRYP_InitStructure);
 422              		.loc 1 233 3 is_stmt 1 view .LVU149
 423 0030 0EA8     		add	r0, sp, #56
 424 0032 FFF7FEFF 		bl	CRYP_Init
 425              	.LVL51:
 234:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** 
 235:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   /* Key Initialisation */
 236:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 426              		.loc 1 236 3 view .LVU150
 427              		.loc 1 236 46 is_stmt 0 view .LVU151
 428 0036 2B68     		ldr	r3, [r5]
 429              	.LVL52:
 430              	.LBB42:
 431              	.LBI42:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 432              		.loc 2 495 57 is_stmt 1 view .LVU152
 433              	.LBB43:
 434              		.loc 2 498 3 view .LVU153
 435              		.loc 2 498 10 is_stmt 0 view .LVU154
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 22


 436 0038 1BBA     		rev	r3, r3
 437              	.LVL53:
 438              		.loc 2 498 10 view .LVU155
 439              	.LBE43:
 440              	.LBE42:
 441              		.loc 1 236 44 view .LVU156
 442 003a 0893     		str	r3, [sp, #32]
 237:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   keyaddr+=4;
 443              		.loc 1 237 3 is_stmt 1 view .LVU157
 444              	.LVL54:
 238:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 445              		.loc 1 238 3 view .LVU158
 446              		.loc 1 238 46 is_stmt 0 view .LVU159
 447 003c 6B68     		ldr	r3, [r5, #4]
 448              	.LVL55:
 449              	.LBB44:
 450              	.LBI44:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 451              		.loc 2 495 57 is_stmt 1 view .LVU160
 452              	.LBB45:
 453              		.loc 2 498 3 view .LVU161
 454              		.loc 2 498 10 is_stmt 0 view .LVU162
 455 003e 1BBA     		rev	r3, r3
 456              	.LVL56:
 457              		.loc 2 498 10 view .LVU163
 458              	.LBE45:
 459              	.LBE44:
 460              		.loc 1 238 44 view .LVU164
 461 0040 0993     		str	r3, [sp, #36]
 239:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   keyaddr+=4;
 462              		.loc 1 239 3 is_stmt 1 view .LVU165
 463              	.LVL57:
 240:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 464              		.loc 1 240 3 view .LVU166
 465              		.loc 1 240 46 is_stmt 0 view .LVU167
 466 0042 AB68     		ldr	r3, [r5, #8]
 467              	.LVL58:
 468              	.LBB46:
 469              	.LBI46:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 470              		.loc 2 495 57 is_stmt 1 view .LVU168
 471              	.LBB47:
 472              		.loc 2 498 3 view .LVU169
 473              		.loc 2 498 10 is_stmt 0 view .LVU170
 474 0044 1BBA     		rev	r3, r3
 475              	.LVL59:
 476              		.loc 2 498 10 view .LVU171
 477              	.LBE47:
 478              	.LBE46:
 479              		.loc 1 240 44 view .LVU172
 480 0046 0A93     		str	r3, [sp, #40]
 241:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   keyaddr+=4;
 481              		.loc 1 241 3 is_stmt 1 view .LVU173
 482              	.LVL60:
 242:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 483              		.loc 1 242 3 view .LVU174
 484              		.loc 1 242 46 is_stmt 0 view .LVU175
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 23


 485 0048 EB68     		ldr	r3, [r5, #12]
 486              	.LVL61:
 487              	.LBB48:
 488              	.LBI48:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 489              		.loc 2 495 57 is_stmt 1 view .LVU176
 490              	.LBB49:
 491              		.loc 2 498 3 view .LVU177
 492              		.loc 2 498 10 is_stmt 0 view .LVU178
 493 004a 1BBA     		rev	r3, r3
 494              	.LVL62:
 495              		.loc 2 498 10 view .LVU179
 496              	.LBE49:
 497              	.LBE48:
 498              		.loc 1 242 44 view .LVU180
 499 004c 0B93     		str	r3, [sp, #44]
 243:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   keyaddr+=4;
 500              		.loc 1 243 3 is_stmt 1 view .LVU181
 501              	.LVL63:
 244:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 502              		.loc 1 244 3 view .LVU182
 503              		.loc 1 244 46 is_stmt 0 view .LVU183
 504 004e 2B69     		ldr	r3, [r5, #16]
 505              	.LVL64:
 506              	.LBB50:
 507              	.LBI50:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 508              		.loc 2 495 57 is_stmt 1 view .LVU184
 509              	.LBB51:
 510              		.loc 2 498 3 view .LVU185
 511              		.loc 2 498 10 is_stmt 0 view .LVU186
 512 0050 1BBA     		rev	r3, r3
 513              	.LVL65:
 514              		.loc 2 498 10 view .LVU187
 515              	.LBE51:
 516              	.LBE50:
 517              		.loc 1 244 44 view .LVU188
 518 0052 0C93     		str	r3, [sp, #48]
 245:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   keyaddr+=4;
 519              		.loc 1 245 3 is_stmt 1 view .LVU189
 520              	.LVL66:
 246:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 521              		.loc 1 246 3 view .LVU190
 522              		.loc 1 246 46 is_stmt 0 view .LVU191
 523 0054 6B69     		ldr	r3, [r5, #20]
 524              	.LVL67:
 525              	.LBB52:
 526              	.LBI52:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 527              		.loc 2 495 57 is_stmt 1 view .LVU192
 528              	.LBB53:
 529              		.loc 2 498 3 view .LVU193
 530              		.loc 2 498 10 is_stmt 0 view .LVU194
 531 0056 1BBA     		rev	r3, r3
 532              	.LVL68:
 533              		.loc 2 498 10 view .LVU195
 534              	.LBE53:
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 24


 535              	.LBE52:
 536              		.loc 1 246 44 view .LVU196
 537 0058 0D93     		str	r3, [sp, #52]
 247:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_KeyInit(& TDES_CRYP_KeyInitStructure);
 538              		.loc 1 247 3 is_stmt 1 view .LVU197
 539 005a 06A8     		add	r0, sp, #24
 540 005c FFF7FEFF 		bl	CRYP_KeyInit
 541              	.LVL69:
 248:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   
 249:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   /* Initialization Vectors */
 250:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 542              		.loc 1 250 3 view .LVU198
 543              		.loc 1 250 44 is_stmt 0 view .LVU199
 544 0060 3368     		ldr	r3, [r6]
 545              	.LVL70:
 546              	.LBB54:
 547              	.LBI54:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 548              		.loc 2 495 57 is_stmt 1 view .LVU200
 549              	.LBB55:
 550              		.loc 2 498 3 view .LVU201
 551              		.loc 2 498 10 is_stmt 0 view .LVU202
 552 0062 1BBA     		rev	r3, r3
 553              	.LVL71:
 554              		.loc 2 498 10 view .LVU203
 555              	.LBE55:
 556              	.LBE54:
 557              		.loc 1 250 42 view .LVU204
 558 0064 0293     		str	r3, [sp, #8]
 251:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   ivaddr+=4;
 559              		.loc 1 251 3 is_stmt 1 view .LVU205
 560              	.LVL72:
 252:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   TDES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 561              		.loc 1 252 3 view .LVU206
 562              		.loc 1 252 44 is_stmt 0 view .LVU207
 563 0066 7368     		ldr	r3, [r6, #4]
 564              	.LVL73:
 565              	.LBB56:
 566              	.LBI56:
 495:STM32F4xx_LIB/core/core_cmInstr.h **** {
 567              		.loc 2 495 57 is_stmt 1 view .LVU208
 568              	.LBB57:
 569              		.loc 2 498 3 view .LVU209
 570              		.loc 2 498 10 is_stmt 0 view .LVU210
 571 0068 1BBA     		rev	r3, r3
 572              	.LVL74:
 573              		.loc 2 498 10 view .LVU211
 574              	.LBE57:
 575              	.LBE56:
 576              		.loc 1 252 42 view .LVU212
 577 006a 0393     		str	r3, [sp, #12]
 253:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_IVInit(&TDES_CRYP_IVInitStructure);
 578              		.loc 1 253 3 is_stmt 1 view .LVU213
 579 006c 02A8     		add	r0, sp, #8
 580 006e FFF7FEFF 		bl	CRYP_IVInit
 581              	.LVL75:
 254:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 25


 255:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   /* Flush IN/OUT FIFO */
 256:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_FIFOFlush();
 582              		.loc 1 256 3 view .LVU214
 583 0072 FFF7FEFF 		bl	CRYP_FIFOFlush
 584              	.LVL76:
 257:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   
 258:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   /* Enable Crypto processor */
 259:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   CRYP_Cmd(ENABLE);
 585              		.loc 1 259 3 view .LVU215
 586 0076 0120     		movs	r0, #1
 587 0078 FFF7FEFF 		bl	CRYP_Cmd
 588              	.LVL77:
 260:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   
 261:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 589              		.loc 1 261 3 view .LVU216
 590              		.loc 1 261 6 is_stmt 0 view .LVU217
 591 007c FFF7FEFF 		bl	CRYP_GetCmdStatus
 592              	.LVL78:
 593              		.loc 1 261 5 view .LVU218
 594 0080 0646     		mov	r6, r0
 595              	.LVL79:
 596              		.loc 1 261 5 view .LVU219
 597 0082 68B3     		cbz	r0, .L18
 262:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   {
 263:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embed 
 264:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     the CRYP peripheral (please check the device sales type. */
 265:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     status = ERROR;
 266:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   }
 267:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   else
 268:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   {
 269:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 598              		.loc 1 269 10 view .LVU220
 599 0084 0025     		movs	r5, #0
 600              	.LVL80:
 211:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 601              		.loc 1 211 15 view .LVU221
 602 0086 0126     		movs	r6, #1
 603 0088 05E0     		b	.L19
 604              	.LVL81:
 605              	.L27:
 224:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   }
 606              		.loc 1 224 5 is_stmt 1 view .LVU222
 224:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   }
 607              		.loc 1 224 42 is_stmt 0 view .LVU223
 608 008a 0023     		movs	r3, #0
 609 008c 0E93     		str	r3, [sp, #56]
 610 008e CBE7     		b	.L17
 611              	.LVL82:
 612              	.L20:
 270:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     {
 271:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       /* Write the Input block in the Input FIFO */
 272:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       CRYP_DataIn(*(uint32_t*)(inputaddr));
 273:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       inputaddr+=4;
 274:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       CRYP_DataIn(*(uint32_t*)(inputaddr));
 275:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       inputaddr+=4;
 276:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 277:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       /* Wait until the complete message has been processed */
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 26


 278:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       counter = 0;
 279:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       do
 280:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       {
 281:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 282:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         counter++;
 283:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       }while ((counter != TDESBUSY_TIMEOUT) && (busystatus != RESET));
 284:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 285:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       if (busystatus != RESET)
 613              		.loc 1 285 7 is_stmt 1 view .LVU224
 614              		.loc 1 285 10 is_stmt 0 view .LVU225
 615 0090 D9B1     		cbz	r1, .L28
 286:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       {
 287:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         status = ERROR;
 616              		.loc 1 287 16 view .LVU226
 617 0092 0026     		movs	r6, #0
 618              	.LVL83:
 619              	.L22:
 269:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     {
 620              		.loc 1 269 50 is_stmt 1 discriminator 2 view .LVU227
 269:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     {
 621              		.loc 1 269 51 is_stmt 0 discriminator 2 view .LVU228
 622 0094 0835     		adds	r5, r5, #8
 623              	.LVL84:
 624              	.L19:
 269:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     {
 625              		.loc 1 269 14 is_stmt 1 discriminator 1 view .LVU229
 269:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     {
 626              		.loc 1 269 5 is_stmt 0 discriminator 1 view .LVU230
 627 0096 4545     		cmp	r5, r8
 628 0098 1FD2     		bcs	.L23
 269:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     {
 629              		.loc 1 269 27 discriminator 3 view .LVU231
 630 009a F6B1     		cbz	r6, .L23
 272:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       inputaddr+=4;
 631              		.loc 1 272 7 is_stmt 1 view .LVU232
 632 009c 2068     		ldr	r0, [r4]
 633 009e FFF7FEFF 		bl	CRYP_DataIn
 634              	.LVL85:
 273:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       CRYP_DataIn(*(uint32_t*)(inputaddr));
 635              		.loc 1 273 7 view .LVU233
 274:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       inputaddr+=4;
 636              		.loc 1 274 7 view .LVU234
 637 00a2 6068     		ldr	r0, [r4, #4]
 638 00a4 FFF7FEFF 		bl	CRYP_DataIn
 639              	.LVL86:
 275:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 640              		.loc 1 275 7 view .LVU235
 275:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 641              		.loc 1 275 16 is_stmt 0 view .LVU236
 642 00a8 0834     		adds	r4, r4, #8
 643              	.LVL87:
 278:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       do
 644              		.loc 1 278 7 is_stmt 1 view .LVU237
 278:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       do
 645              		.loc 1 278 15 is_stmt 0 view .LVU238
 646 00aa 0023     		movs	r3, #0
 647 00ac 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 27


 648              	.L21:
 279:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       {
 649              		.loc 1 279 7 is_stmt 1 discriminator 2 view .LVU239
 281:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         counter++;
 650              		.loc 1 281 9 discriminator 2 view .LVU240
 281:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         counter++;
 651              		.loc 1 281 22 is_stmt 0 discriminator 2 view .LVU241
 652 00ae 1020     		movs	r0, #16
 653 00b0 FFF7FEFF 		bl	CRYP_GetFlagStatus
 654              	.LVL88:
 281:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         counter++;
 655              		.loc 1 281 20 discriminator 2 view .LVU242
 656 00b4 0146     		mov	r1, r0
 657              	.LVL89:
 282:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       }while ((counter != TDESBUSY_TIMEOUT) && (busystatus != RESET));
 658              		.loc 1 282 9 is_stmt 1 discriminator 2 view .LVU243
 282:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       }while ((counter != TDESBUSY_TIMEOUT) && (busystatus != RESET));
 659              		.loc 1 282 16 is_stmt 0 discriminator 2 view .LVU244
 660 00b6 019A     		ldr	r2, [sp, #4]
 661 00b8 0132     		adds	r2, r2, #1
 662 00ba 0192     		str	r2, [sp, #4]
 283:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 663              		.loc 1 283 14 is_stmt 1 discriminator 2 view .LVU245
 283:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 664              		.loc 1 283 24 is_stmt 0 discriminator 2 view .LVU246
 665 00bc 019B     		ldr	r3, [sp, #4]
 283:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 666              		.loc 1 283 7 discriminator 2 view .LVU247
 667 00be B3F5803F 		cmp	r3, #65536
 668 00c2 E5D0     		beq	.L20
 283:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       
 669              		.loc 1 283 45 discriminator 1 view .LVU248
 670 00c4 0028     		cmp	r0, #0
 671 00c6 F2D1     		bne	.L21
 672 00c8 E2E7     		b	.L20
 673              	.L28:
 288:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       }
 289:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       else
 290:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       {
 291:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         
 292:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         /* Read the Output block from the Output FIFO */
 293:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         *(uint32_t*)(outputaddr) = CRYP_DataOut();
 674              		.loc 1 293 9 is_stmt 1 view .LVU249
 675              		.loc 1 293 36 is_stmt 0 view .LVU250
 676 00ca FFF7FEFF 		bl	CRYP_DataOut
 677              	.LVL90:
 678              		.loc 1 293 34 view .LVU251
 679 00ce 3860     		str	r0, [r7]
 294:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         outputaddr+=4;
 680              		.loc 1 294 9 is_stmt 1 view .LVU252
 681              	.LVL91:
 295:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         *(uint32_t*)(outputaddr) = CRYP_DataOut();
 682              		.loc 1 295 9 view .LVU253
 683              		.loc 1 295 36 is_stmt 0 view .LVU254
 684 00d0 FFF7FEFF 		bl	CRYP_DataOut
 685              	.LVL92:
 686              		.loc 1 295 34 view .LVU255
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 28


 687 00d4 7860     		str	r0, [r7, #4]
 296:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****         outputaddr+=4;
 688              		.loc 1 296 9 is_stmt 1 view .LVU256
 689              		.loc 1 296 19 is_stmt 0 view .LVU257
 690 00d6 0837     		adds	r7, r7, #8
 691              	.LVL93:
 692              		.loc 1 296 19 view .LVU258
 693 00d8 DCE7     		b	.L22
 694              	.L23:
 297:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****       }
 298:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     }
 299:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     
 300:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     /* Disable Crypto */
 301:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****     CRYP_Cmd(DISABLE);
 695              		.loc 1 301 5 is_stmt 1 view .LVU259
 696 00da 0020     		movs	r0, #0
 697 00dc FFF7FEFF 		bl	CRYP_Cmd
 698              	.LVL94:
 699              	.L18:
 302:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   }
 303:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c ****   return status; 
 700              		.loc 1 303 3 view .LVU260
 304:STM32F4xx_LIB/periph/src/stm32f4xx_cryp_tdes.c **** }
 701              		.loc 1 304 1 is_stmt 0 view .LVU261
 702 00e0 3046     		mov	r0, r6
 703 00e2 13B0     		add	sp, sp, #76
 704              	.LCFI5:
 705              		.cfi_def_cfa_offset 28
 706              		@ sp needed
 707 00e4 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 708              		.loc 1 304 1 view .LVU262
 709              		.cfi_endproc
 710              	.LFE124:
 712              		.text
 713              	.Letext0:
 714              		.file 3 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\machine\\_default_types.h"
 715              		.file 4 "d:\\gcc_tool\\gnu_tool_arm_embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 716              		.file 5 "STM32F4xx_LIB/core/core_cm4.h"
 717              		.file 6 "User/system_stm32f4xx.h"
 718              		.file 7 "User/stm32f4xx.h"
 719              		.file 8 "STM32F4xx_LIB/periph/inc/stm32f4xx_cryp.h"
ARM GAS  C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_cryp_tdes.c
C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s:18     .text.CRYP_TDES_ECB:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s:26     .text.CRYP_TDES_ECB:00000000 CRYP_TDES_ECB
C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s:344    .text.CRYP_TDES_CBC:00000000 $t
C:\Users\æ©€Ú\AppData\Local\Temp\ccPeXLh2.s:351    .text.CRYP_TDES_CBC:00000000 CRYP_TDES_CBC

UNDEFINED SYMBOLS
CRYP_KeyStructInit
CRYP_Init
CRYP_KeyInit
CRYP_FIFOFlush
CRYP_Cmd
CRYP_GetCmdStatus
CRYP_DataIn
CRYP_GetFlagStatus
CRYP_DataOut
CRYP_IVInit
